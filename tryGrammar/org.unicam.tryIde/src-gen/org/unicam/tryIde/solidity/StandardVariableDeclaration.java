/**
 * generated by Xtext 2.19.0
 */
package org.unicam.tryIde.solidity;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Standard Variable Declaration</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.unicam.tryIde.solidity.StandardVariableDeclaration#getType <em>Type</em>}</li>
 *   <li>{@link org.unicam.tryIde.solidity.StandardVariableDeclaration#getOptionalElements <em>Optional Elements</em>}</li>
 *   <li>{@link org.unicam.tryIde.solidity.StandardVariableDeclaration#getVariable <em>Variable</em>}</li>
 *   <li>{@link org.unicam.tryIde.solidity.StandardVariableDeclaration#getExpression <em>Expression</em>}</li>
 *   <li>{@link org.unicam.tryIde.solidity.StandardVariableDeclaration#isSemicolon <em>Semicolon</em>}</li>
 * </ul>
 *
 * @see org.unicam.tryIde.solidity.SolidityPackage#getStandardVariableDeclaration()
 * @model
 * @generated
 */
public interface StandardVariableDeclaration extends Statement, SimpleStatement, SimpleStatement2
{
  /**
   * Returns the value of the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Type</em>' containment reference.
   * @see #setType(EObject)
   * @see org.unicam.tryIde.solidity.SolidityPackage#getStandardVariableDeclaration_Type()
   * @model containment="true"
   * @generated
   */
  EObject getType();

  /**
   * Sets the value of the '{@link org.unicam.tryIde.solidity.StandardVariableDeclaration#getType <em>Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Type</em>' containment reference.
   * @see #getType()
   * @generated
   */
  void setType(EObject value);

  /**
   * Returns the value of the '<em><b>Optional Elements</b></em>' containment reference list.
   * The list contents are of type {@link org.unicam.tryIde.solidity.VariableDeclarationOptionalElement}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Optional Elements</em>' containment reference list.
   * @see org.unicam.tryIde.solidity.SolidityPackage#getStandardVariableDeclaration_OptionalElements()
   * @model containment="true"
   * @generated
   */
  EList<VariableDeclarationOptionalElement> getOptionalElements();

  /**
   * Returns the value of the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Variable</em>' containment reference.
   * @see #setVariable(Variable)
   * @see org.unicam.tryIde.solidity.SolidityPackage#getStandardVariableDeclaration_Variable()
   * @model containment="true"
   * @generated
   */
  Variable getVariable();

  /**
   * Sets the value of the '{@link org.unicam.tryIde.solidity.StandardVariableDeclaration#getVariable <em>Variable</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Variable</em>' containment reference.
   * @see #getVariable()
   * @generated
   */
  void setVariable(Variable value);

  /**
   * Returns the value of the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Expression</em>' containment reference.
   * @see #setExpression(Expression)
   * @see org.unicam.tryIde.solidity.SolidityPackage#getStandardVariableDeclaration_Expression()
   * @model containment="true"
   * @generated
   */
  Expression getExpression();

  /**
   * Sets the value of the '{@link org.unicam.tryIde.solidity.StandardVariableDeclaration#getExpression <em>Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Expression</em>' containment reference.
   * @see #getExpression()
   * @generated
   */
  void setExpression(Expression value);

  /**
   * Returns the value of the '<em><b>Semicolon</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Semicolon</em>' attribute.
   * @see #setSemicolon(boolean)
   * @see org.unicam.tryIde.solidity.SolidityPackage#getStandardVariableDeclaration_Semicolon()
   * @model
   * @generated
   */
  boolean isSemicolon();

  /**
   * Sets the value of the '{@link org.unicam.tryIde.solidity.StandardVariableDeclaration#isSemicolon <em>Semicolon</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Semicolon</em>' attribute.
   * @see #isSemicolon()
   * @generated
   */
  void setSemicolon(boolean value);

} // StandardVariableDeclaration
