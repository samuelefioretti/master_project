/**
 * generated by Xtext 2.19.0
 */
package org.unicam.tryIde.solidity.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.unicam.tryIde.solidity.Field;
import org.unicam.tryIde.solidity.Qualifier;
import org.unicam.tryIde.solidity.SolidityPackage;
import org.unicam.tryIde.solidity.SpecialExpression;
import org.unicam.tryIde.solidity.SpecialExpressionTypeEnum;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Special Expression</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.unicam.tryIde.solidity.impl.SpecialExpressionImpl#getType <em>Type</em>}</li>
 *   <li>{@link org.unicam.tryIde.solidity.impl.SpecialExpressionImpl#getFieldOrMethod <em>Field Or Method</em>}</li>
 *   <li>{@link org.unicam.tryIde.solidity.impl.SpecialExpressionImpl#getQualifiers <em>Qualifiers</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SpecialExpressionImpl extends ExpressionImpl implements SpecialExpression
{
  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final SpecialExpressionTypeEnum TYPE_EDEFAULT = SpecialExpressionTypeEnum.SUPER;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected SpecialExpressionTypeEnum type = TYPE_EDEFAULT;

  /**
   * The cached value of the '{@link #getFieldOrMethod() <em>Field Or Method</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFieldOrMethod()
   * @generated
   * @ordered
   */
  protected Field fieldOrMethod;

  /**
   * The cached value of the '{@link #getQualifiers() <em>Qualifiers</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQualifiers()
   * @generated
   * @ordered
   */
  protected EList<Qualifier> qualifiers;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SpecialExpressionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SolidityPackage.eINSTANCE.getSpecialExpression();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SpecialExpressionTypeEnum getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(SpecialExpressionTypeEnum newType)
  {
    SpecialExpressionTypeEnum oldType = type;
    type = newType == null ? TYPE_EDEFAULT : newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SolidityPackage.SPECIAL_EXPRESSION__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Field getFieldOrMethod()
  {
    return fieldOrMethod;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFieldOrMethod(Field newFieldOrMethod, NotificationChain msgs)
  {
    Field oldFieldOrMethod = fieldOrMethod;
    fieldOrMethod = newFieldOrMethod;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SolidityPackage.SPECIAL_EXPRESSION__FIELD_OR_METHOD, oldFieldOrMethod, newFieldOrMethod);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFieldOrMethod(Field newFieldOrMethod)
  {
    if (newFieldOrMethod != fieldOrMethod)
    {
      NotificationChain msgs = null;
      if (fieldOrMethod != null)
        msgs = ((InternalEObject)fieldOrMethod).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SolidityPackage.SPECIAL_EXPRESSION__FIELD_OR_METHOD, null, msgs);
      if (newFieldOrMethod != null)
        msgs = ((InternalEObject)newFieldOrMethod).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SolidityPackage.SPECIAL_EXPRESSION__FIELD_OR_METHOD, null, msgs);
      msgs = basicSetFieldOrMethod(newFieldOrMethod, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SolidityPackage.SPECIAL_EXPRESSION__FIELD_OR_METHOD, newFieldOrMethod, newFieldOrMethod));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Qualifier> getQualifiers()
  {
    if (qualifiers == null)
    {
      qualifiers = new EObjectContainmentEList<Qualifier>(Qualifier.class, this, SolidityPackage.SPECIAL_EXPRESSION__QUALIFIERS);
    }
    return qualifiers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SolidityPackage.SPECIAL_EXPRESSION__FIELD_OR_METHOD:
        return basicSetFieldOrMethod(null, msgs);
      case SolidityPackage.SPECIAL_EXPRESSION__QUALIFIERS:
        return ((InternalEList<?>)getQualifiers()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SolidityPackage.SPECIAL_EXPRESSION__TYPE:
        return getType();
      case SolidityPackage.SPECIAL_EXPRESSION__FIELD_OR_METHOD:
        return getFieldOrMethod();
      case SolidityPackage.SPECIAL_EXPRESSION__QUALIFIERS:
        return getQualifiers();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SolidityPackage.SPECIAL_EXPRESSION__TYPE:
        setType((SpecialExpressionTypeEnum)newValue);
        return;
      case SolidityPackage.SPECIAL_EXPRESSION__FIELD_OR_METHOD:
        setFieldOrMethod((Field)newValue);
        return;
      case SolidityPackage.SPECIAL_EXPRESSION__QUALIFIERS:
        getQualifiers().clear();
        getQualifiers().addAll((Collection<? extends Qualifier>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SolidityPackage.SPECIAL_EXPRESSION__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case SolidityPackage.SPECIAL_EXPRESSION__FIELD_OR_METHOD:
        setFieldOrMethod((Field)null);
        return;
      case SolidityPackage.SPECIAL_EXPRESSION__QUALIFIERS:
        getQualifiers().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SolidityPackage.SPECIAL_EXPRESSION__TYPE:
        return type != TYPE_EDEFAULT;
      case SolidityPackage.SPECIAL_EXPRESSION__FIELD_OR_METHOD:
        return fieldOrMethod != null;
      case SolidityPackage.SPECIAL_EXPRESSION__QUALIFIERS:
        return qualifiers != null && !qualifiers.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (type: ");
    result.append(type);
    result.append(')');
    return result.toString();
  }

} //SpecialExpressionImpl
