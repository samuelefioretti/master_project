contract HotelBooking {
	uint256 counter;
	uint16 counter;
	uint8 counter;
	uint32 counter;
	
	event stateChanged;
	mapping (string=>uint) position;
	enum State {DISABLED, ENABLED, DONE} State s;
	mapping(string => string) operator;
	
	struct Element {
		string ID;
		State status;
	}
	
	struct StateMemory {
		uint quotation;
		bool confirmation;
		string date;
		uint bedrooms;
		bool confirm;
		string motivation;
		string booking_id;
		bool cancel;
		string ID;
	}
	
	Element[] elements;
	StateMemory currentMemory;
	
	string[] elementsID = ["ExclusiveGateway_106je4z", "Message_1em0ee4", "Message_1nlagx2", "Message_045i10y", "Message_0r9lypd", "ExclusiveGateway_0hs3ztq", "StartEvent_1jtgn3j", "EventBasedGateway_1fxpmyn", "Message_0o8eyir", "Message_1xm9dxy", "EndEvent_0366pfz", "Message_1ljlm4g", "Message_0m9p3da", "ExclusiveGateway_0nzwv7v", "EndEvent_08edp7f", "Message_1joj7ca", "Message_1etcmvl", "EndEvent_146eii4"];
	string[] roleList = ["Client", "Hotel"];
	string[] optionalList = [""];
	
	mapping(string=>address) roles;
	mapping(string=>address) optionalRoles;
	
	public function subscribe_as_participant(string memory _role) public {
		if(optionalRoles[_role]==0x0000000000000000000000000000000000000000) {
			optionalRoles[_role]=msg.sender;
		}
	}
	
	function ExclusiveGateway_106je4z() {
		require(elements[position["ExclusiveGateway_106je4z"]].status==State.ENABLED);
		done("ExclusiveGateway_106je4z");
		
		if(currentMemory.confirm==true) {
			enable("Message_1em0ee4");
		}
		
		if(currentMemory.confirm==false) {
			enable("ExclusiveGateway_0hs3ztq");
			ExclusiveGateway_0hs3ztq();
		}
	}
}