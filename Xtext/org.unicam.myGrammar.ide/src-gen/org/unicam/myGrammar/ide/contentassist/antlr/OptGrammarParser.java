/*
 * generated by Xtext 2.19.0
 */
package org.unicam.myGrammar.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.unicam.myGrammar.ide.contentassist.antlr.internal.InternalOptGrammarParser;
import org.unicam.myGrammar.services.OptGrammarGrammarAccess;

public class OptGrammarParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(OptGrammarGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, OptGrammarGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getDefinitionBodyAccess().getAlternatives_2(), "rule__DefinitionBody__Alternatives_2");
			builder.put(grammarAccess.getFunctionDefinitionAccess().getAlternatives_6(), "rule__FunctionDefinition__Alternatives_6");
			builder.put(grammarAccess.getFunctionCallArgumentsAccess().getAlternatives(), "rule__FunctionCallArguments__Alternatives");
			builder.put(grammarAccess.getFunctionDefinitionOptionalElementAccess().getAlternatives(), "rule__FunctionDefinitionOptionalElement__Alternatives");
			builder.put(grammarAccess.getVariableDeclarationAccess().getAlternatives(), "rule__VariableDeclaration__Alternatives");
			builder.put(grammarAccess.getVariableDeclarationOptionalElementAccess().getAlternatives(), "rule__VariableDeclarationOptionalElement__Alternatives");
			builder.put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
			builder.put(grammarAccess.getStandardTypeAccess().getAlternatives(), "rule__StandardType__Alternatives");
			builder.put(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getAlternatives(), "rule__StandardTypeWithoutQualifiedIdentifier__Alternatives");
			builder.put(grammarAccess.getSimpleStatementAccess().getAlternatives_0(), "rule__SimpleStatement__Alternatives_0");
			builder.put(grammarAccess.getSimpleStatementAccess().getAlternatives_0_1_1(), "rule__SimpleStatement__Alternatives_0_1_1");
			builder.put(grammarAccess.getSimpleStatement2Access().getAlternatives(), "rule__SimpleStatement2__Alternatives");
			builder.put(grammarAccess.getSimpleStatement2Access().getAlternatives_1_1(), "rule__SimpleStatement2__Alternatives_1_1");
			builder.put(grammarAccess.getQualifierAccess().getAlternatives(), "rule__Qualifier__Alternatives");
			builder.put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
			builder.put(grammarAccess.getStatementAccess().getAlternatives_5(), "rule__Statement__Alternatives_5");
			builder.put(grammarAccess.getSpecialExpressionAccess().getQualifiersAlternatives_2_0(), "rule__SpecialExpression__QualifiersAlternatives_2_0");
			builder.put(grammarAccess.getAssignmentAccess().getAlternatives_1(), "rule__Assignment__Alternatives_1");
			builder.put(grammarAccess.getUnaryExpressionAccess().getAlternatives(), "rule__UnaryExpression__Alternatives");
			builder.put(grammarAccess.getSignExpressionAccess().getSignOpAlternatives_0_0(), "rule__SignExpression__SignOpAlternatives_0_0");
			builder.put(grammarAccess.getPreExpressionAccess().getAlternatives(), "rule__PreExpression__Alternatives");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getAlternatives(), "rule__PrimaryExpression__Alternatives");
			builder.put(grammarAccess.getLiteralAccess().getAlternatives(), "rule__Literal__Alternatives");
			builder.put(grammarAccess.getMathematicalFunctionAccess().getFunctionAlternatives_0_0(), "rule__MathematicalFunction__FunctionAlternatives_0_0");
			builder.put(grammarAccess.getHashFunctionAccess().getNameAlternatives_0_0(), "rule__HashFunction__NameAlternatives_0_0");
			builder.put(grammarAccess.getIntParameterAccess().getAlternatives(), "rule__IntParameter__Alternatives");
			builder.put(grammarAccess.getPrimaryArithmeticAccess().getAlternatives(), "rule__PrimaryArithmetic__Alternatives");
			builder.put(grammarAccess.getSecondOperatorsAccess().getOperatorAlternatives_0_0(), "rule__SecondOperators__OperatorAlternatives_0_0");
			builder.put(grammarAccess.getNumberAccess().getAlternatives_0(), "rule__Number__Alternatives_0");
			builder.put(grammarAccess.getUnitTypesAccess().getAlternatives(), "rule__UnitTypes__Alternatives");
			builder.put(grammarAccess.getSpecialVariablesTypeEnumAccess().getNameAlternatives_0(), "rule__SpecialVariablesTypeEnum__NameAlternatives_0");
			builder.put(grammarAccess.getElementaryTypeNameEnumAccess().getAlternatives(), "rule__ElementaryTypeNameEnum__Alternatives");
			builder.put(grammarAccess.getLocationSpecifierEnumAccess().getAlternatives(), "rule__LocationSpecifierEnum__Alternatives");
			builder.put(grammarAccess.getVisibilityEnumAccess().getAlternatives(), "rule__VisibilityEnum__Alternatives");
			builder.put(grammarAccess.getAssignmentOpEnumAccess().getAlternatives(), "rule__AssignmentOpEnum__Alternatives");
			builder.put(grammarAccess.getEqualityOpEnumAccess().getAlternatives(), "rule__EqualityOpEnum__Alternatives");
			builder.put(grammarAccess.getComparisonOpEnumAccess().getAlternatives(), "rule__ComparisonOpEnum__Alternatives");
			builder.put(grammarAccess.getShiftOpEnumAccess().getAlternatives(), "rule__ShiftOpEnum__Alternatives");
			builder.put(grammarAccess.getAdditionOpEnumAccess().getAlternatives(), "rule__AdditionOpEnum__Alternatives");
			builder.put(grammarAccess.getMulDivModOpEnumAccess().getAlternatives(), "rule__MulDivModOpEnum__Alternatives");
			builder.put(grammarAccess.getIncDecOpEnumAccess().getAlternatives(), "rule__IncDecOpEnum__Alternatives");
			builder.put(grammarAccess.getBooleanLiteralEnumAccess().getAlternatives(), "rule__BooleanLiteralEnum__Alternatives");
			builder.put(grammarAccess.getEtherSubDenominationEnumAccess().getAlternatives(), "rule__EtherSubDenominationEnum__Alternatives");
			builder.put(grammarAccess.getTimeSubdenominationEnumAccess().getAlternatives(), "rule__TimeSubdenominationEnum__Alternatives");
			builder.put(grammarAccess.getSpecialExpressionTypeEnumAccess().getAlternatives(), "rule__SpecialExpressionTypeEnum__Alternatives");
			builder.put(grammarAccess.getReservedWordsEnumAccess().getAlternatives(), "rule__ReservedWordsEnum__Alternatives");
			builder.put(grammarAccess.getContractAccess().getGroup(), "rule__Contract__Group__0");
			builder.put(grammarAccess.getContractAccess().getGroup_2(), "rule__Contract__Group_2__0");
			builder.put(grammarAccess.getContractAccess().getGroup_2_1(), "rule__Contract__Group_2_1__0");
			builder.put(grammarAccess.getInheritanceSpecifierAccess().getGroup(), "rule__InheritanceSpecifier__Group__0");
			builder.put(grammarAccess.getDefinitionBodyAccess().getGroup(), "rule__DefinitionBody__Group__0");
			builder.put(grammarAccess.getDefinitionBodyAccess().getGroup_2_3(), "rule__DefinitionBody__Group_2_3__0");
			builder.put(grammarAccess.getFunctionDefinitionAccess().getGroup(), "rule__FunctionDefinition__Group__0");
			builder.put(grammarAccess.getFunctionDefinitionAccess().getGroup_5(), "rule__FunctionDefinition__Group_5__0");
			builder.put(grammarAccess.getFunctionCallListArgumentsAccess().getGroup(), "rule__FunctionCallListArguments__Group__0");
			builder.put(grammarAccess.getFunctionCallListArgumentsAccess().getGroup_2(), "rule__FunctionCallListArguments__Group_2__0");
			builder.put(grammarAccess.getFunctionCallListArgumentsAccess().getGroup_2_1(), "rule__FunctionCallListArguments__Group_2_1__0");
			builder.put(grammarAccess.getFunctionCallArgumentsAccess().getGroup_0(), "rule__FunctionCallArguments__Group_0__0");
			builder.put(grammarAccess.getFunctionCallArgumentsAccess().getGroup_0_3(), "rule__FunctionCallArguments__Group_0_3__0");
			builder.put(grammarAccess.getFunctionCallArgumentsAccess().getGroup_0_3_1(), "rule__FunctionCallArguments__Group_0_3_1__0");
			builder.put(grammarAccess.getFunctionCallArgAccess().getGroup(), "rule__FunctionCallArg__Group__0");
			builder.put(grammarAccess.getConstAccess().getGroup(), "rule__Const__Group__0");
			builder.put(grammarAccess.getStructDefinitionAccess().getGroup(), "rule__StructDefinition__Group__0");
			builder.put(grammarAccess.getStructDefinitionAccess().getGroup_4(), "rule__StructDefinition__Group_4__0");
			builder.put(grammarAccess.getEnumDefinitionAccess().getGroup(), "rule__EnumDefinition__Group__0");
			builder.put(grammarAccess.getEnumDefinitionAccess().getGroup_5(), "rule__EnumDefinition__Group_5__0");
			builder.put(grammarAccess.getStandardVariableDeclarationAccess().getGroup(), "rule__StandardVariableDeclaration__Group__0");
			builder.put(grammarAccess.getStandardVariableDeclarationAccess().getGroup_3(), "rule__StandardVariableDeclaration__Group_3__0");
			builder.put(grammarAccess.getVarVariableDeclarationAccess().getGroup(), "rule__VarVariableDeclaration__Group__0");
			builder.put(grammarAccess.getVarVariableDeclarationAccess().getGroup_2(), "rule__VarVariableDeclaration__Group_2__0");
			builder.put(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getGroup(), "rule__VarVariableTupleVariableDeclaration__Group__0");
			builder.put(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getGroup_2(), "rule__VarVariableTupleVariableDeclaration__Group_2__0");
			builder.put(grammarAccess.getIndexedSpeciferAccess().getGroup(), "rule__IndexedSpecifer__Group__0");
			builder.put(grammarAccess.getConstantSpecifierAccess().getGroup(), "rule__ConstantSpecifier__Group__0");
			builder.put(grammarAccess.getStandardTypeAccess().getGroup_0(), "rule__StandardType__Group_0__0");
			builder.put(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getGroup_0(), "rule__StandardTypeWithoutQualifiedIdentifier__Group_0__0");
			builder.put(grammarAccess.getMappingAccess().getGroup(), "rule__Mapping__Group__0");
			builder.put(grammarAccess.getArrayDimensionsAccess().getGroup(), "rule__ArrayDimensions__Group__0");
			builder.put(grammarAccess.getArrayDimensionsAccess().getGroup_4(), "rule__ArrayDimensions__Group_4__0");
			builder.put(grammarAccess.getTupleAccess().getGroup(), "rule__Tuple__Group__0");
			builder.put(grammarAccess.getTupleAccess().getGroup_2(), "rule__Tuple__Group_2__0");
			builder.put(grammarAccess.getTupleAccess().getGroup_2_1(), "rule__Tuple__Group_2_1__0");
			builder.put(grammarAccess.getTupleSeparatorAccess().getGroup(), "rule__TupleSeparator__Group__0");
			builder.put(grammarAccess.getSimpleStatementAccess().getGroup(), "rule__SimpleStatement__Group__0");
			builder.put(grammarAccess.getSimpleStatementAccess().getGroup_0_0(), "rule__SimpleStatement__Group_0_0__0");
			builder.put(grammarAccess.getSimpleStatementAccess().getGroup_0_0_1(), "rule__SimpleStatement__Group_0_0_1__0");
			builder.put(grammarAccess.getSimpleStatementAccess().getGroup_0_0_1_3(), "rule__SimpleStatement__Group_0_0_1_3__0");
			builder.put(grammarAccess.getSimpleStatementAccess().getGroup_0_1(), "rule__SimpleStatement__Group_0_1__0");
			builder.put(grammarAccess.getSimpleStatementAccess().getGroup_0_1_1_0(), "rule__SimpleStatement__Group_0_1_1_0__0");
			builder.put(grammarAccess.getSimpleStatementAccess().getGroup_0_1_1_0_2(), "rule__SimpleStatement__Group_0_1_1_0_2__0");
			builder.put(grammarAccess.getSimpleStatementAccess().getGroup_0_1_1_1(), "rule__SimpleStatement__Group_0_1_1_1__0");
			builder.put(grammarAccess.getSimpleStatementAccess().getGroup_0_1_1_1_2(), "rule__SimpleStatement__Group_0_1_1_1_2__0");
			builder.put(grammarAccess.getSimpleStatement2Access().getGroup_0(), "rule__SimpleStatement2__Group_0__0");
			builder.put(grammarAccess.getSimpleStatement2Access().getGroup_0_1(), "rule__SimpleStatement2__Group_0_1__0");
			builder.put(grammarAccess.getSimpleStatement2Access().getGroup_0_1_3(), "rule__SimpleStatement2__Group_0_1_3__0");
			builder.put(grammarAccess.getSimpleStatement2Access().getGroup_1(), "rule__SimpleStatement2__Group_1__0");
			builder.put(grammarAccess.getSimpleStatement2Access().getGroup_1_1_0(), "rule__SimpleStatement2__Group_1_1_0__0");
			builder.put(grammarAccess.getSimpleStatement2Access().getGroup_1_1_0_2(), "rule__SimpleStatement2__Group_1_1_0_2__0");
			builder.put(grammarAccess.getSimpleStatement2Access().getGroup_1_1_1(), "rule__SimpleStatement2__Group_1_1_1__0");
			builder.put(grammarAccess.getSimpleStatement2Access().getGroup_1_1_1_2(), "rule__SimpleStatement2__Group_1_1_1_2__0");
			builder.put(grammarAccess.getQualifiedIdentifierAccess().getGroup(), "rule__QualifiedIdentifier__Group__0");
			builder.put(grammarAccess.getFieldAccess().getGroup(), "rule__Field__Group__0");
			builder.put(grammarAccess.getIndexAccess().getGroup(), "rule__Index__Group__0");
			builder.put(grammarAccess.getModifierAccess().getGroup(), "rule__Modifier__Group__0");
			builder.put(grammarAccess.getEventAccess().getGroup(), "rule__Event__Group__0");
			builder.put(grammarAccess.getModifierInvocationAccess().getGroup(), "rule__ModifierInvocation__Group__0");
			builder.put(grammarAccess.getParameterListAccess().getGroup(), "rule__ParameterList__Group__0");
			builder.put(grammarAccess.getParameterListAccess().getGroup_2(), "rule__ParameterList__Group_2__0");
			builder.put(grammarAccess.getParameterListAccess().getGroup_2_1(), "rule__ParameterList__Group_2_1__0");
			builder.put(grammarAccess.getReturnsParameterListAccess().getGroup(), "rule__ReturnsParameterList__Group__0");
			builder.put(grammarAccess.getReturnsParameterListAccess().getGroup_2(), "rule__ReturnsParameterList__Group_2__0");
			builder.put(grammarAccess.getReturnsParameterListAccess().getGroup_2_1(), "rule__ReturnsParameterList__Group_2_1__0");
			builder.put(grammarAccess.getReturnParameterDeclarationAccess().getGroup(), "rule__ReturnParameterDeclaration__Group__0");
			builder.put(grammarAccess.getDeleteStatementAccess().getGroup(), "rule__DeleteStatement__Group__0");
			builder.put(grammarAccess.getIfStatementAccess().getGroup(), "rule__IfStatement__Group__0");
			builder.put(grammarAccess.getIfStatementAccess().getGroup_5(), "rule__IfStatement__Group_5__0");
			builder.put(grammarAccess.getWhileStatementAccess().getGroup(), "rule__WhileStatement__Group__0");
			builder.put(grammarAccess.getForStatementAccess().getGroup(), "rule__ForStatement__Group__0");
			builder.put(grammarAccess.getBodyAccess().getGroup(), "rule__Body__Group__0");
			builder.put(grammarAccess.getBodyAccess().getGroup_2(), "rule__Body__Group_2__0");
			builder.put(grammarAccess.getContinueStatementAccess().getGroup(), "rule__ContinueStatement__Group__0");
			builder.put(grammarAccess.getBreakStatementAccess().getGroup(), "rule__BreakStatement__Group__0");
			builder.put(grammarAccess.getReturnStatementAccess().getGroup(), "rule__ReturnStatement__Group__0");
			builder.put(grammarAccess.getThrowStatementAccess().getGroup(), "rule__ThrowStatement__Group__0");
			builder.put(grammarAccess.getPlaceHolderStatementAccess().getGroup(), "rule__PlaceHolderStatement__Group__0");
			builder.put(grammarAccess.getSpecialExpressionAccess().getGroup(), "rule__SpecialExpression__Group__0");
			builder.put(grammarAccess.getAssignmentAccess().getGroup(), "rule__Assignment__Group__0");
			builder.put(grammarAccess.getAssignmentAccess().getGroup_1_0(), "rule__Assignment__Group_1_0__0");
			builder.put(grammarAccess.getAssignmentAccess().getGroup_1_1(), "rule__Assignment__Group_1_1__0");
			builder.put(grammarAccess.getAssignmentAccess().getGroup_1_1_2(), "rule__Assignment__Group_1_1_2__0");
			builder.put(grammarAccess.getOrAccess().getGroup(), "rule__Or__Group__0");
			builder.put(grammarAccess.getOrAccess().getGroup_1(), "rule__Or__Group_1__0");
			builder.put(grammarAccess.getAndAccess().getGroup(), "rule__And__Group__0");
			builder.put(grammarAccess.getAndAccess().getGroup_1(), "rule__And__Group_1__0");
			builder.put(grammarAccess.getEqualityAccess().getGroup(), "rule__Equality__Group__0");
			builder.put(grammarAccess.getEqualityAccess().getGroup_1(), "rule__Equality__Group_1__0");
			builder.put(grammarAccess.getComparisonAccess().getGroup(), "rule__Comparison__Group__0");
			builder.put(grammarAccess.getComparisonAccess().getGroup_1(), "rule__Comparison__Group_1__0");
			builder.put(grammarAccess.getBitOrAccess().getGroup(), "rule__BitOr__Group__0");
			builder.put(grammarAccess.getBitOrAccess().getGroup_1(), "rule__BitOr__Group_1__0");
			builder.put(grammarAccess.getBitXorAccess().getGroup(), "rule__BitXor__Group__0");
			builder.put(grammarAccess.getBitXorAccess().getGroup_1(), "rule__BitXor__Group_1__0");
			builder.put(grammarAccess.getBitAndAccess().getGroup(), "rule__BitAnd__Group__0");
			builder.put(grammarAccess.getBitAndAccess().getGroup_1(), "rule__BitAnd__Group_1__0");
			builder.put(grammarAccess.getShiftAccess().getGroup(), "rule__Shift__Group__0");
			builder.put(grammarAccess.getShiftAccess().getGroup_1(), "rule__Shift__Group_1__0");
			builder.put(grammarAccess.getAddSubAccess().getGroup(), "rule__AddSub__Group__0");
			builder.put(grammarAccess.getAddSubAccess().getGroup_1(), "rule__AddSub__Group_1__0");
			builder.put(grammarAccess.getAddSubAccess().getGroup_1_0(), "rule__AddSub__Group_1_0__0");
			builder.put(grammarAccess.getMulDivModAccess().getGroup(), "rule__MulDivMod__Group__0");
			builder.put(grammarAccess.getMulDivModAccess().getGroup_1(), "rule__MulDivMod__Group_1__0");
			builder.put(grammarAccess.getExponentAccess().getGroup(), "rule__Exponent__Group__0");
			builder.put(grammarAccess.getExponentAccess().getGroup_1(), "rule__Exponent__Group_1__0");
			builder.put(grammarAccess.getNotExpressionAccess().getGroup(), "rule__NotExpression__Group__0");
			builder.put(grammarAccess.getBinaryNotExpressionAccess().getGroup(), "rule__BinaryNotExpression__Group__0");
			builder.put(grammarAccess.getSignExpressionAccess().getGroup(), "rule__SignExpression__Group__0");
			builder.put(grammarAccess.getNewExpressionAccess().getGroup(), "rule__NewExpression__Group__0");
			builder.put(grammarAccess.getPreExpressionAccess().getGroup_1(), "rule__PreExpression__Group_1__0");
			builder.put(grammarAccess.getPreExpressionAccess().getGroup_2(), "rule__PreExpression__Group_2__0");
			builder.put(grammarAccess.getPostIncDecExpressionAccess().getGroup(), "rule__PostIncDecExpression__Group__0");
			builder.put(grammarAccess.getPostIncDecExpressionAccess().getGroup_1(), "rule__PostIncDecExpression__Group_1__0");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getGroup_4(), "rule__PrimaryExpression__Group_4__0");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getGroup_4_2(), "rule__PrimaryExpression__Group_4_2__0");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getGroup_4_2_1(), "rule__PrimaryExpression__Group_4_2_1__0");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getGroup_5(), "rule__PrimaryExpression__Group_5__0");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getGroup_5_2(), "rule__PrimaryExpression__Group_5_2__0");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getGroup_5_2_2(), "rule__PrimaryExpression__Group_5_2_2__0");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getGroup_6(), "rule__PrimaryExpression__Group_6__0");
			builder.put(grammarAccess.getGasleftFunctionAccess().getGroup(), "rule__GasleftFunction__Group__0");
			builder.put(grammarAccess.getBlockhashFunctionAccess().getGroup(), "rule__BlockhashFunction__Group__0");
			builder.put(grammarAccess.getMathematicalFunctionAccess().getGroup(), "rule__MathematicalFunction__Group__0");
			builder.put(grammarAccess.getEcrecoverFunctionAccess().getGroup(), "rule__EcrecoverFunction__Group__0");
			builder.put(grammarAccess.getHashFunctionAccess().getGroup(), "rule__HashFunction__Group__0");
			builder.put(grammarAccess.getFunctionCallAccess().getGroup(), "rule__FunctionCall__Group__0");
			builder.put(grammarAccess.getFunctionCallAccess().getGroup_2(), "rule__FunctionCall__Group_2__0");
			builder.put(grammarAccess.getFunctionCallAccess().getGroup_2_1(), "rule__FunctionCall__Group_2_1__0");
			builder.put(grammarAccess.getArithmeticOperationsAccess().getGroup(), "rule__ArithmeticOperations__Group__0");
			builder.put(grammarAccess.getPrimaryArithmeticAccess().getGroup_1(), "rule__PrimaryArithmetic__Group_1__0");
			builder.put(grammarAccess.getSecondOperatorsAccess().getGroup(), "rule__SecondOperators__Group__0");
			builder.put(grammarAccess.getNumberAccess().getGroup(), "rule__Number__Group__0");
			builder.put(grammarAccess.getNowAccess().getGroup(), "rule__Now__Group__0");
			builder.put(grammarAccess.getEtherAccess().getGroup(), "rule__Ether__Group__0");
			builder.put(grammarAccess.getTimeAccess().getGroup(), "rule__Time__Group__0");
			builder.put(grammarAccess.getTypeCastAccess().getGroup(), "rule__TypeCast__Group__0");
			builder.put(grammarAccess.getSpecialVariablesAccess().getGroup(), "rule__SpecialVariables__Group__0");
			builder.put(grammarAccess.getModelAccess().getOperationsAssignment(), "rule__Model__OperationsAssignment");
			builder.put(grammarAccess.getContractAccess().getNameAssignment_1(), "rule__Contract__NameAssignment_1");
			builder.put(grammarAccess.getContractAccess().getInheritanceSpecifiersAssignment_2_0(), "rule__Contract__InheritanceSpecifiersAssignment_2_0");
			builder.put(grammarAccess.getContractAccess().getInheritanceSpecifiersAssignment_2_1_1(), "rule__Contract__InheritanceSpecifiersAssignment_2_1_1");
			builder.put(grammarAccess.getContractAccess().getBodyAssignment_3(), "rule__Contract__BodyAssignment_3");
			builder.put(grammarAccess.getInheritanceSpecifierAccess().getSuperTypeAssignment_0(), "rule__InheritanceSpecifier__SuperTypeAssignment_0");
			builder.put(grammarAccess.getInheritanceSpecifierAccess().getArgsAssignment_1(), "rule__InheritanceSpecifier__ArgsAssignment_1");
			builder.put(grammarAccess.getDefinitionBodyAccess().getFunctionsAssignment_2_0(), "rule__DefinitionBody__FunctionsAssignment_2_0");
			builder.put(grammarAccess.getDefinitionBodyAccess().getStructsAssignment_2_1(), "rule__DefinitionBody__StructsAssignment_2_1");
			builder.put(grammarAccess.getDefinitionBodyAccess().getEnumsAssignment_2_2(), "rule__DefinitionBody__EnumsAssignment_2_2");
			builder.put(grammarAccess.getDefinitionBodyAccess().getVariablesAssignment_2_3_0(), "rule__DefinitionBody__VariablesAssignment_2_3_0");
			builder.put(grammarAccess.getDefinitionBodyAccess().getModifiersAssignment_2_4(), "rule__DefinitionBody__ModifiersAssignment_2_4");
			builder.put(grammarAccess.getDefinitionBodyAccess().getEventsAssignment_2_5(), "rule__DefinitionBody__EventsAssignment_2_5");
			builder.put(grammarAccess.getFunctionDefinitionAccess().getPayableAssignment_0(), "rule__FunctionDefinition__PayableAssignment_0");
			builder.put(grammarAccess.getFunctionDefinitionAccess().getNameAssignment_2(), "rule__FunctionDefinition__NameAssignment_2");
			builder.put(grammarAccess.getFunctionDefinitionAccess().getParametersAssignment_3(), "rule__FunctionDefinition__ParametersAssignment_3");
			builder.put(grammarAccess.getFunctionDefinitionAccess().getOptionalElementsAssignment_4(), "rule__FunctionDefinition__OptionalElementsAssignment_4");
			builder.put(grammarAccess.getFunctionDefinitionAccess().getReturnParametersAssignment_5_1(), "rule__FunctionDefinition__ReturnParametersAssignment_5_1");
			builder.put(grammarAccess.getFunctionDefinitionAccess().getBlockAssignment_6_0(), "rule__FunctionDefinition__BlockAssignment_6_0");
			builder.put(grammarAccess.getFunctionCallListArgumentsAccess().getArgumentsAssignment_2_0(), "rule__FunctionCallListArguments__ArgumentsAssignment_2_0");
			builder.put(grammarAccess.getFunctionCallListArgumentsAccess().getArgumentsAssignment_2_1_1(), "rule__FunctionCallListArguments__ArgumentsAssignment_2_1_1");
			builder.put(grammarAccess.getFunctionCallArgumentsAccess().getArgsAssignment_0_3_0(), "rule__FunctionCallArguments__ArgsAssignment_0_3_0");
			builder.put(grammarAccess.getFunctionCallArgumentsAccess().getArgsAssignment_0_3_1_1(), "rule__FunctionCallArguments__ArgsAssignment_0_3_1_1");
			builder.put(grammarAccess.getFunctionCallArgAccess().getNameAssignment_0(), "rule__FunctionCallArg__NameAssignment_0");
			builder.put(grammarAccess.getFunctionCallArgAccess().getExprAssignment_2(), "rule__FunctionCallArg__ExprAssignment_2");
			builder.put(grammarAccess.getVisibilitySpecifierAccess().getVisibilityAssignment(), "rule__VisibilitySpecifier__VisibilityAssignment");
			builder.put(grammarAccess.getStructDefinitionAccess().getVisibilityAssignment_0(), "rule__StructDefinition__VisibilityAssignment_0");
			builder.put(grammarAccess.getStructDefinitionAccess().getNameAssignment_2(), "rule__StructDefinition__NameAssignment_2");
			builder.put(grammarAccess.getStructDefinitionAccess().getMembersAssignment_4_0(), "rule__StructDefinition__MembersAssignment_4_0");
			builder.put(grammarAccess.getEnumDefinitionAccess().getVisibilityAssignment_0(), "rule__EnumDefinition__VisibilityAssignment_0");
			builder.put(grammarAccess.getEnumDefinitionAccess().getNameAssignment_2(), "rule__EnumDefinition__NameAssignment_2");
			builder.put(grammarAccess.getEnumDefinitionAccess().getMembersAssignment_4(), "rule__EnumDefinition__MembersAssignment_4");
			builder.put(grammarAccess.getEnumDefinitionAccess().getMembersAssignment_5_1(), "rule__EnumDefinition__MembersAssignment_5_1");
			builder.put(grammarAccess.getEnumValueAccess().getNameAssignment(), "rule__EnumValue__NameAssignment");
			builder.put(grammarAccess.getVariableAccess().getNameAssignment(), "rule__Variable__NameAssignment");
			builder.put(grammarAccess.getStandardVariableDeclarationAccess().getTypeAssignment_0(), "rule__StandardVariableDeclaration__TypeAssignment_0");
			builder.put(grammarAccess.getStandardVariableDeclarationAccess().getOptionalElementsAssignment_1(), "rule__StandardVariableDeclaration__OptionalElementsAssignment_1");
			builder.put(grammarAccess.getStandardVariableDeclarationAccess().getVariableAssignment_2(), "rule__StandardVariableDeclaration__VariableAssignment_2");
			builder.put(grammarAccess.getStandardVariableDeclarationAccess().getExpressionAssignment_3_1(), "rule__StandardVariableDeclaration__ExpressionAssignment_3_1");
			builder.put(grammarAccess.getVarVariableDeclarationAccess().getVarTypeAssignment_0(), "rule__VarVariableDeclaration__VarTypeAssignment_0");
			builder.put(grammarAccess.getVarVariableDeclarationAccess().getVariableAssignment_1(), "rule__VarVariableDeclaration__VariableAssignment_1");
			builder.put(grammarAccess.getVarVariableDeclarationAccess().getExpressionAssignment_2_1(), "rule__VarVariableDeclaration__ExpressionAssignment_2_1");
			builder.put(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getVarTypeAssignment_0(), "rule__VarVariableTupleVariableDeclaration__VarTypeAssignment_0");
			builder.put(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getTupleAssignment_1(), "rule__VarVariableTupleVariableDeclaration__TupleAssignment_1");
			builder.put(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getExpressionAssignment_2_1(), "rule__VarVariableTupleVariableDeclaration__ExpressionAssignment_2_1");
			builder.put(grammarAccess.getLocationSpecifierAccess().getLocationAssignment(), "rule__LocationSpecifier__LocationAssignment");
			builder.put(grammarAccess.getTypeAccess().getIsVarTypeAssignment_1(), "rule__Type__IsVarTypeAssignment_1");
			builder.put(grammarAccess.getStandardTypeAccess().getDimensionAssignment_0_1(), "rule__StandardType__DimensionAssignment_0_1");
			builder.put(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getDimensionAssignment_0_1(), "rule__StandardTypeWithoutQualifiedIdentifier__DimensionAssignment_0_1");
			builder.put(grammarAccess.getElementaryTypeAccess().getNameAssignment(), "rule__ElementaryType__NameAssignment");
			builder.put(grammarAccess.getMappingAccess().getKeyTypeAssignment_2(), "rule__Mapping__KeyTypeAssignment_2");
			builder.put(grammarAccess.getMappingAccess().getValueTypeAssignment_4(), "rule__Mapping__ValueTypeAssignment_4");
			builder.put(grammarAccess.getArrayDimensionsAccess().getValueAssignment_2(), "rule__ArrayDimensions__ValueAssignment_2");
			builder.put(grammarAccess.getArrayDimensionsAccess().getValueAssignment_4_1(), "rule__ArrayDimensions__ValueAssignment_4_1");
			builder.put(grammarAccess.getTupleAccess().getMembersAssignment_2_0(), "rule__Tuple__MembersAssignment_2_0");
			builder.put(grammarAccess.getTupleAccess().getMembersAssignment_2_1_0(), "rule__Tuple__MembersAssignment_2_1_0");
			builder.put(grammarAccess.getTupleAccess().getMembersAssignment_2_1_1(), "rule__Tuple__MembersAssignment_2_1_1");
			builder.put(grammarAccess.getSimpleStatementAccess().getPtionalElementsAssignment_0_0_1_1(), "rule__SimpleStatement__PtionalElementsAssignment_0_0_1_1");
			builder.put(grammarAccess.getSimpleStatementAccess().getVariableAssignment_0_0_1_2(), "rule__SimpleStatement__VariableAssignment_0_0_1_2");
			builder.put(grammarAccess.getSimpleStatementAccess().getExpressionAssignment_0_0_1_3_1(), "rule__SimpleStatement__ExpressionAssignment_0_0_1_3_1");
			builder.put(grammarAccess.getSimpleStatementAccess().getVariableAssignment_0_1_1_0_1(), "rule__SimpleStatement__VariableAssignment_0_1_1_0_1");
			builder.put(grammarAccess.getSimpleStatementAccess().getExpressionAssignment_0_1_1_0_2_1(), "rule__SimpleStatement__ExpressionAssignment_0_1_1_0_2_1");
			builder.put(grammarAccess.getSimpleStatementAccess().getTupleAssignment_0_1_1_1_1(), "rule__SimpleStatement__TupleAssignment_0_1_1_1_1");
			builder.put(grammarAccess.getSimpleStatementAccess().getExpressionAssignment_0_1_1_1_2_1(), "rule__SimpleStatement__ExpressionAssignment_0_1_1_1_2_1");
			builder.put(grammarAccess.getSimpleStatementAccess().getSemicolonAssignment_1(), "rule__SimpleStatement__SemicolonAssignment_1");
			builder.put(grammarAccess.getSimpleStatement2Access().getOptionalElementsAssignment_0_1_1(), "rule__SimpleStatement2__OptionalElementsAssignment_0_1_1");
			builder.put(grammarAccess.getSimpleStatement2Access().getVariableAssignment_0_1_2(), "rule__SimpleStatement2__VariableAssignment_0_1_2");
			builder.put(grammarAccess.getSimpleStatement2Access().getExpressionAssignment_0_1_3_1(), "rule__SimpleStatement2__ExpressionAssignment_0_1_3_1");
			builder.put(grammarAccess.getSimpleStatement2Access().getVariableAssignment_1_1_0_1(), "rule__SimpleStatement2__VariableAssignment_1_1_0_1");
			builder.put(grammarAccess.getSimpleStatement2Access().getExpressionAssignment_1_1_0_2_1(), "rule__SimpleStatement2__ExpressionAssignment_1_1_0_2_1");
			builder.put(grammarAccess.getSimpleStatement2Access().getTupleAssignment_1_1_1_1(), "rule__SimpleStatement2__TupleAssignment_1_1_1_1");
			builder.put(grammarAccess.getSimpleStatement2Access().getExpressionAssignment_1_1_1_2_1(), "rule__SimpleStatement2__ExpressionAssignment_1_1_1_2_1");
			builder.put(grammarAccess.getExpressionStatementAccess().getExpressionAssignment(), "rule__ExpressionStatement__ExpressionAssignment");
			builder.put(grammarAccess.getQualifiedIdentifierAccess().getIdentifierAssignment_0(), "rule__QualifiedIdentifier__IdentifierAssignment_0");
			builder.put(grammarAccess.getQualifiedIdentifierAccess().getQualifiersAssignment_1(), "rule__QualifiedIdentifier__QualifiersAssignment_1");
			builder.put(grammarAccess.getFieldAccess().getFieldAssignment_1(), "rule__Field__FieldAssignment_1");
			builder.put(grammarAccess.getIndexAccess().getValueAssignment_2(), "rule__Index__ValueAssignment_2");
			builder.put(grammarAccess.getArgumentsAccess().getArgumentsAssignment(), "rule__Arguments__ArgumentsAssignment");
			builder.put(grammarAccess.getModifierAccess().getNameAssignment_1(), "rule__Modifier__NameAssignment_1");
			builder.put(grammarAccess.getModifierAccess().getParametersAssignment_2(), "rule__Modifier__ParametersAssignment_2");
			builder.put(grammarAccess.getModifierAccess().getBlockAssignment_3(), "rule__Modifier__BlockAssignment_3");
			builder.put(grammarAccess.getEventAccess().getNameAssignment_1(), "rule__Event__NameAssignment_1");
			builder.put(grammarAccess.getEventAccess().getParametersAssignment_2(), "rule__Event__ParametersAssignment_2");
			builder.put(grammarAccess.getModifierInvocationAccess().getNameAssignment_0(), "rule__ModifierInvocation__NameAssignment_0");
			builder.put(grammarAccess.getModifierInvocationAccess().getArgsAssignment_1(), "rule__ModifierInvocation__ArgsAssignment_1");
			builder.put(grammarAccess.getParameterListAccess().getParametersAssignment_2_0(), "rule__ParameterList__ParametersAssignment_2_0");
			builder.put(grammarAccess.getParameterListAccess().getParametersAssignment_2_1_1(), "rule__ParameterList__ParametersAssignment_2_1_1");
			builder.put(grammarAccess.getReturnsParameterListAccess().getParametersAssignment_2_0(), "rule__ReturnsParameterList__ParametersAssignment_2_0");
			builder.put(grammarAccess.getReturnsParameterListAccess().getParametersAssignment_2_1_1(), "rule__ReturnsParameterList__ParametersAssignment_2_1_1");
			builder.put(grammarAccess.getReturnParameterDeclarationAccess().getTypeRefAssignment_0(), "rule__ReturnParameterDeclaration__TypeRefAssignment_0");
			builder.put(grammarAccess.getReturnParameterDeclarationAccess().getVariableAssignment_1(), "rule__ReturnParameterDeclaration__VariableAssignment_1");
			builder.put(grammarAccess.getDeleteStatementAccess().getVariableAssignment_1(), "rule__DeleteStatement__VariableAssignment_1");
			builder.put(grammarAccess.getIfStatementAccess().getConditionAssignment_2(), "rule__IfStatement__ConditionAssignment_2");
			builder.put(grammarAccess.getIfStatementAccess().getTrueBodyAssignment_4(), "rule__IfStatement__TrueBodyAssignment_4");
			builder.put(grammarAccess.getIfStatementAccess().getFalseBodyAssignment_5_1(), "rule__IfStatement__FalseBodyAssignment_5_1");
			builder.put(grammarAccess.getWhileStatementAccess().getConditionAssignment_2(), "rule__WhileStatement__ConditionAssignment_2");
			builder.put(grammarAccess.getWhileStatementAccess().getBodyAssignment_4(), "rule__WhileStatement__BodyAssignment_4");
			builder.put(grammarAccess.getForStatementAccess().getInitExpressionAssignment_2(), "rule__ForStatement__InitExpressionAssignment_2");
			builder.put(grammarAccess.getForStatementAccess().getConditionExpressionAssignment_4(), "rule__ForStatement__ConditionExpressionAssignment_4");
			builder.put(grammarAccess.getForStatementAccess().getLoopExpressionAssignment_6(), "rule__ForStatement__LoopExpressionAssignment_6");
			builder.put(grammarAccess.getForStatementAccess().getBodyAssignment_8(), "rule__ForStatement__BodyAssignment_8");
			builder.put(grammarAccess.getBodyAccess().getStatementsAssignment_2_0(), "rule__Body__StatementsAssignment_2_0");
			builder.put(grammarAccess.getBodyAccess().getStatementsAssignment_2_1(), "rule__Body__StatementsAssignment_2_1");
			builder.put(grammarAccess.getReturnStatementAccess().getExpressionAssignment_2(), "rule__ReturnStatement__ExpressionAssignment_2");
			builder.put(grammarAccess.getSpecialExpressionAccess().getTypeAssignment_0(), "rule__SpecialExpression__TypeAssignment_0");
			builder.put(grammarAccess.getSpecialExpressionAccess().getFieldOrMethodAssignment_1(), "rule__SpecialExpression__FieldOrMethodAssignment_1");
			builder.put(grammarAccess.getSpecialExpressionAccess().getQualifiersAssignment_2(), "rule__SpecialExpression__QualifiersAssignment_2");
			builder.put(grammarAccess.getAssignmentAccess().getAssignmentOpAssignment_1_0_1(), "rule__Assignment__AssignmentOpAssignment_1_0_1");
			builder.put(grammarAccess.getAssignmentAccess().getExpressionAssignment_1_0_2(), "rule__Assignment__ExpressionAssignment_1_0_2");
			builder.put(grammarAccess.getAssignmentAccess().getVariableAssignment_1_1_1(), "rule__Assignment__VariableAssignment_1_1_1");
			builder.put(grammarAccess.getAssignmentAccess().getExpressionAssignment_1_1_2_1(), "rule__Assignment__ExpressionAssignment_1_1_2_1");
			builder.put(grammarAccess.getOrAccess().getRightAssignment_1_2(), "rule__Or__RightAssignment_1_2");
			builder.put(grammarAccess.getAndAccess().getRightAssignment_1_2(), "rule__And__RightAssignment_1_2");
			builder.put(grammarAccess.getEqualityAccess().getEqualityOpAssignment_1_1(), "rule__Equality__EqualityOpAssignment_1_1");
			builder.put(grammarAccess.getEqualityAccess().getRightAssignment_1_2(), "rule__Equality__RightAssignment_1_2");
			builder.put(grammarAccess.getComparisonAccess().getComparisonOpAssignment_1_1(), "rule__Comparison__ComparisonOpAssignment_1_1");
			builder.put(grammarAccess.getComparisonAccess().getRightAssignment_1_2(), "rule__Comparison__RightAssignment_1_2");
			builder.put(grammarAccess.getBitOrAccess().getRightAssignment_1_2(), "rule__BitOr__RightAssignment_1_2");
			builder.put(grammarAccess.getBitXorAccess().getRightAssignment_1_2(), "rule__BitXor__RightAssignment_1_2");
			builder.put(grammarAccess.getBitAndAccess().getRightAssignment_1_2(), "rule__BitAnd__RightAssignment_1_2");
			builder.put(grammarAccess.getShiftAccess().getShiftOpAssignment_1_1(), "rule__Shift__ShiftOpAssignment_1_1");
			builder.put(grammarAccess.getShiftAccess().getRightAssignment_1_2(), "rule__Shift__RightAssignment_1_2");
			builder.put(grammarAccess.getAddSubAccess().getAdditionOpAssignment_1_0_1(), "rule__AddSub__AdditionOpAssignment_1_0_1");
			builder.put(grammarAccess.getAddSubAccess().getRightAssignment_1_0_2(), "rule__AddSub__RightAssignment_1_0_2");
			builder.put(grammarAccess.getMulDivModAccess().getMultipliciativeOpAssignment_1_1(), "rule__MulDivMod__MultipliciativeOpAssignment_1_1");
			builder.put(grammarAccess.getMulDivModAccess().getRightAssignment_1_2(), "rule__MulDivMod__RightAssignment_1_2");
			builder.put(grammarAccess.getExponentAccess().getRightAssignment_1_2(), "rule__Exponent__RightAssignment_1_2");
			builder.put(grammarAccess.getNotExpressionAccess().getExpressionAssignment_1(), "rule__NotExpression__ExpressionAssignment_1");
			builder.put(grammarAccess.getPreIncExpressionAccess().getExpressionAssignment(), "rule__PreIncExpression__ExpressionAssignment");
			builder.put(grammarAccess.getPreDecExpressionAccess().getExpressionAssignment(), "rule__PreDecExpression__ExpressionAssignment");
			builder.put(grammarAccess.getBinaryNotExpressionAccess().getExpressionAssignment_1(), "rule__BinaryNotExpression__ExpressionAssignment_1");
			builder.put(grammarAccess.getSignExpressionAccess().getSignOpAssignment_0(), "rule__SignExpression__SignOpAssignment_0");
			builder.put(grammarAccess.getSignExpressionAccess().getExpressionAssignment_1(), "rule__SignExpression__ExpressionAssignment_1");
			builder.put(grammarAccess.getNewExpressionAccess().getContractAssignment_1(), "rule__NewExpression__ContractAssignment_1");
			builder.put(grammarAccess.getNewExpressionAccess().getArgsAssignment_2(), "rule__NewExpression__ArgsAssignment_2");
			builder.put(grammarAccess.getPostIncDecExpressionAccess().getPostOpAssignment_1_1(), "rule__PostIncDecExpression__PostOpAssignment_1_1");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getMembersAssignment_4_2_1_0(), "rule__PrimaryExpression__MembersAssignment_4_2_1_0");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getMembersAssignment_4_2_1_1(), "rule__PrimaryExpression__MembersAssignment_4_2_1_1");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getMembersAssignment_5_2_1(), "rule__PrimaryExpression__MembersAssignment_5_2_1");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getMembersAssignment_5_2_2_0(), "rule__PrimaryExpression__MembersAssignment_5_2_2_0");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getMembersAssignment_5_2_2_1(), "rule__PrimaryExpression__MembersAssignment_5_2_2_1");
			builder.put(grammarAccess.getGasleftFunctionAccess().getNameAssignment_0(), "rule__GasleftFunction__NameAssignment_0");
			builder.put(grammarAccess.getBlockhashFunctionAccess().getParameterAssignment_2(), "rule__BlockhashFunction__ParameterAssignment_2");
			builder.put(grammarAccess.getMathematicalFunctionAccess().getFunctionAssignment_0(), "rule__MathematicalFunction__FunctionAssignment_0");
			builder.put(grammarAccess.getMathematicalFunctionAccess().getParametersAssignment_2(), "rule__MathematicalFunction__ParametersAssignment_2");
			builder.put(grammarAccess.getMathematicalFunctionAccess().getParametersAssignment_4(), "rule__MathematicalFunction__ParametersAssignment_4");
			builder.put(grammarAccess.getMathematicalFunctionAccess().getParametersAssignment_6(), "rule__MathematicalFunction__ParametersAssignment_6");
			builder.put(grammarAccess.getEcrecoverFunctionAccess().getFunctionAssignment_0(), "rule__EcrecoverFunction__FunctionAssignment_0");
			builder.put(grammarAccess.getEcrecoverFunctionAccess().getParametersAssignment_2(), "rule__EcrecoverFunction__ParametersAssignment_2");
			builder.put(grammarAccess.getEcrecoverFunctionAccess().getParametersAssignment_4(), "rule__EcrecoverFunction__ParametersAssignment_4");
			builder.put(grammarAccess.getEcrecoverFunctionAccess().getParametersAssignment_6(), "rule__EcrecoverFunction__ParametersAssignment_6");
			builder.put(grammarAccess.getEcrecoverFunctionAccess().getParametersAssignment_8(), "rule__EcrecoverFunction__ParametersAssignment_8");
			builder.put(grammarAccess.getHashFunctionAccess().getNameAssignment_0(), "rule__HashFunction__NameAssignment_0");
			builder.put(grammarAccess.getHashFunctionAccess().getParametersAssignment_2(), "rule__HashFunction__ParametersAssignment_2");
			builder.put(grammarAccess.getIntParameterAccess().getParamAssignment_0(), "rule__IntParameter__ParamAssignment_0");
			builder.put(grammarAccess.getIntParameterAccess().getFunAssignment_1(), "rule__IntParameter__FunAssignment_1");
			builder.put(grammarAccess.getFunctionCallAccess().getNameAssignment_0(), "rule__FunctionCall__NameAssignment_0");
			builder.put(grammarAccess.getFunctionCallAccess().getParametersAssignment_2_0(), "rule__FunctionCall__ParametersAssignment_2_0");
			builder.put(grammarAccess.getFunctionCallAccess().getParametersAssignment_2_1_1(), "rule__FunctionCall__ParametersAssignment_2_1_1");
			builder.put(grammarAccess.getArithmeticOperationsAccess().getFirstAssignment_0(), "rule__ArithmeticOperations__FirstAssignment_0");
			builder.put(grammarAccess.getArithmeticOperationsAccess().getSecondsAssignment_1(), "rule__ArithmeticOperations__SecondsAssignment_1");
			builder.put(grammarAccess.getSecondOperatorsAccess().getOperatorAssignment_0(), "rule__SecondOperators__OperatorAssignment_0");
			builder.put(grammarAccess.getSecondOperatorsAccess().getValueAssignment_1(), "rule__SecondOperators__ValueAssignment_1");
			builder.put(grammarAccess.getBooleanConstAccess().getValueAssignment(), "rule__BooleanConst__ValueAssignment");
			builder.put(grammarAccess.getNumberAccess().getEtherUnitAssignment_1(), "rule__Number__EtherUnitAssignment_1");
			builder.put(grammarAccess.getUnitTypesAccess().getTimeAssignment_0(), "rule__UnitTypes__TimeAssignment_0");
			builder.put(grammarAccess.getUnitTypesAccess().getUnitsAssignment_1(), "rule__UnitTypes__UnitsAssignment_1");
			builder.put(grammarAccess.getNumberDimensionlessAccess().getValueAssignment(), "rule__NumberDimensionless__ValueAssignment");
			builder.put(grammarAccess.getEtherAccess().getValueAssignment_0(), "rule__Ether__ValueAssignment_0");
			builder.put(grammarAccess.getEtherAccess().getEtherAssignment_1(), "rule__Ether__EtherAssignment_1");
			builder.put(grammarAccess.getTimeAccess().getValueAssignment_0(), "rule__Time__ValueAssignment_0");
			builder.put(grammarAccess.getTimeAccess().getTimeAssignment_1(), "rule__Time__TimeAssignment_1");
			builder.put(grammarAccess.getStringLiteralAccess().getValueAssignment(), "rule__StringLiteral__ValueAssignment");
			builder.put(grammarAccess.getHexLiteralAccess().getValueAssignment(), "rule__HexLiteral__ValueAssignment");
			builder.put(grammarAccess.getDecimalLiteralAccess().getValueAssignment(), "rule__DecimalLiteral__ValueAssignment");
			builder.put(grammarAccess.getTypeCastAccess().getValueAssignment_0(), "rule__TypeCast__ValueAssignment_0");
			builder.put(grammarAccess.getTypeCastAccess().getExpressionAssignment_2(), "rule__TypeCast__ExpressionAssignment_2");
			builder.put(grammarAccess.getSpecialVariablesAccess().getTypeAssignment_0(), "rule__SpecialVariables__TypeAssignment_0");
			builder.put(grammarAccess.getSpecialVariablesAccess().getFieldAssignment_2(), "rule__SpecialVariables__FieldAssignment_2");
			builder.put(grammarAccess.getSpecialVariablesAccess().getQualifiersAssignment_3(), "rule__SpecialVariables__QualifiersAssignment_3");
			builder.put(grammarAccess.getSpecialVariablesTypeEnumAccess().getNameAssignment(), "rule__SpecialVariablesTypeEnum__NameAssignment");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private OptGrammarGrammarAccess grammarAccess;

	@Override
	protected InternalOptGrammarParser createParser() {
		InternalOptGrammarParser result = new InternalOptGrammarParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public OptGrammarGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(OptGrammarGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
