/*
 * generated by Xtext 2.19.0
 */
grammar InternalOptGrammar;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.unicam.myGrammar.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.unicam.myGrammar.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.unicam.myGrammar.services.OptGrammarGrammarAccess;

}
@parser::members {
	private OptGrammarGrammarAccess grammarAccess;

	public void setGrammarAccess(OptGrammarGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getOperationsAssignment()); }
		(rule__Model__OperationsAssignment)*
		{ after(grammarAccess.getModelAccess().getOperationsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContract
entryRuleContract
:
{ before(grammarAccess.getContractRule()); }
	 ruleContract
{ after(grammarAccess.getContractRule()); } 
	 EOF 
;

// Rule Contract
ruleContract 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContractAccess().getGroup()); }
		(rule__Contract__Group__0)
		{ after(grammarAccess.getContractAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaration
entryRuleDeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
		(rule__Declaration__Alternatives)
		{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionDeclaration
entryRuleFunctionDeclaration
:
{ before(grammarAccess.getFunctionDeclarationRule()); }
	 ruleFunctionDeclaration
{ after(grammarAccess.getFunctionDeclarationRule()); } 
	 EOF 
;

// Rule FunctionDeclaration
ruleFunctionDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionDeclarationAccess().getEnumDefinitionParserRuleCall()); }
		ruleEnumDefinition
		{ after(grammarAccess.getFunctionDeclarationAccess().getEnumDefinitionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionDefinition
entryRuleFunctionDefinition
:
{ before(grammarAccess.getFunctionDefinitionRule()); }
	 ruleFunctionDefinition
{ after(grammarAccess.getFunctionDefinitionRule()); } 
	 EOF 
;

// Rule FunctionDefinition
ruleFunctionDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
		(rule__FunctionDefinition__Group__0)
		{ after(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionCallListArguments
entryRuleFunctionCallListArguments
:
{ before(grammarAccess.getFunctionCallListArgumentsRule()); }
	 ruleFunctionCallListArguments
{ after(grammarAccess.getFunctionCallListArgumentsRule()); } 
	 EOF 
;

// Rule FunctionCallListArguments
ruleFunctionCallListArguments 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionCallListArgumentsAccess().getGroup()); }
		(rule__FunctionCallListArguments__Group__0)
		{ after(grammarAccess.getFunctionCallListArgumentsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionCallArguments
entryRuleFunctionCallArguments
:
{ before(grammarAccess.getFunctionCallArgumentsRule()); }
	 ruleFunctionCallArguments
{ after(grammarAccess.getFunctionCallArgumentsRule()); } 
	 EOF 
;

// Rule FunctionCallArguments
ruleFunctionCallArguments 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionCallArgumentsAccess().getAlternatives()); }
		(rule__FunctionCallArguments__Alternatives)
		{ after(grammarAccess.getFunctionCallArgumentsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionCallArg
entryRuleFunctionCallArg
:
{ before(grammarAccess.getFunctionCallArgRule()); }
	 ruleFunctionCallArg
{ after(grammarAccess.getFunctionCallArgRule()); } 
	 EOF 
;

// Rule FunctionCallArg
ruleFunctionCallArg 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionCallArgAccess().getGroup()); }
		(rule__FunctionCallArg__Group__0)
		{ after(grammarAccess.getFunctionCallArgAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionDefinitionOptionalElement
entryRuleFunctionDefinitionOptionalElement
:
{ before(grammarAccess.getFunctionDefinitionOptionalElementRule()); }
	 ruleFunctionDefinitionOptionalElement
{ after(grammarAccess.getFunctionDefinitionOptionalElementRule()); } 
	 EOF 
;

// Rule FunctionDefinitionOptionalElement
ruleFunctionDefinitionOptionalElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionDefinitionOptionalElementAccess().getAlternatives()); }
		(rule__FunctionDefinitionOptionalElement__Alternatives)
		{ after(grammarAccess.getFunctionDefinitionOptionalElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConst
entryRuleConst
:
{ before(grammarAccess.getConstRule()); }
	 ruleConst
{ after(grammarAccess.getConstRule()); } 
	 EOF 
;

// Rule Const
ruleConst 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstAccess().getGroup()); }
		(rule__Const__Group__0)
		{ after(grammarAccess.getConstAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVisibilitySpecifier
entryRuleVisibilitySpecifier
:
{ before(grammarAccess.getVisibilitySpecifierRule()); }
	 ruleVisibilitySpecifier
{ after(grammarAccess.getVisibilitySpecifierRule()); } 
	 EOF 
;

// Rule VisibilitySpecifier
ruleVisibilitySpecifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVisibilitySpecifierAccess().getVisibilityAssignment()); }
		(rule__VisibilitySpecifier__VisibilityAssignment)
		{ after(grammarAccess.getVisibilitySpecifierAccess().getVisibilityAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructDefinition
entryRuleStructDefinition
:
{ before(grammarAccess.getStructDefinitionRule()); }
	 ruleStructDefinition
{ after(grammarAccess.getStructDefinitionRule()); } 
	 EOF 
;

// Rule StructDefinition
ruleStructDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructDefinitionAccess().getGroup()); }
		(rule__StructDefinition__Group__0)
		{ after(grammarAccess.getStructDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumDefinition
entryRuleEnumDefinition
:
{ before(grammarAccess.getEnumDefinitionRule()); }
	 ruleEnumDefinition
{ after(grammarAccess.getEnumDefinitionRule()); } 
	 EOF 
;

// Rule EnumDefinition
ruleEnumDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumDefinitionAccess().getGroup()); }
		(rule__EnumDefinition__Group__0)
		{ after(grammarAccess.getEnumDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumValue
entryRuleEnumValue
:
{ before(grammarAccess.getEnumValueRule()); }
	 ruleEnumValue
{ after(grammarAccess.getEnumValueRule()); } 
	 EOF 
;

// Rule EnumValue
ruleEnumValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumValueAccess().getNameAssignment()); }
		(rule__EnumValue__NameAssignment)
		{ after(grammarAccess.getEnumValueAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getNameAssignment()); }
		(rule__Variable__NameAssignment)
		{ after(grammarAccess.getVariableAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getAlternatives()); }
		(rule__VariableDeclaration__Alternatives)
		{ after(grammarAccess.getVariableDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStandardVariableDeclaration
entryRuleStandardVariableDeclaration
:
{ before(grammarAccess.getStandardVariableDeclarationRule()); }
	 ruleStandardVariableDeclaration
{ after(grammarAccess.getStandardVariableDeclarationRule()); } 
	 EOF 
;

// Rule StandardVariableDeclaration
ruleStandardVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStandardVariableDeclarationAccess().getGroup()); }
		(rule__StandardVariableDeclaration__Group__0)
		{ after(grammarAccess.getStandardVariableDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarVariableDeclaration
entryRuleVarVariableDeclaration
:
{ before(grammarAccess.getVarVariableDeclarationRule()); }
	 ruleVarVariableDeclaration
{ after(grammarAccess.getVarVariableDeclarationRule()); } 
	 EOF 
;

// Rule VarVariableDeclaration
ruleVarVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarVariableDeclarationAccess().getGroup()); }
		(rule__VarVariableDeclaration__Group__0)
		{ after(grammarAccess.getVarVariableDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarVariableTupleVariableDeclaration
entryRuleVarVariableTupleVariableDeclaration
:
{ before(grammarAccess.getVarVariableTupleVariableDeclarationRule()); }
	 ruleVarVariableTupleVariableDeclaration
{ after(grammarAccess.getVarVariableTupleVariableDeclarationRule()); } 
	 EOF 
;

// Rule VarVariableTupleVariableDeclaration
ruleVarVariableTupleVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getGroup()); }
		(rule__VarVariableTupleVariableDeclaration__Group__0)
		{ after(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDeclarationOptionalElement
entryRuleVariableDeclarationOptionalElement
:
{ before(grammarAccess.getVariableDeclarationOptionalElementRule()); }
	 ruleVariableDeclarationOptionalElement
{ after(grammarAccess.getVariableDeclarationOptionalElementRule()); } 
	 EOF 
;

// Rule VariableDeclarationOptionalElement
ruleVariableDeclarationOptionalElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclarationOptionalElementAccess().getAlternatives()); }
		(rule__VariableDeclarationOptionalElement__Alternatives)
		{ after(grammarAccess.getVariableDeclarationOptionalElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndexedSpecifer
entryRuleIndexedSpecifer
:
{ before(grammarAccess.getIndexedSpeciferRule()); }
	 ruleIndexedSpecifer
{ after(grammarAccess.getIndexedSpeciferRule()); } 
	 EOF 
;

// Rule IndexedSpecifer
ruleIndexedSpecifer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndexedSpeciferAccess().getGroup()); }
		(rule__IndexedSpecifer__Group__0)
		{ after(grammarAccess.getIndexedSpeciferAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstantSpecifier
entryRuleConstantSpecifier
:
{ before(grammarAccess.getConstantSpecifierRule()); }
	 ruleConstantSpecifier
{ after(grammarAccess.getConstantSpecifierRule()); } 
	 EOF 
;

// Rule ConstantSpecifier
ruleConstantSpecifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantSpecifierAccess().getGroup()); }
		(rule__ConstantSpecifier__Group__0)
		{ after(grammarAccess.getConstantSpecifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocationSpecifier
entryRuleLocationSpecifier
:
{ before(grammarAccess.getLocationSpecifierRule()); }
	 ruleLocationSpecifier
{ after(grammarAccess.getLocationSpecifierRule()); } 
	 EOF 
;

// Rule LocationSpecifier
ruleLocationSpecifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocationSpecifierAccess().getLocationAssignment()); }
		(rule__LocationSpecifier__LocationAssignment)
		{ after(grammarAccess.getLocationSpecifierAccess().getLocationAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStandardType
entryRuleStandardType
:
{ before(grammarAccess.getStandardTypeRule()); }
	 ruleStandardType
{ after(grammarAccess.getStandardTypeRule()); } 
	 EOF 
;

// Rule StandardType
ruleStandardType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStandardTypeAccess().getAlternatives()); }
		(rule__StandardType__Alternatives)
		{ after(grammarAccess.getStandardTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStandardTypeWithoutQualifiedIdentifier
entryRuleStandardTypeWithoutQualifiedIdentifier
:
{ before(grammarAccess.getStandardTypeWithoutQualifiedIdentifierRule()); }
	 ruleStandardTypeWithoutQualifiedIdentifier
{ after(grammarAccess.getStandardTypeWithoutQualifiedIdentifierRule()); } 
	 EOF 
;

// Rule StandardTypeWithoutQualifiedIdentifier
ruleStandardTypeWithoutQualifiedIdentifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getAlternatives()); }
		(rule__StandardTypeWithoutQualifiedIdentifier__Alternatives)
		{ after(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementaryType
entryRuleElementaryType
:
{ before(grammarAccess.getElementaryTypeRule()); }
	 ruleElementaryType
{ after(grammarAccess.getElementaryTypeRule()); } 
	 EOF 
;

// Rule ElementaryType
ruleElementaryType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementaryTypeAccess().getNameAssignment()); }
		(rule__ElementaryType__NameAssignment)
		{ after(grammarAccess.getElementaryTypeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapping
entryRuleMapping
:
{ before(grammarAccess.getMappingRule()); }
	 ruleMapping
{ after(grammarAccess.getMappingRule()); } 
	 EOF 
;

// Rule Mapping
ruleMapping 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMappingAccess().getGroup()); }
		(rule__Mapping__Group__0)
		{ after(grammarAccess.getMappingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayDimensions
entryRuleArrayDimensions
:
{ before(grammarAccess.getArrayDimensionsRule()); }
	 ruleArrayDimensions
{ after(grammarAccess.getArrayDimensionsRule()); } 
	 EOF 
;

// Rule ArrayDimensions
ruleArrayDimensions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayDimensionsAccess().getGroup()); }
		(rule__ArrayDimensions__Group__0)
		{ after(grammarAccess.getArrayDimensionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarType
entryRuleVarType
:
{ before(grammarAccess.getVarTypeRule()); }
	 ruleVarType
{ after(grammarAccess.getVarTypeRule()); } 
	 EOF 
;

// Rule VarType
ruleVarType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarTypeAccess().getVarKeyword()); }
		'var'
		{ after(grammarAccess.getVarTypeAccess().getVarKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTuple
entryRuleTuple
:
{ before(grammarAccess.getTupleRule()); }
	 ruleTuple
{ after(grammarAccess.getTupleRule()); } 
	 EOF 
;

// Rule Tuple
ruleTuple 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTupleAccess().getGroup()); }
		(rule__Tuple__Group__0)
		{ after(grammarAccess.getTupleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTupleSeparator
entryRuleTupleSeparator
:
{ before(grammarAccess.getTupleSeparatorRule()); }
	 ruleTupleSeparator
{ after(grammarAccess.getTupleSeparatorRule()); } 
	 EOF 
;

// Rule TupleSeparator
ruleTupleSeparator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTupleSeparatorAccess().getGroup()); }
		(rule__TupleSeparator__Group__0)
		{ after(grammarAccess.getTupleSeparatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleStatement
entryRuleSimpleStatement
:
{ before(grammarAccess.getSimpleStatementRule()); }
	 ruleSimpleStatement
{ after(grammarAccess.getSimpleStatementRule()); } 
	 EOF 
;

// Rule SimpleStatement
ruleSimpleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleStatementAccess().getGroup()); }
		(rule__SimpleStatement__Group__0)
		{ after(grammarAccess.getSimpleStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleStatement2
entryRuleSimpleStatement2
:
{ before(grammarAccess.getSimpleStatement2Rule()); }
	 ruleSimpleStatement2
{ after(grammarAccess.getSimpleStatement2Rule()); } 
	 EOF 
;

// Rule SimpleStatement2
ruleSimpleStatement2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleStatement2Access().getAlternatives()); }
		(rule__SimpleStatement2__Alternatives)
		{ after(grammarAccess.getSimpleStatement2Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionStatement
entryRuleExpressionStatement
:
{ before(grammarAccess.getExpressionStatementRule()); }
	 ruleExpressionStatement
{ after(grammarAccess.getExpressionStatementRule()); } 
	 EOF 
;

// Rule ExpressionStatement
ruleExpressionStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionStatementAccess().getExpressionAssignment()); }
		(rule__ExpressionStatement__ExpressionAssignment)
		{ after(grammarAccess.getExpressionStatementAccess().getExpressionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedIdentifier
entryRuleQualifiedIdentifier
:
{ before(grammarAccess.getQualifiedIdentifierRule()); }
	 ruleQualifiedIdentifier
{ after(grammarAccess.getQualifiedIdentifierRule()); } 
	 EOF 
;

// Rule QualifiedIdentifier
ruleQualifiedIdentifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedIdentifierAccess().getGroup()); }
		(rule__QualifiedIdentifier__Group__0)
		{ after(grammarAccess.getQualifiedIdentifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifier
entryRuleQualifier
:
{ before(grammarAccess.getQualifierRule()); }
	 ruleQualifier
{ after(grammarAccess.getQualifierRule()); } 
	 EOF 
;

// Rule Qualifier
ruleQualifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifierAccess().getAlternatives()); }
		(rule__Qualifier__Alternatives)
		{ after(grammarAccess.getQualifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField
entryRuleField
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccess().getGroup()); }
		(rule__Field__Group__0)
		{ after(grammarAccess.getFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndex
entryRuleIndex
:
{ before(grammarAccess.getIndexRule()); }
	 ruleIndex
{ after(grammarAccess.getIndexRule()); } 
	 EOF 
;

// Rule Index
ruleIndex 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndexAccess().getGroup()); }
		(rule__Index__Group__0)
		{ after(grammarAccess.getIndexAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArguments
entryRuleArguments
:
{ before(grammarAccess.getArgumentsRule()); }
	 ruleArguments
{ after(grammarAccess.getArgumentsRule()); } 
	 EOF 
;

// Rule Arguments
ruleArguments 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentsAccess().getArgumentsAssignment()); }
		(rule__Arguments__ArgumentsAssignment)
		{ after(grammarAccess.getArgumentsAccess().getArgumentsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModifierInvocation
entryRuleModifierInvocation
:
{ before(grammarAccess.getModifierInvocationRule()); }
	 ruleModifierInvocation
{ after(grammarAccess.getModifierInvocationRule()); } 
	 EOF 
;

// Rule ModifierInvocation
ruleModifierInvocation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModifierInvocationAccess().getGroup()); }
		(rule__ModifierInvocation__Group__0)
		{ after(grammarAccess.getModifierInvocationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterList
entryRuleParameterList
:
{ before(grammarAccess.getParameterListRule()); }
	 ruleParameterList
{ after(grammarAccess.getParameterListRule()); } 
	 EOF 
;

// Rule ParameterList
ruleParameterList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterListAccess().getGroup()); }
		(rule__ParameterList__Group__0)
		{ after(grammarAccess.getParameterListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturnsParameterList
entryRuleReturnsParameterList
:
{ before(grammarAccess.getReturnsParameterListRule()); }
	 ruleReturnsParameterList
{ after(grammarAccess.getReturnsParameterListRule()); } 
	 EOF 
;

// Rule ReturnsParameterList
ruleReturnsParameterList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnsParameterListAccess().getGroup()); }
		(rule__ReturnsParameterList__Group__0)
		{ after(grammarAccess.getReturnsParameterListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturnParameterDeclaration
entryRuleReturnParameterDeclaration
:
{ before(grammarAccess.getReturnParameterDeclarationRule()); }
	 ruleReturnParameterDeclaration
{ after(grammarAccess.getReturnParameterDeclarationRule()); } 
	 EOF 
;

// Rule ReturnParameterDeclaration
ruleReturnParameterDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnParameterDeclarationAccess().getGroup()); }
		(rule__ReturnParameterDeclaration__Group__0)
		{ after(grammarAccess.getReturnParameterDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoopStructures
entryRuleLoopStructures
:
{ before(grammarAccess.getLoopStructuresRule()); }
	 ruleLoopStructures
{ after(grammarAccess.getLoopStructuresRule()); } 
	 EOF 
;

// Rule LoopStructures
ruleLoopStructures 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoopStructuresAccess().getAlternatives()); }
		(rule__LoopStructures__Alternatives)
		{ after(grammarAccess.getLoopStructuresAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeleteStatement
entryRuleDeleteStatement
:
{ before(grammarAccess.getDeleteStatementRule()); }
	 ruleDeleteStatement
{ after(grammarAccess.getDeleteStatementRule()); } 
	 EOF 
;

// Rule DeleteStatement
ruleDeleteStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeleteStatementAccess().getGroup()); }
		(rule__DeleteStatement__Group__0)
		{ after(grammarAccess.getDeleteStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStatement
entryRuleIfStatement
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStatementAccess().getGroup()); }
		(rule__IfStatement__Group__0)
		{ after(grammarAccess.getIfStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileStatement
entryRuleWhileStatement
:
{ before(grammarAccess.getWhileStatementRule()); }
	 ruleWhileStatement
{ after(grammarAccess.getWhileStatementRule()); } 
	 EOF 
;

// Rule WhileStatement
ruleWhileStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileStatementAccess().getGroup()); }
		(rule__WhileStatement__Group__0)
		{ after(grammarAccess.getWhileStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForStatement
entryRuleForStatement
:
{ before(grammarAccess.getForStatementRule()); }
	 ruleForStatement
{ after(grammarAccess.getForStatementRule()); } 
	 EOF 
;

// Rule ForStatement
ruleForStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForStatementAccess().getGroup()); }
		(rule__ForStatement__Group__0)
		{ after(grammarAccess.getForStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBody
entryRuleBody
:
{ before(grammarAccess.getBodyRule()); }
	 ruleBody
{ after(grammarAccess.getBodyRule()); } 
	 EOF 
;

// Rule Body
ruleBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBodyAccess().getGroup()); }
		(rule__Body__Group__0)
		{ after(grammarAccess.getBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContinueStatement
entryRuleContinueStatement
:
{ before(grammarAccess.getContinueStatementRule()); }
	 ruleContinueStatement
{ after(grammarAccess.getContinueStatementRule()); } 
	 EOF 
;

// Rule ContinueStatement
ruleContinueStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContinueStatementAccess().getGroup()); }
		(rule__ContinueStatement__Group__0)
		{ after(grammarAccess.getContinueStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBreakStatement
entryRuleBreakStatement
:
{ before(grammarAccess.getBreakStatementRule()); }
	 ruleBreakStatement
{ after(grammarAccess.getBreakStatementRule()); } 
	 EOF 
;

// Rule BreakStatement
ruleBreakStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBreakStatementAccess().getGroup()); }
		(rule__BreakStatement__Group__0)
		{ after(grammarAccess.getBreakStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturnStatement
entryRuleReturnStatement
:
{ before(grammarAccess.getReturnStatementRule()); }
	 ruleReturnStatement
{ after(grammarAccess.getReturnStatementRule()); } 
	 EOF 
;

// Rule ReturnStatement
ruleReturnStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnStatementAccess().getGroup()); }
		(rule__ReturnStatement__Group__0)
		{ after(grammarAccess.getReturnStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThrowStatement
entryRuleThrowStatement
:
{ before(grammarAccess.getThrowStatementRule()); }
	 ruleThrowStatement
{ after(grammarAccess.getThrowStatementRule()); } 
	 EOF 
;

// Rule ThrowStatement
ruleThrowStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThrowStatementAccess().getGroup()); }
		(rule__ThrowStatement__Group__0)
		{ after(grammarAccess.getThrowStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlaceHolderStatement
entryRulePlaceHolderStatement
:
{ before(grammarAccess.getPlaceHolderStatementRule()); }
	 rulePlaceHolderStatement
{ after(grammarAccess.getPlaceHolderStatementRule()); } 
	 EOF 
;

// Rule PlaceHolderStatement
rulePlaceHolderStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlaceHolderStatementAccess().getGroup()); }
		(rule__PlaceHolderStatement__Group__0)
		{ after(grammarAccess.getPlaceHolderStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionOperation
entryRuleConditionOperation
:
{ before(grammarAccess.getConditionOperationRule()); }
	 ruleConditionOperation
{ after(grammarAccess.getConditionOperationRule()); } 
	 EOF 
;

// Rule ConditionOperation
ruleConditionOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionOperationAccess().getGroup()); }
		(rule__ConditionOperation__Group__0)
		{ after(grammarAccess.getConditionOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGasleftFunction
entryRuleGasleftFunction
:
{ before(grammarAccess.getGasleftFunctionRule()); }
	 ruleGasleftFunction
{ after(grammarAccess.getGasleftFunctionRule()); } 
	 EOF 
;

// Rule GasleftFunction
ruleGasleftFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGasleftFunctionAccess().getGroup()); }
		(rule__GasleftFunction__Group__0)
		{ after(grammarAccess.getGasleftFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlockhashFunction
entryRuleBlockhashFunction
:
{ before(grammarAccess.getBlockhashFunctionRule()); }
	 ruleBlockhashFunction
{ after(grammarAccess.getBlockhashFunctionRule()); } 
	 EOF 
;

// Rule BlockhashFunction
ruleBlockhashFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockhashFunctionAccess().getGroup()); }
		(rule__BlockhashFunction__Group__0)
		{ after(grammarAccess.getBlockhashFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMathematicalFunction
entryRuleMathematicalFunction
:
{ before(grammarAccess.getMathematicalFunctionRule()); }
	 ruleMathematicalFunction
{ after(grammarAccess.getMathematicalFunctionRule()); } 
	 EOF 
;

// Rule MathematicalFunction
ruleMathematicalFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMathematicalFunctionAccess().getGroup()); }
		(rule__MathematicalFunction__Group__0)
		{ after(grammarAccess.getMathematicalFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEcrecoverFunction
entryRuleEcrecoverFunction
:
{ before(grammarAccess.getEcrecoverFunctionRule()); }
	 ruleEcrecoverFunction
{ after(grammarAccess.getEcrecoverFunctionRule()); } 
	 EOF 
;

// Rule EcrecoverFunction
ruleEcrecoverFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEcrecoverFunctionAccess().getGroup()); }
		(rule__EcrecoverFunction__Group__0)
		{ after(grammarAccess.getEcrecoverFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHashFunction
entryRuleHashFunction
:
{ before(grammarAccess.getHashFunctionRule()); }
	 ruleHashFunction
{ after(grammarAccess.getHashFunctionRule()); } 
	 EOF 
;

// Rule HashFunction
ruleHashFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHashFunctionAccess().getGroup()); }
		(rule__HashFunction__Group__0)
		{ after(grammarAccess.getHashFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntParameter
entryRuleIntParameter
:
{ before(grammarAccess.getIntParameterRule()); }
	 ruleIntParameter
{ after(grammarAccess.getIntParameterRule()); } 
	 EOF 
;

// Rule IntParameter
ruleIntParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntParameterAccess().getAlternatives()); }
		(rule__IntParameter__Alternatives)
		{ after(grammarAccess.getIntParameterAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionCallAccess().getGroup()); }
		(rule__FunctionCall__Group__0)
		{ after(grammarAccess.getFunctionCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArithmeticOperations
entryRuleArithmeticOperations
:
{ before(grammarAccess.getArithmeticOperationsRule()); }
	 ruleArithmeticOperations
{ after(grammarAccess.getArithmeticOperationsRule()); } 
	 EOF 
;

// Rule ArithmeticOperations
ruleArithmeticOperations 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArithmeticOperationsAccess().getGroup()); }
		(rule__ArithmeticOperations__Group__0)
		{ after(grammarAccess.getArithmeticOperationsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryArithmetic
entryRulePrimaryArithmetic
:
{ before(grammarAccess.getPrimaryArithmeticRule()); }
	 rulePrimaryArithmetic
{ after(grammarAccess.getPrimaryArithmeticRule()); } 
	 EOF 
;

// Rule PrimaryArithmetic
rulePrimaryArithmetic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryArithmeticAccess().getAlternatives()); }
		(rule__PrimaryArithmetic__Alternatives)
		{ after(grammarAccess.getPrimaryArithmeticAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSecondOperators
entryRuleSecondOperators
:
{ before(grammarAccess.getSecondOperatorsRule()); }
	 ruleSecondOperators
{ after(grammarAccess.getSecondOperatorsRule()); } 
	 EOF 
;

// Rule SecondOperators
ruleSecondOperators 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSecondOperatorsAccess().getGroup()); }
		(rule__SecondOperators__Group__0)
		{ after(grammarAccess.getSecondOperatorsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanConst
entryRuleBooleanConst
:
{ before(grammarAccess.getBooleanConstRule()); }
	 ruleBooleanConst
{ after(grammarAccess.getBooleanConstRule()); } 
	 EOF 
;

// Rule BooleanConst
ruleBooleanConst 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanConstAccess().getValueAssignment()); }
		(rule__BooleanConst__ValueAssignment)
		{ after(grammarAccess.getBooleanConstAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericLiteral
entryRuleNumericLiteral
:
{ before(grammarAccess.getNumericLiteralRule()); }
	 ruleNumericLiteral
{ after(grammarAccess.getNumericLiteralRule()); } 
	 EOF 
;

// Rule NumericLiteral
ruleNumericLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericLiteralAccess().getGroup()); }
		(rule__NumericLiteral__Group__0)
		{ after(grammarAccess.getNumericLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNow
entryRuleNow
:
{ before(grammarAccess.getNowRule()); }
	 ruleNow
{ after(grammarAccess.getNowRule()); } 
	 EOF 
;

// Rule Now
ruleNow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNowAccess().getGroup()); }
		(rule__Now__Group__0)
		{ after(grammarAccess.getNowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitTypes
entryRuleUnitTypes
:
{ before(grammarAccess.getUnitTypesRule()); }
	 ruleUnitTypes
{ after(grammarAccess.getUnitTypesRule()); } 
	 EOF 
;

// Rule UnitTypes
ruleUnitTypes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitTypesAccess().getAlternatives()); }
		(rule__UnitTypes__Alternatives)
		{ after(grammarAccess.getUnitTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumberDimensionless
entryRuleNumberDimensionless
:
{ before(grammarAccess.getNumberDimensionlessRule()); }
	 ruleNumberDimensionless
{ after(grammarAccess.getNumberDimensionlessRule()); } 
	 EOF 
;

// Rule NumberDimensionless
ruleNumberDimensionless 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberDimensionlessAccess().getValueAssignment()); }
		(rule__NumberDimensionless__ValueAssignment)
		{ after(grammarAccess.getNumberDimensionlessAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEther
entryRuleEther
:
{ before(grammarAccess.getEtherRule()); }
	 ruleEther
{ after(grammarAccess.getEtherRule()); } 
	 EOF 
;

// Rule Ether
ruleEther 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEtherAccess().getGroup()); }
		(rule__Ether__Group__0)
		{ after(grammarAccess.getEtherAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTime
entryRuleTime
:
{ before(grammarAccess.getTimeRule()); }
	 ruleTime
{ after(grammarAccess.getTimeRule()); } 
	 EOF 
;

// Rule Time
ruleTime 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeAccess().getGroup()); }
		(rule__Time__Group__0)
		{ after(grammarAccess.getTimeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
		(rule__StringLiteral__ValueAssignment)
		{ after(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHexLiteral
entryRuleHexLiteral
:
{ before(grammarAccess.getHexLiteralRule()); }
	 ruleHexLiteral
{ after(grammarAccess.getHexLiteralRule()); } 
	 EOF 
;

// Rule HexLiteral
ruleHexLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHexLiteralAccess().getValueAssignment()); }
		(rule__HexLiteral__ValueAssignment)
		{ after(grammarAccess.getHexLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDecimalLiteral
entryRuleDecimalLiteral
:
{ before(grammarAccess.getDecimalLiteralRule()); }
	 ruleDecimalLiteral
{ after(grammarAccess.getDecimalLiteralRule()); } 
	 EOF 
;

// Rule DecimalLiteral
ruleDecimalLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDecimalLiteralAccess().getValueAssignment()); }
		(rule__DecimalLiteral__ValueAssignment)
		{ after(grammarAccess.getDecimalLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSpecialVariables
entryRuleSpecialVariables
:
{ before(grammarAccess.getSpecialVariablesRule()); }
	 ruleSpecialVariables
{ after(grammarAccess.getSpecialVariablesRule()); } 
	 EOF 
;

// Rule SpecialVariables
ruleSpecialVariables 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpecialVariablesAccess().getGroup()); }
		(rule__SpecialVariables__Group__0)
		{ after(grammarAccess.getSpecialVariablesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementaryTypeNameEnum
entryRuleElementaryTypeNameEnum
:
{ before(grammarAccess.getElementaryTypeNameEnumRule()); }
	 ruleElementaryTypeNameEnum
{ after(grammarAccess.getElementaryTypeNameEnumRule()); } 
	 EOF 
;

// Rule ElementaryTypeNameEnum
ruleElementaryTypeNameEnum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeAssignment()); }
		(rule__ElementaryTypeNameEnum__TypeAssignment)
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapLocationLiteral
entryRuleMapLocationLiteral
:
{ before(grammarAccess.getMapLocationLiteralRule()); }
	 ruleMapLocationLiteral
{ after(grammarAccess.getMapLocationLiteralRule()); } 
	 EOF 
;

// Rule MapLocationLiteral
ruleMapLocationLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapLocationLiteralAccess().getStorageKeyword()); }
		'storage'
		{ after(grammarAccess.getMapLocationLiteralAccess().getStorageKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocationSpecifierEnum
entryRuleLocationSpecifierEnum
:
{ before(grammarAccess.getLocationSpecifierEnumRule()); }
	 ruleLocationSpecifierEnum
{ after(grammarAccess.getLocationSpecifierEnumRule()); } 
	 EOF 
;

// Rule LocationSpecifierEnum
ruleLocationSpecifierEnum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocationSpecifierEnumAccess().getTypeAssignment()); }
		(rule__LocationSpecifierEnum__TypeAssignment)
		{ after(grammarAccess.getLocationSpecifierEnumAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVisibilityEnum
entryRuleVisibilityEnum
:
{ before(grammarAccess.getVisibilityEnumRule()); }
	 ruleVisibilityEnum
{ after(grammarAccess.getVisibilityEnumRule()); } 
	 EOF 
;

// Rule VisibilityEnum
ruleVisibilityEnum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVisibilityEnumAccess().getTypeAssignment()); }
		(rule__VisibilityEnum__TypeAssignment)
		{ after(grammarAccess.getVisibilityEnumAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSpecialVariablesTypeEnum
entryRuleSpecialVariablesTypeEnum
:
{ before(grammarAccess.getSpecialVariablesTypeEnumRule()); }
	 ruleSpecialVariablesTypeEnum
{ after(grammarAccess.getSpecialVariablesTypeEnumRule()); } 
	 EOF 
;

// Rule SpecialVariablesTypeEnum
ruleSpecialVariablesTypeEnum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpecialVariablesTypeEnumAccess().getNameAssignment()); }
		(rule__SpecialVariablesTypeEnum__NameAssignment)
		{ after(grammarAccess.getSpecialVariablesTypeEnumAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule LogicalOperationLiteral
ruleLogicalOperationLiteral
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOperationLiteralAccess().getAlternatives()); }
		(rule__LogicalOperationLiteral__Alternatives)
		{ after(grammarAccess.getLogicalOperationLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BooleanLiteralEnum
ruleBooleanLiteralEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralEnumAccess().getAlternatives()); }
		(rule__BooleanLiteralEnum__Alternatives)
		{ after(grammarAccess.getBooleanLiteralEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule EtherSubDenominationEnum
ruleEtherSubDenominationEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEtherSubDenominationEnumAccess().getAlternatives()); }
		(rule__EtherSubDenominationEnum__Alternatives)
		{ after(grammarAccess.getEtherSubDenominationEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TimeSubdenominationEnum
ruleTimeSubdenominationEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeSubdenominationEnumAccess().getAlternatives()); }
		(rule__TimeSubdenominationEnum__Alternatives)
		{ after(grammarAccess.getTimeSubdenominationEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractAccess().getGroup_3_0()); }
		(rule__Contract__Group_3_0__0)
		{ after(grammarAccess.getContractAccess().getGroup_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getContractAccess().getBlocksAssignment_3_1()); }
		(rule__Contract__BlocksAssignment_3_1)
		{ after(grammarAccess.getContractAccess().getBlocksAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getFunctionDeclarationParserRuleCall_0()); }
		ruleFunctionDeclaration
		{ after(grammarAccess.getDeclarationAccess().getFunctionDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getStructDefinitionParserRuleCall_1()); }
		ruleStructDefinition
		{ after(grammarAccess.getDeclarationAccess().getStructDefinitionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Alternatives_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getBlockAssignment_6_0()); }
		(rule__FunctionDefinition__BlockAssignment_6_0)
		{ after(grammarAccess.getFunctionDefinitionAccess().getBlockAssignment_6_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getSemicolonKeyword_6_1()); }
		';'
		{ after(grammarAccess.getFunctionDefinitionAccess().getSemicolonKeyword_6_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallArgumentsAccess().getGroup_0()); }
		(rule__FunctionCallArguments__Group_0__0)
		{ after(grammarAccess.getFunctionCallArgumentsAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionCallArgumentsAccess().getFunctionCallListArgumentsParserRuleCall_1()); }
		ruleFunctionCallListArguments
		{ after(grammarAccess.getFunctionCallArgumentsAccess().getFunctionCallListArgumentsParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinitionOptionalElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionOptionalElementAccess().getConstParserRuleCall_0()); }
		ruleConst
		{ after(grammarAccess.getFunctionDefinitionOptionalElementAccess().getConstParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionDefinitionOptionalElementAccess().getModifierInvocationParserRuleCall_1()); }
		ruleModifierInvocation
		{ after(grammarAccess.getFunctionDefinitionOptionalElementAccess().getModifierInvocationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionDefinitionOptionalElementAccess().getVisibilitySpecifierParserRuleCall_2()); }
		ruleVisibilitySpecifier
		{ after(grammarAccess.getFunctionDefinitionOptionalElementAccess().getVisibilitySpecifierParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getStandardVariableDeclarationParserRuleCall_0()); }
		ruleStandardVariableDeclaration
		{ after(grammarAccess.getVariableDeclarationAccess().getStandardVariableDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getVarVariableDeclarationParserRuleCall_1()); }
		ruleVarVariableDeclaration
		{ after(grammarAccess.getVariableDeclarationAccess().getVarVariableDeclarationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getVarVariableTupleVariableDeclarationParserRuleCall_2()); }
		ruleVarVariableTupleVariableDeclaration
		{ after(grammarAccess.getVariableDeclarationAccess().getVarVariableTupleVariableDeclarationParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationOptionalElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationOptionalElementAccess().getVisibilitySpecifierParserRuleCall_0()); }
		ruleVisibilitySpecifier
		{ after(grammarAccess.getVariableDeclarationOptionalElementAccess().getVisibilitySpecifierParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationOptionalElementAccess().getIndexedSpeciferParserRuleCall_1()); }
		ruleIndexedSpecifer
		{ after(grammarAccess.getVariableDeclarationOptionalElementAccess().getIndexedSpeciferParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationOptionalElementAccess().getConstantSpecifierParserRuleCall_2()); }
		ruleConstantSpecifier
		{ after(grammarAccess.getVariableDeclarationOptionalElementAccess().getConstantSpecifierParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationOptionalElementAccess().getLocationSpecifierParserRuleCall_3()); }
		ruleLocationSpecifier
		{ after(grammarAccess.getVariableDeclarationOptionalElementAccess().getLocationSpecifierParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getStandardTypeParserRuleCall_0()); }
		ruleStandardType
		{ after(grammarAccess.getTypeAccess().getStandardTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getIsVarTypeAssignment_1()); }
		(rule__Type__IsVarTypeAssignment_1)
		{ after(grammarAccess.getTypeAccess().getIsVarTypeAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardTypeAccess().getGroup_0()); }
		(rule__StandardType__Group_0__0)
		{ after(grammarAccess.getStandardTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStandardTypeAccess().getMappingParserRuleCall_1()); }
		ruleMapping
		{ after(grammarAccess.getStandardTypeAccess().getMappingParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStandardTypeAccess().getQualifiedIdentifierParserRuleCall_2()); }
		ruleQualifiedIdentifier
		{ after(grammarAccess.getStandardTypeAccess().getQualifiedIdentifierParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardTypeWithoutQualifiedIdentifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getGroup_0()); }
		(rule__StandardTypeWithoutQualifiedIdentifier__Group_0__0)
		{ after(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getMappingParserRuleCall_1()); }
		ruleMapping
		{ after(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getMappingParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatementAccess().getGroup_0_0()); }
		(rule__SimpleStatement__Group_0_0__0)
		{ after(grammarAccess.getSimpleStatementAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStatementAccess().getGroup_0_1()); }
		(rule__SimpleStatement__Group_0_1__0)
		{ after(grammarAccess.getSimpleStatementAccess().getGroup_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStatementAccess().getExpressionStatementParserRuleCall_0_2()); }
		ruleExpressionStatement
		{ after(grammarAccess.getSimpleStatementAccess().getExpressionStatementParserRuleCall_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Alternatives_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatementAccess().getGroup_0_1_1_0()); }
		(rule__SimpleStatement__Group_0_1_1_0__0)
		{ after(grammarAccess.getSimpleStatementAccess().getGroup_0_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStatementAccess().getGroup_0_1_1_1()); }
		(rule__SimpleStatement__Group_0_1_1_1__0)
		{ after(grammarAccess.getSimpleStatementAccess().getGroup_0_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatement2Access().getGroup_0()); }
		(rule__SimpleStatement2__Group_0__0)
		{ after(grammarAccess.getSimpleStatement2Access().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStatement2Access().getGroup_1()); }
		(rule__SimpleStatement2__Group_1__0)
		{ after(grammarAccess.getSimpleStatement2Access().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStatement2Access().getExpressionStatementParserRuleCall_2()); }
		ruleExpressionStatement
		{ after(grammarAccess.getSimpleStatement2Access().getExpressionStatementParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatement2Access().getGroup_1_1_0()); }
		(rule__SimpleStatement2__Group_1_1_0__0)
		{ after(grammarAccess.getSimpleStatement2Access().getGroup_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStatement2Access().getGroup_1_1_1()); }
		(rule__SimpleStatement2__Group_1_1_1__0)
		{ after(grammarAccess.getSimpleStatement2Access().getGroup_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifierAccess().getFieldParserRuleCall_0()); }
		ruleField
		{ after(grammarAccess.getQualifierAccess().getFieldParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getQualifierAccess().getIndexParserRuleCall_1()); }
		ruleIndex
		{ after(grammarAccess.getQualifierAccess().getIndexParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getQualifierAccess().getArgumentsParserRuleCall_2()); }
		ruleArguments
		{ after(grammarAccess.getQualifierAccess().getArgumentsParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStructures__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopStructuresAccess().getIfStatementParserRuleCall_0()); }
		ruleIfStatement
		{ after(grammarAccess.getLoopStructuresAccess().getIfStatementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLoopStructuresAccess().getWhileStatementParserRuleCall_1()); }
		ruleWhileStatement
		{ after(grammarAccess.getLoopStructuresAccess().getWhileStatementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLoopStructuresAccess().getForStatementParserRuleCall_2()); }
		ruleForStatement
		{ after(grammarAccess.getLoopStructuresAccess().getForStatementParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getLoopStructuresParserRuleCall_0()); }
		ruleLoopStructures
		{ after(grammarAccess.getStatementAccess().getLoopStructuresParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getBodyParserRuleCall_1()); }
		ruleBody
		{ after(grammarAccess.getStatementAccess().getBodyParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getPlaceHolderStatementParserRuleCall_2()); }
		rulePlaceHolderStatement
		{ after(grammarAccess.getStatementAccess().getPlaceHolderStatementParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives_3()); }
		(rule__Statement__Alternatives_3)
		{ after(grammarAccess.getStatementAccess().getAlternatives_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getContinueStatementParserRuleCall_3_0()); }
		ruleContinueStatement
		{ after(grammarAccess.getStatementAccess().getContinueStatementParserRuleCall_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getBreakStatementParserRuleCall_3_1()); }
		ruleBreakStatement
		{ after(grammarAccess.getStatementAccess().getBreakStatementParserRuleCall_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_3_2()); }
		ruleReturnStatement
		{ after(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_3_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getThrowStatementParserRuleCall_3_3()); }
		ruleThrowStatement
		{ after(grammarAccess.getStatementAccess().getThrowStatementParserRuleCall_3_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDeleteStatementParserRuleCall_3_4()); }
		ruleDeleteStatement
		{ after(grammarAccess.getStatementAccess().getDeleteStatementParserRuleCall_3_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSimpleStatementParserRuleCall_3_5()); }
		ruleSimpleStatement
		{ after(grammarAccess.getStatementAccess().getSimpleStatementParserRuleCall_3_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_0()); }
		(rule__Expression__Group_0__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
		(rule__Expression__Group_1__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_2()); }
		(rule__Expression__Group_2__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getSpecialVariablesParserRuleCall_0()); }
		ruleSpecialVariables
		{ after(grammarAccess.getLiteralAccess().getSpecialVariablesParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getBooleanConstParserRuleCall_1()); }
		ruleBooleanConst
		{ after(grammarAccess.getLiteralAccess().getBooleanConstParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getNumericLiteralParserRuleCall_2()); }
		ruleNumericLiteral
		{ after(grammarAccess.getLiteralAccess().getNumericLiteralParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_3()); }
		ruleStringLiteral
		{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getGasleftFunctionParserRuleCall_4()); }
		ruleGasleftFunction
		{ after(grammarAccess.getLiteralAccess().getGasleftFunctionParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getBlockhashFunctionParserRuleCall_5()); }
		ruleBlockhashFunction
		{ after(grammarAccess.getLiteralAccess().getBlockhashFunctionParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getMathematicalFunctionParserRuleCall_6()); }
		ruleMathematicalFunction
		{ after(grammarAccess.getLiteralAccess().getMathematicalFunctionParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getHashFunctionParserRuleCall_7()); }
		ruleHashFunction
		{ after(grammarAccess.getLiteralAccess().getHashFunctionParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getEcrecoverFunctionParserRuleCall_8()); }
		ruleEcrecoverFunction
		{ after(grammarAccess.getLiteralAccess().getEcrecoverFunctionParserRuleCall_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathematicalFunction__FunctionAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathematicalFunctionAccess().getFunctionAddmodKeyword_0_0_0()); }
		'addmod'
		{ after(grammarAccess.getMathematicalFunctionAccess().getFunctionAddmodKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMathematicalFunctionAccess().getFunctionMulmodKeyword_0_0_1()); }
		'mulmod'
		{ after(grammarAccess.getMathematicalFunctionAccess().getFunctionMulmodKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFunction__NameAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHashFunctionAccess().getNameKeccak256Keyword_0_0_0()); }
		'keccak256'
		{ after(grammarAccess.getHashFunctionAccess().getNameKeccak256Keyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getHashFunctionAccess().getNameSha256Keyword_0_0_1()); }
		'sha256'
		{ after(grammarAccess.getHashFunctionAccess().getNameSha256Keyword_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getHashFunctionAccess().getNameRipemd160Keyword_0_0_2()); }
		'ripemd160'
		{ after(grammarAccess.getHashFunctionAccess().getNameRipemd160Keyword_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntParameter__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntParameterAccess().getParamAssignment_0()); }
		(rule__IntParameter__ParamAssignment_0)
		{ after(grammarAccess.getIntParameterAccess().getParamAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getIntParameterAccess().getFunAssignment_1()); }
		(rule__IntParameter__FunAssignment_1)
		{ after(grammarAccess.getIntParameterAccess().getFunAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryArithmetic__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryArithmeticAccess().getNumericLiteralParserRuleCall_0()); }
		ruleNumericLiteral
		{ after(grammarAccess.getPrimaryArithmeticAccess().getNumericLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryArithmeticAccess().getGroup_1()); }
		(rule__PrimaryArithmetic__Group_1__0)
		{ after(grammarAccess.getPrimaryArithmeticAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SecondOperators__OperatorAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSecondOperatorsAccess().getOperatorPlusSignKeyword_0_0_0()); }
		'+'
		{ after(grammarAccess.getSecondOperatorsAccess().getOperatorPlusSignKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSecondOperatorsAccess().getOperatorHyphenMinusKeyword_0_0_1()); }
		'-'
		{ after(grammarAccess.getSecondOperatorsAccess().getOperatorHyphenMinusKeyword_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getSecondOperatorsAccess().getOperatorSolidusKeyword_0_0_2()); }
		'/'
		{ after(grammarAccess.getSecondOperatorsAccess().getOperatorSolidusKeyword_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getSecondOperatorsAccess().getOperatorAsteriskKeyword_0_0_3()); }
		'*'
		{ after(grammarAccess.getSecondOperatorsAccess().getOperatorAsteriskKeyword_0_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericLiteral__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericLiteralAccess().getIntValueAssignment_0_0()); }
		(rule__NumericLiteral__IntValueAssignment_0_0)
		{ after(grammarAccess.getNumericLiteralAccess().getIntValueAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumericLiteralAccess().getHexValueAssignment_0_1()); }
		(rule__NumericLiteral__HexValueAssignment_0_1)
		{ after(grammarAccess.getNumericLiteralAccess().getHexValueAssignment_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getNumericLiteralAccess().getDecimalValueAssignment_0_2()); }
		(rule__NumericLiteral__DecimalValueAssignment_0_2)
		{ after(grammarAccess.getNumericLiteralAccess().getDecimalValueAssignment_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getNumericLiteralAccess().getNowAssignment_0_3()); }
		(rule__NumericLiteral__NowAssignment_0_3)
		{ after(grammarAccess.getNumericLiteralAccess().getNowAssignment_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTypes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitTypesAccess().getTimeAssignment_0()); }
		(rule__UnitTypes__TimeAssignment_0)
		{ after(grammarAccess.getUnitTypesAccess().getTimeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnitTypesAccess().getUnitsAssignment_1()); }
		(rule__UnitTypes__UnitsAssignment_1)
		{ after(grammarAccess.getUnitTypesAccess().getUnitsAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementaryTypeNameEnum__TypeAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeIntKeyword_0_0()); }
		'int'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeIntKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt16Keyword_0_1()); }
		'int16'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt16Keyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt24Keyword_0_2()); }
		'int24'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt24Keyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt32Keyword_0_3()); }
		'int32'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt32Keyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt40Keyword_0_4()); }
		'int40'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt40Keyword_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt48Keyword_0_5()); }
		'int48'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt48Keyword_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt56Keyword_0_6()); }
		'int56'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt56Keyword_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt64Keyword_0_7()); }
		'int64'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt64Keyword_0_7()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt72Keyword_0_8()); }
		'int72'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt72Keyword_0_8()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt80Keyword_0_9()); }
		'int80'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt80Keyword_0_9()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt88Keyword_0_10()); }
		'int88'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt88Keyword_0_10()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt96Keyword_0_11()); }
		'int96'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt96Keyword_0_11()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt104Keyword_0_12()); }
		'int104'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt104Keyword_0_12()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt112Keyword_0_13()); }
		'int112'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt112Keyword_0_13()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt120Keyword_0_14()); }
		'int120'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt120Keyword_0_14()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt128Keyword_0_15()); }
		'int128'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt128Keyword_0_15()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt136Keyword_0_16()); }
		'int136'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt136Keyword_0_16()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt144Keyword_0_17()); }
		'int144'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt144Keyword_0_17()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt152Keyword_0_18()); }
		'int152'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt152Keyword_0_18()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt160Keyword_0_19()); }
		'int160'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt160Keyword_0_19()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt168Keyword_0_20()); }
		'int168'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt168Keyword_0_20()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt178Keyword_0_21()); }
		'int178'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt178Keyword_0_21()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt184Keyword_0_22()); }
		'int184'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt184Keyword_0_22()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt192Keyword_0_23()); }
		'int192'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt192Keyword_0_23()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt200Keyword_0_24()); }
		'int200'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt200Keyword_0_24()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt208Keyword_0_25()); }
		'int208'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt208Keyword_0_25()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt216Keyword_0_26()); }
		'int216'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt216Keyword_0_26()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt224Keyword_0_27()); }
		'int224'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt224Keyword_0_27()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt232Keyword_0_28()); }
		'int232'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt232Keyword_0_28()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt240Keyword_0_29()); }
		'int240'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt240Keyword_0_29()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt248Keyword_0_30()); }
		'int248'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt248Keyword_0_30()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt256Keyword_0_31()); }
		'int256'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt256Keyword_0_31()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUintKeyword_0_32()); }
		'uint'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUintKeyword_0_32()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint8Keyword_0_33()); }
		'uint8'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint8Keyword_0_33()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint16Keyword_0_34()); }
		'uint16'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint16Keyword_0_34()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint24Keyword_0_35()); }
		'uint24'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint24Keyword_0_35()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint32Keyword_0_36()); }
		'uint32'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint32Keyword_0_36()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint40Keyword_0_37()); }
		'uint40'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint40Keyword_0_37()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint48Keyword_0_38()); }
		'uint48'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint48Keyword_0_38()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint56Keyword_0_39()); }
		'uint56'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint56Keyword_0_39()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint64Keyword_0_40()); }
		'uint64'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint64Keyword_0_40()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint72Keyword_0_41()); }
		'uint72'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint72Keyword_0_41()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint80Keyword_0_42()); }
		'uint80'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint80Keyword_0_42()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint88Keyword_0_43()); }
		'uint88'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint88Keyword_0_43()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint96Keyword_0_44()); }
		'uint96'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint96Keyword_0_44()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint104Keyword_0_45()); }
		'uint104'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint104Keyword_0_45()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint112Keyword_0_46()); }
		'uint112'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint112Keyword_0_46()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint120Keyword_0_47()); }
		'uint120'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint120Keyword_0_47()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint128Keyword_0_48()); }
		'uint128'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint128Keyword_0_48()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint136Keyword_0_49()); }
		'uint136'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint136Keyword_0_49()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint144Keyword_0_50()); }
		'uint144'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint144Keyword_0_50()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint152Keyword_0_51()); }
		'uint152'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint152Keyword_0_51()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint160Keyword_0_52()); }
		'uint160'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint160Keyword_0_52()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint168Keyword_0_53()); }
		'uint168'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint168Keyword_0_53()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint178Keyword_0_54()); }
		'uint178'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint178Keyword_0_54()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint184Keyword_0_55()); }
		'uint184'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint184Keyword_0_55()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint192Keyword_0_56()); }
		'uint192'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint192Keyword_0_56()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint200Keyword_0_57()); }
		'uint200'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint200Keyword_0_57()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint208Keyword_0_58()); }
		'uint208'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint208Keyword_0_58()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint216Keyword_0_59()); }
		'uint216'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint216Keyword_0_59()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint224Keyword_0_60()); }
		'uint224'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint224Keyword_0_60()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint232Keyword_0_61()); }
		'uint232'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint232Keyword_0_61()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint240Keyword_0_62()); }
		'uint240'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint240Keyword_0_62()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint248Keyword_0_63()); }
		'uint248'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint248Keyword_0_63()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint256Keyword_0_64()); }
		'uint256'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint256Keyword_0_64()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeByteKeyword_0_65()); }
		'byte'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeByteKeyword_0_65()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytesKeyword_0_66()); }
		'bytes'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytesKeyword_0_66()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes1Keyword_0_67()); }
		'bytes1'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes1Keyword_0_67()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes2Keyword_0_68()); }
		'bytes2'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes2Keyword_0_68()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes3Keyword_0_69()); }
		'bytes3'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes3Keyword_0_69()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes4Keyword_0_70()); }
		'bytes4'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes4Keyword_0_70()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes5Keyword_0_71()); }
		'bytes5'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes5Keyword_0_71()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes6Keyword_0_72()); }
		'bytes6'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes6Keyword_0_72()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes7Keyword_0_73()); }
		'bytes7'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes7Keyword_0_73()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes8Keyword_0_74()); }
		'bytes8'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes8Keyword_0_74()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes9Keyword_0_75()); }
		'bytes9'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes9Keyword_0_75()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes10Keyword_0_76()); }
		'bytes10'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes10Keyword_0_76()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes11Keyword_0_77()); }
		'bytes11'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes11Keyword_0_77()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes12Keyword_0_78()); }
		'bytes12'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes12Keyword_0_78()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes13Keyword_0_79()); }
		'bytes13'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes13Keyword_0_79()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes14Keyword_0_80()); }
		'bytes14'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes14Keyword_0_80()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes15Keyword_0_81()); }
		'bytes15'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes15Keyword_0_81()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes16Keyword_0_82()); }
		'bytes16'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes16Keyword_0_82()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes17Keyword_0_83()); }
		'bytes17'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes17Keyword_0_83()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes18Keyword_0_84()); }
		'bytes18'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes18Keyword_0_84()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes19Keyword_0_85()); }
		'bytes19'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes19Keyword_0_85()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes20Keyword_0_86()); }
		'bytes20'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes20Keyword_0_86()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes21Keyword_0_87()); }
		'bytes21'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes21Keyword_0_87()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes22Keyword_0_88()); }
		'bytes22'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes22Keyword_0_88()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes23Keyword_0_89()); }
		'bytes23'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes23Keyword_0_89()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes24Keyword_0_90()); }
		'bytes24'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes24Keyword_0_90()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes25Keyword_0_91()); }
		'bytes25'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes25Keyword_0_91()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes26Keyword_0_92()); }
		'bytes26'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes26Keyword_0_92()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes27Keyword_0_93()); }
		'bytes27'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes27Keyword_0_93()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes28Keyword_0_94()); }
		'bytes28'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes28Keyword_0_94()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes29Keyword_0_95()); }
		'bytes29'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes29Keyword_0_95()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes30Keyword_0_96()); }
		'bytes30'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes30Keyword_0_96()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes31Keyword_0_97()); }
		'bytes31'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes31Keyword_0_97()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes32Keyword_0_98()); }
		'bytes32'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes32Keyword_0_98()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeStringKeyword_0_99()); }
		'string'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeStringKeyword_0_99()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeAddressKeyword_0_100()); }
		'address'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeAddressKeyword_0_100()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBoolKeyword_0_101()); }
		'bool'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeBoolKeyword_0_101()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeRealKeyword_0_102()); }
		'real'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeRealKeyword_0_102()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUrealKeyword_0_103()); }
		'ureal'
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeUrealKeyword_0_103()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationSpecifierEnum__TypeAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocationSpecifierEnumAccess().getTypeMemoryKeyword_0_0()); }
		'memory'
		{ after(grammarAccess.getLocationSpecifierEnumAccess().getTypeMemoryKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getLocationSpecifierEnumAccess().getTypeMapLocationLiteralParserRuleCall_0_1()); }
		ruleMapLocationLiteral
		{ after(grammarAccess.getLocationSpecifierEnumAccess().getTypeMapLocationLiteralParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getLocationSpecifierEnumAccess().getTypeCalldataKeyword_0_2()); }
		'calldata'
		{ after(grammarAccess.getLocationSpecifierEnumAccess().getTypeCalldataKeyword_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VisibilityEnum__TypeAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisibilityEnumAccess().getTypePublicKeyword_0_0()); }
		'public'
		{ after(grammarAccess.getVisibilityEnumAccess().getTypePublicKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getVisibilityEnumAccess().getTypeInternalKeyword_0_1()); }
		'internal'
		{ after(grammarAccess.getVisibilityEnumAccess().getTypeInternalKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getVisibilityEnumAccess().getTypePrivateKeyword_0_2()); }
		'private'
		{ after(grammarAccess.getVisibilityEnumAccess().getTypePrivateKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getVisibilityEnumAccess().getTypeExternalKeyword_0_3()); }
		'external'
		{ after(grammarAccess.getVisibilityEnumAccess().getTypeExternalKeyword_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialVariablesTypeEnum__NameAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecialVariablesTypeEnumAccess().getNameBLOCKTerminalRuleCall_0_0()); }
		RULE_BLOCK
		{ after(grammarAccess.getSpecialVariablesTypeEnumAccess().getNameBLOCKTerminalRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSpecialVariablesTypeEnumAccess().getNameMSGTerminalRuleCall_0_1()); }
		RULE_MSG
		{ after(grammarAccess.getSpecialVariablesTypeEnumAccess().getNameMSGTerminalRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getSpecialVariablesTypeEnumAccess().getNameTXTerminalRuleCall_0_2()); }
		RULE_TX
		{ after(grammarAccess.getSpecialVariablesTypeEnumAccess().getNameTXTerminalRuleCall_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperationLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOperationLiteralAccess().getNOTEQUALEnumLiteralDeclaration_0()); }
		('!=')
		{ after(grammarAccess.getLogicalOperationLiteralAccess().getNOTEQUALEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalOperationLiteralAccess().getEQUALEnumLiteralDeclaration_1()); }
		('==')
		{ after(grammarAccess.getLogicalOperationLiteralAccess().getEQUALEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalOperationLiteralAccess().getANDEnumLiteralDeclaration_2()); }
		('&&')
		{ after(grammarAccess.getLogicalOperationLiteralAccess().getANDEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalOperationLiteralAccess().getOREnumLiteralDeclaration_3()); }
		('||')
		{ after(grammarAccess.getLogicalOperationLiteralAccess().getOREnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalOperationLiteralAccess().getGTEEnumLiteralDeclaration_4()); }
		('>=')
		{ after(grammarAccess.getLogicalOperationLiteralAccess().getGTEEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalOperationLiteralAccess().getLTEEnumLiteralDeclaration_5()); }
		('<=')
		{ after(grammarAccess.getLogicalOperationLiteralAccess().getLTEEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalOperationLiteralAccess().getGTEnumLiteralDeclaration_6()); }
		('>')
		{ after(grammarAccess.getLogicalOperationLiteralAccess().getGTEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalOperationLiteralAccess().getLTEnumLiteralDeclaration_7()); }
		('<')
		{ after(grammarAccess.getLogicalOperationLiteralAccess().getLTEnumLiteralDeclaration_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteralEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralEnumAccess().getTRUEEnumLiteralDeclaration_0()); }
		('true')
		{ after(grammarAccess.getBooleanLiteralEnumAccess().getTRUEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanLiteralEnumAccess().getFALSEEnumLiteralDeclaration_1()); }
		('false')
		{ after(grammarAccess.getBooleanLiteralEnumAccess().getFALSEEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EtherSubDenominationEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEtherSubDenominationEnumAccess().getWEIEnumLiteralDeclaration_0()); }
		('wei')
		{ after(grammarAccess.getEtherSubDenominationEnumAccess().getWEIEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getEtherSubDenominationEnumAccess().getSZABOEnumLiteralDeclaration_1()); }
		('szabo')
		{ after(grammarAccess.getEtherSubDenominationEnumAccess().getSZABOEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getEtherSubDenominationEnumAccess().getFINNEYEnumLiteralDeclaration_2()); }
		('finney')
		{ after(grammarAccess.getEtherSubDenominationEnumAccess().getFINNEYEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getEtherSubDenominationEnumAccess().getETHEREnumLiteralDeclaration_3()); }
		('ether')
		{ after(grammarAccess.getEtherSubDenominationEnumAccess().getETHEREnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSubdenominationEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeSubdenominationEnumAccess().getSECONDSEnumLiteralDeclaration_0()); }
		('seconds')
		{ after(grammarAccess.getTimeSubdenominationEnumAccess().getSECONDSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeSubdenominationEnumAccess().getMINUTESEnumLiteralDeclaration_1()); }
		('minutes')
		{ after(grammarAccess.getTimeSubdenominationEnumAccess().getMINUTESEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimeSubdenominationEnumAccess().getHOURSEnumLiteralDeclaration_2()); }
		('hours')
		{ after(grammarAccess.getTimeSubdenominationEnumAccess().getHOURSEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTimeSubdenominationEnumAccess().getDAYSEnumLiteralDeclaration_3()); }
		('days')
		{ after(grammarAccess.getTimeSubdenominationEnumAccess().getDAYSEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getTimeSubdenominationEnumAccess().getWEEKSEnumLiteralDeclaration_4()); }
		('weeks')
		{ after(grammarAccess.getTimeSubdenominationEnumAccess().getWEEKSEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getTimeSubdenominationEnumAccess().getYEARSEnumLiteralDeclaration_5()); }
		('years')
		{ after(grammarAccess.getTimeSubdenominationEnumAccess().getYEARSEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__0__Impl
	rule__Contract__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getContractKeyword_0()); }
	'contract'
	{ after(grammarAccess.getContractAccess().getContractKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__1__Impl
	rule__Contract__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getNameAssignment_1()); }
	(rule__Contract__NameAssignment_1)
	{ after(grammarAccess.getContractAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__2__Impl
	rule__Contract__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getContractAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__3__Impl
	rule__Contract__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getAlternatives_3()); }
	(rule__Contract__Alternatives_3)*
	{ after(grammarAccess.getContractAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getContractAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Contract__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group_3_0__0__Impl
	rule__Contract__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getBlocksAssignment_3_0_0()); }
	(rule__Contract__BlocksAssignment_3_0_0)
	{ after(grammarAccess.getContractAccess().getBlocksAssignment_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getSemicolonKeyword_3_0_1()); }
	';'
	{ after(grammarAccess.getContractAccess().getSemicolonKeyword_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__0__Impl
	rule__FunctionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getPayableAssignment_0()); }
	(rule__FunctionDefinition__PayableAssignment_0)?
	{ after(grammarAccess.getFunctionDefinitionAccess().getPayableAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__1__Impl
	rule__FunctionDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getFunctionKeyword_1()); }
	'function'
	{ after(grammarAccess.getFunctionDefinitionAccess().getFunctionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__2__Impl
	rule__FunctionDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getNameAssignment_2()); }
	(rule__FunctionDefinition__NameAssignment_2)
	{ after(grammarAccess.getFunctionDefinitionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__3__Impl
	rule__FunctionDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getParametersAssignment_3()); }
	(rule__FunctionDefinition__ParametersAssignment_3)
	{ after(grammarAccess.getFunctionDefinitionAccess().getParametersAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__4__Impl
	rule__FunctionDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getOptionalElementsAssignment_4()); }
	(rule__FunctionDefinition__OptionalElementsAssignment_4)*
	{ after(grammarAccess.getFunctionDefinitionAccess().getOptionalElementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__5__Impl
	rule__FunctionDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getGroup_5()); }
	(rule__FunctionDefinition__Group_5__0)?
	{ after(grammarAccess.getFunctionDefinitionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getAlternatives_6()); }
	(rule__FunctionDefinition__Alternatives_6)
	{ after(grammarAccess.getFunctionDefinitionAccess().getAlternatives_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group_5__0__Impl
	rule__FunctionDefinition__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getReturnsKeyword_5_0()); }
	'returns'
	{ after(grammarAccess.getFunctionDefinitionAccess().getReturnsKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getReturnParametersAssignment_5_1()); }
	(rule__FunctionDefinition__ReturnParametersAssignment_5_1)
	{ after(grammarAccess.getFunctionDefinitionAccess().getReturnParametersAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallListArguments__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallListArguments__Group__0__Impl
	rule__FunctionCallListArguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallListArgumentsAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getFunctionCallListArgumentsAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallListArguments__Group__1__Impl
	rule__FunctionCallListArguments__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallListArgumentsAccess().getFunctionCallListArgumentsAction_1()); }
	()
	{ after(grammarAccess.getFunctionCallListArgumentsAccess().getFunctionCallListArgumentsAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallListArguments__Group__2__Impl
	rule__FunctionCallListArguments__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallListArgumentsAccess().getGroup_2()); }
	(rule__FunctionCallListArguments__Group_2__0)?
	{ after(grammarAccess.getFunctionCallListArgumentsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallListArguments__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallListArgumentsAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFunctionCallListArgumentsAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallListArguments__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallListArguments__Group_2__0__Impl
	rule__FunctionCallListArguments__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallListArgumentsAccess().getArgumentsAssignment_2_0()); }
	(rule__FunctionCallListArguments__ArgumentsAssignment_2_0)
	{ after(grammarAccess.getFunctionCallListArgumentsAccess().getArgumentsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallListArguments__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallListArgumentsAccess().getGroup_2_1()); }
	(rule__FunctionCallListArguments__Group_2_1__0)*
	{ after(grammarAccess.getFunctionCallListArgumentsAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallListArguments__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallListArguments__Group_2_1__0__Impl
	rule__FunctionCallListArguments__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallListArgumentsAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getFunctionCallListArgumentsAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallListArguments__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallListArgumentsAccess().getArgumentsAssignment_2_1_1()); }
	(rule__FunctionCallListArguments__ArgumentsAssignment_2_1_1)
	{ after(grammarAccess.getFunctionCallListArgumentsAccess().getArgumentsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallArguments__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArguments__Group_0__0__Impl
	rule__FunctionCallArguments__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgumentsAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getFunctionCallArgumentsAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArguments__Group_0__1__Impl
	rule__FunctionCallArguments__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgumentsAccess().getLeftCurlyBracketKeyword_0_1()); }
	'{'
	{ after(grammarAccess.getFunctionCallArgumentsAccess().getLeftCurlyBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArguments__Group_0__2__Impl
	rule__FunctionCallArguments__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgumentsAccess().getFunctionCallArgumentsAction_0_2()); }
	()
	{ after(grammarAccess.getFunctionCallArgumentsAccess().getFunctionCallArgumentsAction_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArguments__Group_0__3__Impl
	rule__FunctionCallArguments__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgumentsAccess().getGroup_0_3()); }
	(rule__FunctionCallArguments__Group_0_3__0)?
	{ after(grammarAccess.getFunctionCallArgumentsAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArguments__Group_0__4__Impl
	rule__FunctionCallArguments__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgumentsAccess().getRightCurlyBracketKeyword_0_4()); }
	'}'
	{ after(grammarAccess.getFunctionCallArgumentsAccess().getRightCurlyBracketKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArguments__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgumentsAccess().getRightParenthesisKeyword_0_5()); }
	')'
	{ after(grammarAccess.getFunctionCallArgumentsAccess().getRightParenthesisKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallArguments__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArguments__Group_0_3__0__Impl
	rule__FunctionCallArguments__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgumentsAccess().getArgsAssignment_0_3_0()); }
	(rule__FunctionCallArguments__ArgsAssignment_0_3_0)
	{ after(grammarAccess.getFunctionCallArgumentsAccess().getArgsAssignment_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArguments__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgumentsAccess().getGroup_0_3_1()); }
	(rule__FunctionCallArguments__Group_0_3_1__0)*
	{ after(grammarAccess.getFunctionCallArgumentsAccess().getGroup_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallArguments__Group_0_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArguments__Group_0_3_1__0__Impl
	rule__FunctionCallArguments__Group_0_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgumentsAccess().getCommaKeyword_0_3_1_0()); }
	','
	{ after(grammarAccess.getFunctionCallArgumentsAccess().getCommaKeyword_0_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArguments__Group_0_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgumentsAccess().getArgsAssignment_0_3_1_1()); }
	(rule__FunctionCallArguments__ArgsAssignment_0_3_1_1)
	{ after(grammarAccess.getFunctionCallArgumentsAccess().getArgsAssignment_0_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallArg__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArg__Group__0__Impl
	rule__FunctionCallArg__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArg__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgAccess().getNameAssignment_0()); }
	(rule__FunctionCallArg__NameAssignment_0)
	{ after(grammarAccess.getFunctionCallArgAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArg__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArg__Group__1__Impl
	rule__FunctionCallArg__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArg__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getFunctionCallArgAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArg__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArg__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArg__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgAccess().getExprAssignment_2()); }
	(rule__FunctionCallArg__ExprAssignment_2)
	{ after(grammarAccess.getFunctionCallArgAccess().getExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Const__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Const__Group__0__Impl
	rule__Const__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Const__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstAccess().getConstantKeyword_0()); }
	'constant'
	{ after(grammarAccess.getConstAccess().getConstantKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Const__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Const__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Const__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstAccess().getConstAction_1()); }
	()
	{ after(grammarAccess.getConstAccess().getConstAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDefinition__Group__0__Impl
	rule__StructDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDefinitionAccess().getVisibilityAssignment_0()); }
	(rule__StructDefinition__VisibilityAssignment_0)?
	{ after(grammarAccess.getStructDefinitionAccess().getVisibilityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDefinition__Group__1__Impl
	rule__StructDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDefinitionAccess().getStructKeyword_1()); }
	'struct'
	{ after(grammarAccess.getStructDefinitionAccess().getStructKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDefinition__Group__2__Impl
	rule__StructDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDefinitionAccess().getNameAssignment_2()); }
	(rule__StructDefinition__NameAssignment_2)
	{ after(grammarAccess.getStructDefinitionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDefinition__Group__3__Impl
	rule__StructDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDefinitionAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getStructDefinitionAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDefinition__Group__4__Impl
	rule__StructDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDefinitionAccess().getGroup_4()); }
	(rule__StructDefinition__Group_4__0)*
	{ after(grammarAccess.getStructDefinitionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDefinitionAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getStructDefinitionAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructDefinition__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDefinition__Group_4__0__Impl
	rule__StructDefinition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDefinitionAccess().getMembersAssignment_4_0()); }
	(rule__StructDefinition__MembersAssignment_4_0)
	{ after(grammarAccess.getStructDefinitionAccess().getMembersAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDefinition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDefinitionAccess().getSemicolonKeyword_4_1()); }
	';'
	{ after(grammarAccess.getStructDefinitionAccess().getSemicolonKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDefinition__Group__0__Impl
	rule__EnumDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefinitionAccess().getVisibilityAssignment_0()); }
	(rule__EnumDefinition__VisibilityAssignment_0)?
	{ after(grammarAccess.getEnumDefinitionAccess().getVisibilityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDefinition__Group__1__Impl
	rule__EnumDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefinitionAccess().getEnumKeyword_1()); }
	'enum'
	{ after(grammarAccess.getEnumDefinitionAccess().getEnumKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDefinition__Group__2__Impl
	rule__EnumDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefinitionAccess().getNameAssignment_2()); }
	(rule__EnumDefinition__NameAssignment_2)
	{ after(grammarAccess.getEnumDefinitionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDefinition__Group__3__Impl
	rule__EnumDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefinitionAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getEnumDefinitionAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDefinition__Group__4__Impl
	rule__EnumDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefinitionAccess().getMembersAssignment_4()); }
	(rule__EnumDefinition__MembersAssignment_4)
	{ after(grammarAccess.getEnumDefinitionAccess().getMembersAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDefinition__Group__5__Impl
	rule__EnumDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefinitionAccess().getGroup_5()); }
	(rule__EnumDefinition__Group_5__0)*
	{ after(grammarAccess.getEnumDefinitionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDefinition__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefinitionAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getEnumDefinitionAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDefinition__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDefinition__Group_5__0__Impl
	rule__EnumDefinition__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefinitionAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getEnumDefinitionAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDefinition__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefinitionAccess().getMembersAssignment_5_1()); }
	(rule__EnumDefinition__MembersAssignment_5_1)
	{ after(grammarAccess.getEnumDefinitionAccess().getMembersAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StandardVariableDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardVariableDeclaration__Group__0__Impl
	rule__StandardVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardVariableDeclarationAccess().getTypeAssignment_0()); }
	(rule__StandardVariableDeclaration__TypeAssignment_0)
	{ after(grammarAccess.getStandardVariableDeclarationAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardVariableDeclaration__Group__1__Impl
	rule__StandardVariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardVariableDeclarationAccess().getOptionalElementsAssignment_1()); }
	(rule__StandardVariableDeclaration__OptionalElementsAssignment_1)*
	{ after(grammarAccess.getStandardVariableDeclarationAccess().getOptionalElementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardVariableDeclaration__Group__2__Impl
	rule__StandardVariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardVariableDeclarationAccess().getVariableAssignment_2()); }
	(rule__StandardVariableDeclaration__VariableAssignment_2)
	{ after(grammarAccess.getStandardVariableDeclarationAccess().getVariableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardVariableDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardVariableDeclarationAccess().getGroup_3()); }
	(rule__StandardVariableDeclaration__Group_3__0)?
	{ after(grammarAccess.getStandardVariableDeclarationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StandardVariableDeclaration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardVariableDeclaration__Group_3__0__Impl
	rule__StandardVariableDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardVariableDeclarationAccess().getEqualsSignKeyword_3_0()); }
	'='
	{ after(grammarAccess.getStandardVariableDeclarationAccess().getEqualsSignKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardVariableDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardVariableDeclarationAccess().getExpressionAssignment_3_1()); }
	(rule__StandardVariableDeclaration__ExpressionAssignment_3_1)
	{ after(grammarAccess.getStandardVariableDeclarationAccess().getExpressionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarVariableDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarVariableDeclaration__Group__0__Impl
	rule__VarVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarVariableDeclarationAccess().getVarTypeAssignment_0()); }
	(rule__VarVariableDeclaration__VarTypeAssignment_0)
	{ after(grammarAccess.getVarVariableDeclarationAccess().getVarTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarVariableDeclaration__Group__1__Impl
	rule__VarVariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarVariableDeclarationAccess().getVariableAssignment_1()); }
	(rule__VarVariableDeclaration__VariableAssignment_1)
	{ after(grammarAccess.getVarVariableDeclarationAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarVariableDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarVariableDeclarationAccess().getGroup_2()); }
	(rule__VarVariableDeclaration__Group_2__0)?
	{ after(grammarAccess.getVarVariableDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarVariableDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarVariableDeclaration__Group_2__0__Impl
	rule__VarVariableDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarVariableDeclarationAccess().getEqualsSignKeyword_2_0()); }
	'='
	{ after(grammarAccess.getVarVariableDeclarationAccess().getEqualsSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarVariableDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarVariableDeclarationAccess().getExpressionAssignment_2_1()); }
	(rule__VarVariableDeclaration__ExpressionAssignment_2_1)
	{ after(grammarAccess.getVarVariableDeclarationAccess().getExpressionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarVariableTupleVariableDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarVariableTupleVariableDeclaration__Group__0__Impl
	rule__VarVariableTupleVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableTupleVariableDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getVarTypeAssignment_0()); }
	(rule__VarVariableTupleVariableDeclaration__VarTypeAssignment_0)
	{ after(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getVarTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableTupleVariableDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarVariableTupleVariableDeclaration__Group__1__Impl
	rule__VarVariableTupleVariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableTupleVariableDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getTupleAssignment_1()); }
	(rule__VarVariableTupleVariableDeclaration__TupleAssignment_1)
	{ after(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getTupleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableTupleVariableDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarVariableTupleVariableDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableTupleVariableDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getGroup_2()); }
	(rule__VarVariableTupleVariableDeclaration__Group_2__0)?
	{ after(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarVariableTupleVariableDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarVariableTupleVariableDeclaration__Group_2__0__Impl
	rule__VarVariableTupleVariableDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableTupleVariableDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getEqualsSignKeyword_2_0()); }
	'='
	{ after(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getEqualsSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableTupleVariableDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarVariableTupleVariableDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableTupleVariableDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getExpressionAssignment_2_1()); }
	(rule__VarVariableTupleVariableDeclaration__ExpressionAssignment_2_1)
	{ after(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getExpressionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexedSpecifer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexedSpecifer__Group__0__Impl
	rule__IndexedSpecifer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedSpecifer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexedSpeciferAccess().getIndexedKeyword_0()); }
	'indexed'
	{ after(grammarAccess.getIndexedSpeciferAccess().getIndexedKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedSpecifer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexedSpecifer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedSpecifer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexedSpeciferAccess().getIndexedSpeciferAction_1()); }
	()
	{ after(grammarAccess.getIndexedSpeciferAccess().getIndexedSpeciferAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantSpecifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantSpecifier__Group__0__Impl
	rule__ConstantSpecifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantSpecifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantSpecifierAccess().getConstantKeyword_0()); }
	'constant'
	{ after(grammarAccess.getConstantSpecifierAccess().getConstantKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantSpecifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantSpecifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantSpecifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantSpecifierAccess().getConstantSpecifierAction_1()); }
	()
	{ after(grammarAccess.getConstantSpecifierAccess().getConstantSpecifierAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StandardType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardType__Group_0__0__Impl
	rule__StandardType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardTypeAccess().getElementaryTypeParserRuleCall_0_0()); }
	ruleElementaryType
	{ after(grammarAccess.getStandardTypeAccess().getElementaryTypeParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardTypeAccess().getDimensionAssignment_0_1()); }
	(rule__StandardType__DimensionAssignment_0_1)?
	{ after(grammarAccess.getStandardTypeAccess().getDimensionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StandardTypeWithoutQualifiedIdentifier__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardTypeWithoutQualifiedIdentifier__Group_0__0__Impl
	rule__StandardTypeWithoutQualifiedIdentifier__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardTypeWithoutQualifiedIdentifier__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getElementaryTypeParserRuleCall_0_0()); }
	ruleElementaryType
	{ after(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getElementaryTypeParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardTypeWithoutQualifiedIdentifier__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardTypeWithoutQualifiedIdentifier__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardTypeWithoutQualifiedIdentifier__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getDimensionAssignment_0_1()); }
	(rule__StandardTypeWithoutQualifiedIdentifier__DimensionAssignment_0_1)?
	{ after(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getDimensionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__0__Impl
	rule__Mapping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getMappingKeyword_0()); }
	'mapping'
	{ after(grammarAccess.getMappingAccess().getMappingKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__1__Impl
	rule__Mapping__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMappingAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__2__Impl
	rule__Mapping__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getKeyTypeAssignment_2()); }
	(rule__Mapping__KeyTypeAssignment_2)
	{ after(grammarAccess.getMappingAccess().getKeyTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__3__Impl
	rule__Mapping__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getEqualsSignGreaterThanSignKeyword_3()); }
	'=>'
	{ after(grammarAccess.getMappingAccess().getEqualsSignGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__4__Impl
	rule__Mapping__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getValueTypeAssignment_4()); }
	(rule__Mapping__ValueTypeAssignment_4)
	{ after(grammarAccess.getMappingAccess().getValueTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getMappingAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayDimensions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDimensions__Group__0__Impl
	rule__ArrayDimensions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDimensionsAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getArrayDimensionsAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDimensions__Group__1__Impl
	rule__ArrayDimensions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDimensionsAccess().getArrayDimensionsAction_1()); }
	()
	{ after(grammarAccess.getArrayDimensionsAccess().getArrayDimensionsAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDimensions__Group__2__Impl
	rule__ArrayDimensions__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDimensionsAccess().getValueAssignment_2()); }
	(rule__ArrayDimensions__ValueAssignment_2)?
	{ after(grammarAccess.getArrayDimensionsAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDimensions__Group__3__Impl
	rule__ArrayDimensions__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDimensionsAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getArrayDimensionsAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDimensions__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDimensionsAccess().getGroup_4()); }
	(rule__ArrayDimensions__Group_4__0)*
	{ after(grammarAccess.getArrayDimensionsAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayDimensions__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDimensions__Group_4__0__Impl
	rule__ArrayDimensions__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDimensionsAccess().getLeftSquareBracketKeyword_4_0()); }
	'['
	{ after(grammarAccess.getArrayDimensionsAccess().getLeftSquareBracketKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDimensions__Group_4__1__Impl
	rule__ArrayDimensions__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDimensionsAccess().getValueAssignment_4_1()); }
	(rule__ArrayDimensions__ValueAssignment_4_1)?
	{ after(grammarAccess.getArrayDimensionsAccess().getValueAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDimensions__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDimensionsAccess().getRightSquareBracketKeyword_4_2()); }
	']'
	{ after(grammarAccess.getArrayDimensionsAccess().getRightSquareBracketKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Tuple__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tuple__Group__0__Impl
	rule__Tuple__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getTupleAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tuple__Group__1__Impl
	rule__Tuple__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleAccess().getTupleAction_1()); }
	()
	{ after(grammarAccess.getTupleAccess().getTupleAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tuple__Group__2__Impl
	rule__Tuple__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleAccess().getGroup_2()); }
	(rule__Tuple__Group_2__0)?
	{ after(grammarAccess.getTupleAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tuple__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getTupleAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Tuple__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tuple__Group_2__0__Impl
	rule__Tuple__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleAccess().getMembersAssignment_2_0()); }
	(rule__Tuple__MembersAssignment_2_0)?
	{ after(grammarAccess.getTupleAccess().getMembersAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tuple__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTupleAccess().getGroup_2_1()); }
		(rule__Tuple__Group_2_1__0)
		{ after(grammarAccess.getTupleAccess().getGroup_2_1()); }
	)
	(
		{ before(grammarAccess.getTupleAccess().getGroup_2_1()); }
		(rule__Tuple__Group_2_1__0)*
		{ after(grammarAccess.getTupleAccess().getGroup_2_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Tuple__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tuple__Group_2_1__0__Impl
	rule__Tuple__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleAccess().getMembersAssignment_2_1_0()); }
	(rule__Tuple__MembersAssignment_2_1_0)
	{ after(grammarAccess.getTupleAccess().getMembersAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tuple__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleAccess().getMembersAssignment_2_1_1()); }
	(rule__Tuple__MembersAssignment_2_1_1)?
	{ after(grammarAccess.getTupleAccess().getMembersAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleSeparator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleSeparator__Group__0__Impl
	rule__TupleSeparator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleSeparator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleSeparatorAccess().getCommaKeyword_0()); }
	','
	{ after(grammarAccess.getTupleSeparatorAccess().getCommaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleSeparator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleSeparator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleSeparator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleSeparatorAccess().getTupleSeparatorAction_1()); }
	()
	{ after(grammarAccess.getTupleSeparatorAccess().getTupleSeparatorAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group__0__Impl
	rule__SimpleStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getAlternatives_0()); }
	(rule__SimpleStatement__Alternatives_0)
	{ after(grammarAccess.getSimpleStatementAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getSemicolonAssignment_1()); }
	(rule__SimpleStatement__SemicolonAssignment_1)
	{ after(grammarAccess.getSimpleStatementAccess().getSemicolonAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_0__0__Impl
	rule__SimpleStatement__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getStandardTypeWithoutQualifiedIdentifierParserRuleCall_0_0_0()); }
	ruleStandardTypeWithoutQualifiedIdentifier
	{ after(grammarAccess.getSimpleStatementAccess().getStandardTypeWithoutQualifiedIdentifierParserRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getGroup_0_0_1()); }
	(rule__SimpleStatement__Group_0_0_1__0)
	{ after(grammarAccess.getSimpleStatementAccess().getGroup_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement__Group_0_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_0_1__0__Impl
	rule__SimpleStatement__Group_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getStandardVariableDeclarationTypeAction_0_0_1_0()); }
	()
	{ after(grammarAccess.getSimpleStatementAccess().getStandardVariableDeclarationTypeAction_0_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_0_1__1__Impl
	rule__SimpleStatement__Group_0_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getPtionalElementsAssignment_0_0_1_1()); }
	(rule__SimpleStatement__PtionalElementsAssignment_0_0_1_1)*
	{ after(grammarAccess.getSimpleStatementAccess().getPtionalElementsAssignment_0_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_0_1__2__Impl
	rule__SimpleStatement__Group_0_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getVariableAssignment_0_0_1_2()); }
	(rule__SimpleStatement__VariableAssignment_0_0_1_2)
	{ after(grammarAccess.getSimpleStatementAccess().getVariableAssignment_0_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_0_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getGroup_0_0_1_3()); }
	(rule__SimpleStatement__Group_0_0_1_3__0)?
	{ after(grammarAccess.getSimpleStatementAccess().getGroup_0_0_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement__Group_0_0_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_0_1_3__0__Impl
	rule__SimpleStatement__Group_0_0_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getEqualsSignKeyword_0_0_1_3_0()); }
	'='
	{ after(grammarAccess.getSimpleStatementAccess().getEqualsSignKeyword_0_0_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_0_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getExpressionAssignment_0_0_1_3_1()); }
	(rule__SimpleStatement__ExpressionAssignment_0_0_1_3_1)
	{ after(grammarAccess.getSimpleStatementAccess().getExpressionAssignment_0_0_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_1__0__Impl
	rule__SimpleStatement__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getVarTypeParserRuleCall_0_1_0()); }
	ruleVarType
	{ after(grammarAccess.getSimpleStatementAccess().getVarTypeParserRuleCall_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getAlternatives_0_1_1()); }
	(rule__SimpleStatement__Alternatives_0_1_1)
	{ after(grammarAccess.getSimpleStatementAccess().getAlternatives_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement__Group_0_1_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_1_1_0__0__Impl
	rule__SimpleStatement__Group_0_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getVarVariableTypeDeclarationAction_0_1_1_0_0()); }
	()
	{ after(grammarAccess.getSimpleStatementAccess().getVarVariableTypeDeclarationAction_0_1_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_1_1_0__1__Impl
	rule__SimpleStatement__Group_0_1_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getVariableAssignment_0_1_1_0_1()); }
	(rule__SimpleStatement__VariableAssignment_0_1_1_0_1)
	{ after(grammarAccess.getSimpleStatementAccess().getVariableAssignment_0_1_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_1_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getGroup_0_1_1_0_2()); }
	(rule__SimpleStatement__Group_0_1_1_0_2__0)
	{ after(grammarAccess.getSimpleStatementAccess().getGroup_0_1_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement__Group_0_1_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_1_1_0_2__0__Impl
	rule__SimpleStatement__Group_0_1_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getEqualsSignKeyword_0_1_1_0_2_0()); }
	'='
	{ after(grammarAccess.getSimpleStatementAccess().getEqualsSignKeyword_0_1_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_1_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getExpressionAssignment_0_1_1_0_2_1()); }
	(rule__SimpleStatement__ExpressionAssignment_0_1_1_0_2_1)
	{ after(grammarAccess.getSimpleStatementAccess().getExpressionAssignment_0_1_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement__Group_0_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_1_1_1__0__Impl
	rule__SimpleStatement__Group_0_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getVarVariableTupleVariableDeclarationAction_0_1_1_1_0()); }
	()
	{ after(grammarAccess.getSimpleStatementAccess().getVarVariableTupleVariableDeclarationAction_0_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_1_1_1__1__Impl
	rule__SimpleStatement__Group_0_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getTupleAssignment_0_1_1_1_1()); }
	(rule__SimpleStatement__TupleAssignment_0_1_1_1_1)
	{ after(grammarAccess.getSimpleStatementAccess().getTupleAssignment_0_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_1_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getGroup_0_1_1_1_2()); }
	(rule__SimpleStatement__Group_0_1_1_1_2__0)
	{ after(grammarAccess.getSimpleStatementAccess().getGroup_0_1_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement__Group_0_1_1_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_1_1_1_2__0__Impl
	rule__SimpleStatement__Group_0_1_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getEqualsSignKeyword_0_1_1_1_2_0()); }
	'='
	{ after(grammarAccess.getSimpleStatementAccess().getEqualsSignKeyword_0_1_1_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_1_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getExpressionAssignment_0_1_1_1_2_1()); }
	(rule__SimpleStatement__ExpressionAssignment_0_1_1_1_2_1)
	{ after(grammarAccess.getSimpleStatementAccess().getExpressionAssignment_0_1_1_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement2__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_0__0__Impl
	rule__SimpleStatement2__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getStandardTypeWithoutQualifiedIdentifierParserRuleCall_0_0()); }
	ruleStandardTypeWithoutQualifiedIdentifier
	{ after(grammarAccess.getSimpleStatement2Access().getStandardTypeWithoutQualifiedIdentifierParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getGroup_0_1()); }
	(rule__SimpleStatement2__Group_0_1__0)
	{ after(grammarAccess.getSimpleStatement2Access().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement2__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_0_1__0__Impl
	rule__SimpleStatement2__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getStandardVariableDeclarationTypeAction_0_1_0()); }
	()
	{ after(grammarAccess.getSimpleStatement2Access().getStandardVariableDeclarationTypeAction_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_0_1__1__Impl
	rule__SimpleStatement2__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getOptionalElementsAssignment_0_1_1()); }
	(rule__SimpleStatement2__OptionalElementsAssignment_0_1_1)*
	{ after(grammarAccess.getSimpleStatement2Access().getOptionalElementsAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_0_1__2__Impl
	rule__SimpleStatement2__Group_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getVariableAssignment_0_1_2()); }
	(rule__SimpleStatement2__VariableAssignment_0_1_2)
	{ after(grammarAccess.getSimpleStatement2Access().getVariableAssignment_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_0_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getGroup_0_1_3()); }
	(rule__SimpleStatement2__Group_0_1_3__0)?
	{ after(grammarAccess.getSimpleStatement2Access().getGroup_0_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement2__Group_0_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_0_1_3__0__Impl
	rule__SimpleStatement2__Group_0_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getEqualsSignKeyword_0_1_3_0()); }
	'='
	{ after(grammarAccess.getSimpleStatement2Access().getEqualsSignKeyword_0_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_0_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getExpressionAssignment_0_1_3_1()); }
	(rule__SimpleStatement2__ExpressionAssignment_0_1_3_1)
	{ after(grammarAccess.getSimpleStatement2Access().getExpressionAssignment_0_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement2__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_1__0__Impl
	rule__SimpleStatement2__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getVarTypeParserRuleCall_1_0()); }
	ruleVarType
	{ after(grammarAccess.getSimpleStatement2Access().getVarTypeParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getAlternatives_1_1()); }
	(rule__SimpleStatement2__Alternatives_1_1)
	{ after(grammarAccess.getSimpleStatement2Access().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement2__Group_1_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_1_1_0__0__Impl
	rule__SimpleStatement2__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getVarVariableTypeDeclarationAction_1_1_0_0()); }
	()
	{ after(grammarAccess.getSimpleStatement2Access().getVarVariableTypeDeclarationAction_1_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_1_1_0__1__Impl
	rule__SimpleStatement2__Group_1_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getVariableAssignment_1_1_0_1()); }
	(rule__SimpleStatement2__VariableAssignment_1_1_0_1)
	{ after(grammarAccess.getSimpleStatement2Access().getVariableAssignment_1_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_1_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getGroup_1_1_0_2()); }
	(rule__SimpleStatement2__Group_1_1_0_2__0)
	{ after(grammarAccess.getSimpleStatement2Access().getGroup_1_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement2__Group_1_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_1_1_0_2__0__Impl
	rule__SimpleStatement2__Group_1_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getEqualsSignKeyword_1_1_0_2_0()); }
	'='
	{ after(grammarAccess.getSimpleStatement2Access().getEqualsSignKeyword_1_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_1_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getExpressionAssignment_1_1_0_2_1()); }
	(rule__SimpleStatement2__ExpressionAssignment_1_1_0_2_1)
	{ after(grammarAccess.getSimpleStatement2Access().getExpressionAssignment_1_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement2__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_1_1_1__0__Impl
	rule__SimpleStatement2__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getVarVariableTupleVariableDeclarationAction_1_1_1_0()); }
	()
	{ after(grammarAccess.getSimpleStatement2Access().getVarVariableTupleVariableDeclarationAction_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_1_1_1__1__Impl
	rule__SimpleStatement2__Group_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getTupleAssignment_1_1_1_1()); }
	(rule__SimpleStatement2__TupleAssignment_1_1_1_1)
	{ after(grammarAccess.getSimpleStatement2Access().getTupleAssignment_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_1_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getGroup_1_1_1_2()); }
	(rule__SimpleStatement2__Group_1_1_1_2__0)
	{ after(grammarAccess.getSimpleStatement2Access().getGroup_1_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement2__Group_1_1_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_1_1_1_2__0__Impl
	rule__SimpleStatement2__Group_1_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getEqualsSignKeyword_1_1_1_2_0()); }
	'='
	{ after(grammarAccess.getSimpleStatement2Access().getEqualsSignKeyword_1_1_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_1_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getExpressionAssignment_1_1_1_2_1()); }
	(rule__SimpleStatement2__ExpressionAssignment_1_1_1_2_1)
	{ after(grammarAccess.getSimpleStatement2Access().getExpressionAssignment_1_1_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedIdentifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedIdentifier__Group__0__Impl
	rule__QualifiedIdentifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedIdentifierAccess().getIdentifierAssignment_0()); }
	(rule__QualifiedIdentifier__IdentifierAssignment_0)
	{ after(grammarAccess.getQualifiedIdentifierAccess().getIdentifierAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedIdentifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedIdentifierAccess().getQualifiersAssignment_1()); }
	(rule__QualifiedIdentifier__QualifiersAssignment_1)*
	{ after(grammarAccess.getQualifiedIdentifierAccess().getQualifiersAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getFieldAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getFieldAssignment_1()); }
	(rule__Field__FieldAssignment_1)
	{ after(grammarAccess.getFieldAccess().getFieldAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Index__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group__0__Impl
	rule__Index__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group__1__Impl
	rule__Index__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getIndexAction_1()); }
	()
	{ after(grammarAccess.getIndexAccess().getIndexAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group__2__Impl
	rule__Index__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getValueAssignment_2()); }
	(rule__Index__ValueAssignment_2)?
	{ after(grammarAccess.getIndexAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getIndexAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModifierInvocation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModifierInvocation__Group__0__Impl
	rule__ModifierInvocation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierInvocation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifierInvocationAccess().getNameAssignment_0()); }
	(rule__ModifierInvocation__NameAssignment_0)
	{ after(grammarAccess.getModifierInvocationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierInvocation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModifierInvocation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierInvocation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifierInvocationAccess().getArgsAssignment_1()); }
	(rule__ModifierInvocation__ArgsAssignment_1)?
	{ after(grammarAccess.getModifierInvocationAccess().getArgsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__0__Impl
	rule__ParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getParameterListAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__1__Impl
	rule__ParameterList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParameterListAction_1()); }
	()
	{ after(grammarAccess.getParameterListAccess().getParameterListAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__2__Impl
	rule__ParameterList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getGroup_2()); }
	(rule__ParameterList__Group_2__0)?
	{ after(grammarAccess.getParameterListAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getParameterListAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_2__0__Impl
	rule__ParameterList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParametersAssignment_2_0()); }
	(rule__ParameterList__ParametersAssignment_2_0)
	{ after(grammarAccess.getParameterListAccess().getParametersAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getGroup_2_1()); }
	(rule__ParameterList__Group_2_1__0)*
	{ after(grammarAccess.getParameterListAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_2_1__0__Impl
	rule__ParameterList__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getParameterListAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParametersAssignment_2_1_1()); }
	(rule__ParameterList__ParametersAssignment_2_1_1)
	{ after(grammarAccess.getParameterListAccess().getParametersAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnsParameterList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnsParameterList__Group__0__Impl
	rule__ReturnsParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnsParameterListAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getReturnsParameterListAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnsParameterList__Group__1__Impl
	rule__ReturnsParameterList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnsParameterListAccess().getReturnsParameterListAction_1()); }
	()
	{ after(grammarAccess.getReturnsParameterListAccess().getReturnsParameterListAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnsParameterList__Group__2__Impl
	rule__ReturnsParameterList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnsParameterListAccess().getGroup_2()); }
	(rule__ReturnsParameterList__Group_2__0)?
	{ after(grammarAccess.getReturnsParameterListAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnsParameterList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnsParameterListAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getReturnsParameterListAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnsParameterList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnsParameterList__Group_2__0__Impl
	rule__ReturnsParameterList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnsParameterListAccess().getParametersAssignment_2_0()); }
	(rule__ReturnsParameterList__ParametersAssignment_2_0)
	{ after(grammarAccess.getReturnsParameterListAccess().getParametersAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnsParameterList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnsParameterListAccess().getGroup_2_1()); }
	(rule__ReturnsParameterList__Group_2_1__0)*
	{ after(grammarAccess.getReturnsParameterListAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnsParameterList__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnsParameterList__Group_2_1__0__Impl
	rule__ReturnsParameterList__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnsParameterListAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getReturnsParameterListAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnsParameterList__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnsParameterListAccess().getParametersAssignment_2_1_1()); }
	(rule__ReturnsParameterList__ParametersAssignment_2_1_1)
	{ after(grammarAccess.getReturnsParameterListAccess().getParametersAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnParameterDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnParameterDeclaration__Group__0__Impl
	rule__ReturnParameterDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameterDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnParameterDeclarationAccess().getTypeRefAssignment_0()); }
	(rule__ReturnParameterDeclaration__TypeRefAssignment_0)
	{ after(grammarAccess.getReturnParameterDeclarationAccess().getTypeRefAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameterDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnParameterDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameterDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnParameterDeclarationAccess().getVariableAssignment_1()); }
	(rule__ReturnParameterDeclaration__VariableAssignment_1)?
	{ after(grammarAccess.getReturnParameterDeclarationAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStatement__Group__0__Impl
	rule__DeleteStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStatementAccess().getDeleteKeyword_0()); }
	'delete'
	{ after(grammarAccess.getDeleteStatementAccess().getDeleteKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStatement__Group__1__Impl
	rule__DeleteStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStatementAccess().getVariableAssignment_1()); }
	(rule__DeleteStatement__VariableAssignment_1)
	{ after(grammarAccess.getDeleteStatementAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStatementAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getDeleteStatementAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getConditionAssignment_2()); }
	(rule__IfStatement__ConditionAssignment_2)
	{ after(grammarAccess.getIfStatementAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__4__Impl
	rule__IfStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getTrueBodyAssignment_4()); }
	(rule__IfStatement__TrueBodyAssignment_4)
	{ after(grammarAccess.getIfStatementAccess().getTrueBodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getGroup_5()); }
	(rule__IfStatement__Group_5__0)?
	{ after(grammarAccess.getIfStatementAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_5__0__Impl
	rule__IfStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseKeyword_5_0()); }
	('else')
	{ after(grammarAccess.getIfStatementAccess().getElseKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getFalseBodyAssignment_5_1()); }
	(rule__IfStatement__FalseBodyAssignment_5_1)
	{ after(grammarAccess.getIfStatementAccess().getFalseBodyAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__0__Impl
	rule__WhileStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__1__Impl
	rule__WhileStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__2__Impl
	rule__WhileStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getConditionAssignment_2()); }
	(rule__WhileStatement__ConditionAssignment_2)
	{ after(grammarAccess.getWhileStatementAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__3__Impl
	rule__WhileStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getBodyAssignment_4()); }
	(rule__WhileStatement__BodyAssignment_4)
	{ after(grammarAccess.getWhileStatementAccess().getBodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__0__Impl
	rule__ForStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getForStatementAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__1__Impl
	rule__ForStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__2__Impl
	rule__ForStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getInitExpressionAssignment_2()); }
	(rule__ForStatement__InitExpressionAssignment_2)?
	{ after(grammarAccess.getForStatementAccess().getInitExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__3__Impl
	rule__ForStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getSemicolonKeyword_3()); }
	(';')
	{ after(grammarAccess.getForStatementAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__4__Impl
	rule__ForStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getConditionExpressionAssignment_4()); }
	(rule__ForStatement__ConditionExpressionAssignment_4)?
	{ after(grammarAccess.getForStatementAccess().getConditionExpressionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__5__Impl
	rule__ForStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getForStatementAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__6__Impl
	rule__ForStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getLoopExpressionAssignment_6()); }
	(rule__ForStatement__LoopExpressionAssignment_6)?
	{ after(grammarAccess.getForStatementAccess().getLoopExpressionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__7__Impl
	rule__ForStatement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getBodyAssignment_8()); }
	(rule__ForStatement__BodyAssignment_8)
	{ after(grammarAccess.getForStatementAccess().getBodyAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__0__Impl
	rule__Body__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__1__Impl
	rule__Body__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getBodyAction_1()); }
	()
	{ after(grammarAccess.getBodyAccess().getBodyAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__2__Impl
	rule__Body__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getGroup_2()); }
	(rule__Body__Group_2__0)?
	{ after(grammarAccess.getBodyAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group_2__0__Impl
	rule__Body__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getStatementsAssignment_2_0()); }
	(rule__Body__StatementsAssignment_2_0)
	{ after(grammarAccess.getBodyAccess().getStatementsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getStatementsAssignment_2_1()); }
	(rule__Body__StatementsAssignment_2_1)*
	{ after(grammarAccess.getBodyAccess().getStatementsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContinueStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContinueStatement__Group__0__Impl
	rule__ContinueStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinueStatementAccess().getContinueKeyword_0()); }
	'continue'
	{ after(grammarAccess.getContinueStatementAccess().getContinueKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContinueStatement__Group__1__Impl
	rule__ContinueStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinueStatementAccess().getContinueAction_1()); }
	()
	{ after(grammarAccess.getContinueStatementAccess().getContinueAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContinueStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinueStatementAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getContinueStatementAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BreakStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BreakStatement__Group__0__Impl
	rule__BreakStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakStatementAccess().getBreakKeyword_0()); }
	'break'
	{ after(grammarAccess.getBreakStatementAccess().getBreakKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BreakStatement__Group__1__Impl
	rule__BreakStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakStatementAccess().getBreakStatementAction_1()); }
	()
	{ after(grammarAccess.getBreakStatementAccess().getBreakStatementAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BreakStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakStatementAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getBreakStatementAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__0__Impl
	rule__ReturnStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getReturnKeyword_0()); }
	'return'
	{ after(grammarAccess.getReturnStatementAccess().getReturnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__1__Impl
	rule__ReturnStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getReturnStatementAction_1()); }
	()
	{ after(grammarAccess.getReturnStatementAccess().getReturnStatementAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__2__Impl
	rule__ReturnStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getExpressionAssignment_2()); }
	(rule__ReturnStatement__ExpressionAssignment_2)?
	{ after(grammarAccess.getReturnStatementAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ThrowStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThrowStatement__Group__0__Impl
	rule__ThrowStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThrowStatementAccess().getThrowKeyword_0()); }
	'throw'
	{ after(grammarAccess.getThrowStatementAccess().getThrowKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThrowStatement__Group__1__Impl
	rule__ThrowStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThrowStatementAccess().getThrowStatementAction_1()); }
	()
	{ after(grammarAccess.getThrowStatementAccess().getThrowStatementAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThrowStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThrowStatementAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getThrowStatementAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlaceHolderStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlaceHolderStatement__Group__0__Impl
	rule__PlaceHolderStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlaceHolderStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlaceHolderStatementAccess().get_Keyword_0()); }
	'_'
	{ after(grammarAccess.getPlaceHolderStatementAccess().get_Keyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlaceHolderStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlaceHolderStatement__Group__1__Impl
	rule__PlaceHolderStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PlaceHolderStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlaceHolderStatementAccess().getPlaceHolderStatementAction_1()); }
	()
	{ after(grammarAccess.getPlaceHolderStatementAccess().getPlaceHolderStatementAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlaceHolderStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlaceHolderStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlaceHolderStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlaceHolderStatementAccess().getSemicolonKeyword_2()); }
	(';')?
	{ after(grammarAccess.getPlaceHolderStatementAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__0__Impl
	rule__Expression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getFirstAssignment_0_0()); }
	(rule__Expression__FirstAssignment_0_0)
	{ after(grammarAccess.getExpressionAccess().getFirstAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getOperationsAssignment_0_1()); }
	(rule__Expression__OperationsAssignment_0_1)*
	{ after(grammarAccess.getExpressionAccess().getOperationsAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getNegateAssignment_1_0()); }
	(rule__Expression__NegateAssignment_1_0)
	{ after(grammarAccess.getExpressionAccess().getNegateAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__1__Impl
	rule__Expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getFirstAssignment_1_1()); }
	(rule__Expression__FirstAssignment_1_1)
	{ after(grammarAccess.getExpressionAccess().getFirstAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getOperationsAssignment_1_2()); }
	(rule__Expression__OperationsAssignment_1_2)*
	{ after(grammarAccess.getExpressionAccess().getOperationsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_2__0__Impl
	rule__Expression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getTernaryAssignment_2_0()); }
	(rule__Expression__TernaryAssignment_2_0)
	{ after(grammarAccess.getExpressionAccess().getTernaryAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_2__1__Impl
	rule__Expression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getFirstAssignment_2_1()); }
	(rule__Expression__FirstAssignment_2_1)
	{ after(grammarAccess.getExpressionAccess().getFirstAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_2__2__Impl
	rule__Expression__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getQuestionMarkKeyword_2_2()); }
	'?'
	{ after(grammarAccess.getExpressionAccess().getQuestionMarkKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_2__3__Impl
	rule__Expression__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getTrueAssignment_2_3()); }
	(rule__Expression__TrueAssignment_2_3)
	{ after(grammarAccess.getExpressionAccess().getTrueAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_2__4__Impl
	rule__Expression__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getColonKeyword_2_4()); }
	':'
	{ after(grammarAccess.getExpressionAccess().getColonKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getFalseAssignment_2_5()); }
	(rule__Expression__FalseAssignment_2_5)
	{ after(grammarAccess.getExpressionAccess().getFalseAssignment_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionOperation__Group__0__Impl
	rule__ConditionOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionOperationAccess().getOperationAssignment_0()); }
	(rule__ConditionOperation__OperationAssignment_0)
	{ after(grammarAccess.getConditionOperationAccess().getOperationAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionOperation__Group__1__Impl
	rule__ConditionOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionOperationAccess().getNegateSecondAssignment_1()); }
	(rule__ConditionOperation__NegateSecondAssignment_1)?
	{ after(grammarAccess.getConditionOperationAccess().getNegateSecondAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionOperation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionOperationAccess().getSecondsAssignment_2()); }
	(rule__ConditionOperation__SecondsAssignment_2)
	{ after(grammarAccess.getConditionOperationAccess().getSecondsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GasleftFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GasleftFunction__Group__0__Impl
	rule__GasleftFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GasleftFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGasleftFunctionAccess().getNameAssignment_0()); }
	(rule__GasleftFunction__NameAssignment_0)
	{ after(grammarAccess.getGasleftFunctionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GasleftFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GasleftFunction__Group__1__Impl
	rule__GasleftFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GasleftFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGasleftFunctionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getGasleftFunctionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GasleftFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GasleftFunction__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GasleftFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGasleftFunctionAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getGasleftFunctionAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlockhashFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockhashFunction__Group__0__Impl
	rule__BlockhashFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockhashFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockhashFunctionAccess().getBlockhashKeyword_0()); }
	'blockhash'
	{ after(grammarAccess.getBlockhashFunctionAccess().getBlockhashKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockhashFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockhashFunction__Group__1__Impl
	rule__BlockhashFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockhashFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockhashFunctionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getBlockhashFunctionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockhashFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockhashFunction__Group__2__Impl
	rule__BlockhashFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockhashFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockhashFunctionAccess().getParameterAssignment_2()); }
	(rule__BlockhashFunction__ParameterAssignment_2)
	{ after(grammarAccess.getBlockhashFunctionAccess().getParameterAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockhashFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockhashFunction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockhashFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockhashFunctionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getBlockhashFunctionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathematicalFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathematicalFunction__Group__0__Impl
	rule__MathematicalFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathematicalFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathematicalFunctionAccess().getFunctionAssignment_0()); }
	(rule__MathematicalFunction__FunctionAssignment_0)
	{ after(grammarAccess.getMathematicalFunctionAccess().getFunctionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathematicalFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathematicalFunction__Group__1__Impl
	rule__MathematicalFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MathematicalFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathematicalFunctionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMathematicalFunctionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathematicalFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathematicalFunction__Group__2__Impl
	rule__MathematicalFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MathematicalFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathematicalFunctionAccess().getParametersAssignment_2()); }
	(rule__MathematicalFunction__ParametersAssignment_2)
	{ after(grammarAccess.getMathematicalFunctionAccess().getParametersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathematicalFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathematicalFunction__Group__3__Impl
	rule__MathematicalFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MathematicalFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathematicalFunctionAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getMathematicalFunctionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathematicalFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathematicalFunction__Group__4__Impl
	rule__MathematicalFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MathematicalFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathematicalFunctionAccess().getParametersAssignment_4()); }
	(rule__MathematicalFunction__ParametersAssignment_4)
	{ after(grammarAccess.getMathematicalFunctionAccess().getParametersAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathematicalFunction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathematicalFunction__Group__5__Impl
	rule__MathematicalFunction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MathematicalFunction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathematicalFunctionAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getMathematicalFunctionAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathematicalFunction__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathematicalFunction__Group__6__Impl
	rule__MathematicalFunction__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MathematicalFunction__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathematicalFunctionAccess().getParametersAssignment_6()); }
	(rule__MathematicalFunction__ParametersAssignment_6)
	{ after(grammarAccess.getMathematicalFunctionAccess().getParametersAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathematicalFunction__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathematicalFunction__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathematicalFunction__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathematicalFunctionAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getMathematicalFunctionAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EcrecoverFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcrecoverFunction__Group__0__Impl
	rule__EcrecoverFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EcrecoverFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcrecoverFunctionAccess().getFunctionAssignment_0()); }
	(rule__EcrecoverFunction__FunctionAssignment_0)
	{ after(grammarAccess.getEcrecoverFunctionAccess().getFunctionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcrecoverFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcrecoverFunction__Group__1__Impl
	rule__EcrecoverFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EcrecoverFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcrecoverFunctionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getEcrecoverFunctionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcrecoverFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcrecoverFunction__Group__2__Impl
	rule__EcrecoverFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EcrecoverFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcrecoverFunctionAccess().getParametersAssignment_2()); }
	(rule__EcrecoverFunction__ParametersAssignment_2)
	{ after(grammarAccess.getEcrecoverFunctionAccess().getParametersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcrecoverFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcrecoverFunction__Group__3__Impl
	rule__EcrecoverFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EcrecoverFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcrecoverFunctionAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getEcrecoverFunctionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcrecoverFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcrecoverFunction__Group__4__Impl
	rule__EcrecoverFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EcrecoverFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcrecoverFunctionAccess().getParametersAssignment_4()); }
	(rule__EcrecoverFunction__ParametersAssignment_4)
	{ after(grammarAccess.getEcrecoverFunctionAccess().getParametersAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcrecoverFunction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcrecoverFunction__Group__5__Impl
	rule__EcrecoverFunction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EcrecoverFunction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcrecoverFunctionAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getEcrecoverFunctionAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcrecoverFunction__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcrecoverFunction__Group__6__Impl
	rule__EcrecoverFunction__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__EcrecoverFunction__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcrecoverFunctionAccess().getParametersAssignment_6()); }
	(rule__EcrecoverFunction__ParametersAssignment_6)
	{ after(grammarAccess.getEcrecoverFunctionAccess().getParametersAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcrecoverFunction__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcrecoverFunction__Group__7__Impl
	rule__EcrecoverFunction__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__EcrecoverFunction__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcrecoverFunctionAccess().getCommaKeyword_7()); }
	','
	{ after(grammarAccess.getEcrecoverFunctionAccess().getCommaKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcrecoverFunction__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcrecoverFunction__Group__8__Impl
	rule__EcrecoverFunction__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__EcrecoverFunction__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcrecoverFunctionAccess().getParametersAssignment_8()); }
	(rule__EcrecoverFunction__ParametersAssignment_8)
	{ after(grammarAccess.getEcrecoverFunctionAccess().getParametersAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcrecoverFunction__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcrecoverFunction__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EcrecoverFunction__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcrecoverFunctionAccess().getRightParenthesisKeyword_9()); }
	')'
	{ after(grammarAccess.getEcrecoverFunctionAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HashFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HashFunction__Group__0__Impl
	rule__HashFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHashFunctionAccess().getNameAssignment_0()); }
	(rule__HashFunction__NameAssignment_0)
	{ after(grammarAccess.getHashFunctionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HashFunction__Group__1__Impl
	rule__HashFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHashFunctionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getHashFunctionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HashFunction__Group__2__Impl
	rule__HashFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHashFunctionAccess().getParametersAssignment_2()); }
	(rule__HashFunction__ParametersAssignment_2)
	{ after(grammarAccess.getHashFunctionAccess().getParametersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HashFunction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHashFunctionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getHashFunctionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__0__Impl
	rule__FunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getNameAssignment_0()); }
	(rule__FunctionCall__NameAssignment_0)
	{ after(grammarAccess.getFunctionCallAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__1__Impl
	rule__FunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__2__Impl
	rule__FunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getGroup_2()); }
	(rule__FunctionCall__Group_2__0)?
	{ after(grammarAccess.getFunctionCallAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_2__0__Impl
	rule__FunctionCall__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getParametersAssignment_2_0()); }
	(rule__FunctionCall__ParametersAssignment_2_0)
	{ after(grammarAccess.getFunctionCallAccess().getParametersAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getGroup_2_1()); }
	(rule__FunctionCall__Group_2_1__0)*
	{ after(grammarAccess.getFunctionCallAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_2_1__0__Impl
	rule__FunctionCall__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getFunctionCallAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getParametersAssignment_2_1_1()); }
	(rule__FunctionCall__ParametersAssignment_2_1_1)
	{ after(grammarAccess.getFunctionCallAccess().getParametersAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticOperations__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticOperations__Group__0__Impl
	rule__ArithmeticOperations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticOperations__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticOperationsAccess().getFirstAssignment_0()); }
	(rule__ArithmeticOperations__FirstAssignment_0)
	{ after(grammarAccess.getArithmeticOperationsAccess().getFirstAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticOperations__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticOperations__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticOperations__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticOperationsAccess().getSecondsAssignment_1()); }
	(rule__ArithmeticOperations__SecondsAssignment_1)*
	{ after(grammarAccess.getArithmeticOperationsAccess().getSecondsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryArithmetic__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryArithmetic__Group_1__0__Impl
	rule__PrimaryArithmetic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryArithmetic__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryArithmeticAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getPrimaryArithmeticAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryArithmetic__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryArithmetic__Group_1__1__Impl
	rule__PrimaryArithmetic__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryArithmetic__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryArithmeticAccess().getExpressionParserRuleCall_1_1()); }
	ruleExpression
	{ after(grammarAccess.getPrimaryArithmeticAccess().getExpressionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryArithmetic__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryArithmetic__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryArithmetic__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryArithmeticAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getPrimaryArithmeticAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SecondOperators__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SecondOperators__Group__0__Impl
	rule__SecondOperators__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SecondOperators__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSecondOperatorsAccess().getOperatorAssignment_0()); }
	(rule__SecondOperators__OperatorAssignment_0)
	{ after(grammarAccess.getSecondOperatorsAccess().getOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SecondOperators__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SecondOperators__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SecondOperators__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSecondOperatorsAccess().getValueAssignment_1()); }
	(rule__SecondOperators__ValueAssignment_1)
	{ after(grammarAccess.getSecondOperatorsAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumericLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericLiteral__Group__0__Impl
	rule__NumericLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericLiteralAccess().getAlternatives_0()); }
	(rule__NumericLiteral__Alternatives_0)
	{ after(grammarAccess.getNumericLiteralAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericLiteralAccess().getEtherUnitAssignment_1()); }
	(rule__NumericLiteral__EtherUnitAssignment_1)?
	{ after(grammarAccess.getNumericLiteralAccess().getEtherUnitAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Now__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Now__Group__0__Impl
	rule__Now__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Now__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNowAccess().getNowAction_0()); }
	()
	{ after(grammarAccess.getNowAccess().getNowAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Now__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Now__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Now__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNowAccess().getNowKeyword_1()); }
	'now'
	{ after(grammarAccess.getNowAccess().getNowKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ether__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ether__Group__0__Impl
	rule__Ether__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ether__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEtherAccess().getValueAssignment_0()); }
	(rule__Ether__ValueAssignment_0)
	{ after(grammarAccess.getEtherAccess().getValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ether__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ether__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ether__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEtherAccess().getEtherAssignment_1()); }
	(rule__Ether__EtherAssignment_1)
	{ after(grammarAccess.getEtherAccess().getEtherAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Time__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Time__Group__0__Impl
	rule__Time__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeAccess().getValueAssignment_0()); }
	(rule__Time__ValueAssignment_0)
	{ after(grammarAccess.getTimeAccess().getValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Time__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeAccess().getTimeAssignment_1()); }
	(rule__Time__TimeAssignment_1)
	{ after(grammarAccess.getTimeAccess().getTimeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SpecialVariables__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialVariables__Group__0__Impl
	rule__SpecialVariables__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialVariables__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecialVariablesAccess().getTypeAssignment_0()); }
	(rule__SpecialVariables__TypeAssignment_0)
	{ after(grammarAccess.getSpecialVariablesAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialVariables__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialVariables__Group__1__Impl
	rule__SpecialVariables__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialVariables__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecialVariablesAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getSpecialVariablesAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialVariables__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialVariables__Group__2__Impl
	rule__SpecialVariables__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialVariables__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecialVariablesAccess().getFieldAssignment_2()); }
	(rule__SpecialVariables__FieldAssignment_2)
	{ after(grammarAccess.getSpecialVariablesAccess().getFieldAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialVariables__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialVariables__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialVariables__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecialVariablesAccess().getQualifiersAssignment_3()); }
	(rule__SpecialVariables__QualifiersAssignment_3)*
	{ after(grammarAccess.getSpecialVariablesAccess().getQualifiersAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__OperationsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getOperationsContractParserRuleCall_0()); }
		ruleContract
		{ after(grammarAccess.getModelAccess().getOperationsContractParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getContractAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__BlocksAssignment_3_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractAccess().getBlocksDeclarationParserRuleCall_3_0_0_0()); }
		ruleDeclaration
		{ after(grammarAccess.getContractAccess().getBlocksDeclarationParserRuleCall_3_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__BlocksAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractAccess().getBlocksFunctionDefinitionParserRuleCall_3_1_0()); }
		ruleFunctionDefinition
		{ after(grammarAccess.getContractAccess().getBlocksFunctionDefinitionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__PayableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getPayablePayableKeyword_0_0()); }
		(
			{ before(grammarAccess.getFunctionDefinitionAccess().getPayablePayableKeyword_0_0()); }
			'payable'
			{ after(grammarAccess.getFunctionDefinitionAccess().getPayablePayableKeyword_0_0()); }
		)
		{ after(grammarAccess.getFunctionDefinitionAccess().getPayablePayableKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__ParametersAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getParametersParameterListParserRuleCall_3_0()); }
		ruleParameterList
		{ after(grammarAccess.getFunctionDefinitionAccess().getParametersParameterListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__OptionalElementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getOptionalElementsFunctionDefinitionOptionalElementParserRuleCall_4_0()); }
		ruleFunctionDefinitionOptionalElement
		{ after(grammarAccess.getFunctionDefinitionAccess().getOptionalElementsFunctionDefinitionOptionalElementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__ReturnParametersAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getReturnParametersReturnsParameterListParserRuleCall_5_1_0()); }
		ruleReturnsParameterList
		{ after(grammarAccess.getFunctionDefinitionAccess().getReturnParametersReturnsParameterListParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__BlockAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getBlockBodyParserRuleCall_6_0_0()); }
		ruleBody
		{ after(grammarAccess.getFunctionDefinitionAccess().getBlockBodyParserRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__ArgumentsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallListArgumentsAccess().getArgumentsExpressionParserRuleCall_2_0_0()); }
		ruleExpression
		{ after(grammarAccess.getFunctionCallListArgumentsAccess().getArgumentsExpressionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__ArgumentsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallListArgumentsAccess().getArgumentsExpressionParserRuleCall_2_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getFunctionCallListArgumentsAccess().getArgumentsExpressionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__ArgsAssignment_0_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallArgumentsAccess().getArgsFunctionCallArgParserRuleCall_0_3_0_0()); }
		ruleFunctionCallArg
		{ after(grammarAccess.getFunctionCallArgumentsAccess().getArgsFunctionCallArgParserRuleCall_0_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__ArgsAssignment_0_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallArgumentsAccess().getArgsFunctionCallArgParserRuleCall_0_3_1_1_0()); }
		ruleFunctionCallArg
		{ after(grammarAccess.getFunctionCallArgumentsAccess().getArgsFunctionCallArgParserRuleCall_0_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArg__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallArgAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionCallArgAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArg__ExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallArgAccess().getExprExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getFunctionCallArgAccess().getExprExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VisibilitySpecifier__VisibilityAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisibilitySpecifierAccess().getVisibilityVisibilityEnumParserRuleCall_0()); }
		ruleVisibilityEnum
		{ after(grammarAccess.getVisibilitySpecifierAccess().getVisibilityVisibilityEnumParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__VisibilityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDefinitionAccess().getVisibilityVisibilityEnumParserRuleCall_0_0()); }
		ruleVisibilityEnum
		{ after(grammarAccess.getStructDefinitionAccess().getVisibilityVisibilityEnumParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getStructDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__MembersAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDefinitionAccess().getMembersVariableDeclarationParserRuleCall_4_0_0()); }
		ruleVariableDeclaration
		{ after(grammarAccess.getStructDefinitionAccess().getMembersVariableDeclarationParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__VisibilityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumDefinitionAccess().getVisibilityVisibilityEnumParserRuleCall_0_0()); }
		ruleVisibilityEnum
		{ after(grammarAccess.getEnumDefinitionAccess().getVisibilityVisibilityEnumParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__MembersAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumDefinitionAccess().getMembersEnumValueParserRuleCall_4_0()); }
		ruleEnumValue
		{ after(grammarAccess.getEnumDefinitionAccess().getMembersEnumValueParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__MembersAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumDefinitionAccess().getMembersEnumValueParserRuleCall_5_1_0()); }
		ruleEnumValue
		{ after(grammarAccess.getEnumDefinitionAccess().getMembersEnumValueParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumValueAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumValueAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardVariableDeclarationAccess().getTypeStandardTypeParserRuleCall_0_0()); }
		ruleStandardType
		{ after(grammarAccess.getStandardVariableDeclarationAccess().getTypeStandardTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__OptionalElementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardVariableDeclarationAccess().getOptionalElementsVariableDeclarationOptionalElementParserRuleCall_1_0()); }
		ruleVariableDeclarationOptionalElement
		{ after(grammarAccess.getStandardVariableDeclarationAccess().getOptionalElementsVariableDeclarationOptionalElementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__VariableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardVariableDeclarationAccess().getVariableVariableParserRuleCall_2_0()); }
		ruleVariable
		{ after(grammarAccess.getStandardVariableDeclarationAccess().getVariableVariableParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__ExpressionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardVariableDeclarationAccess().getExpressionExpressionParserRuleCall_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getStandardVariableDeclarationAccess().getExpressionExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableDeclaration__VarTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarVariableDeclarationAccess().getVarTypeVarTypeParserRuleCall_0_0()); }
		ruleVarType
		{ after(grammarAccess.getVarVariableDeclarationAccess().getVarTypeVarTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableDeclaration__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarVariableDeclarationAccess().getVariableVariableParserRuleCall_1_0()); }
		ruleVariable
		{ after(grammarAccess.getVarVariableDeclarationAccess().getVariableVariableParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableDeclaration__ExpressionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarVariableDeclarationAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getVarVariableDeclarationAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableTupleVariableDeclaration__VarTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getVarTypeVarTypeParserRuleCall_0_0()); }
		ruleVarType
		{ after(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getVarTypeVarTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableTupleVariableDeclaration__TupleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getTupleTupleParserRuleCall_1_0()); }
		ruleTuple
		{ after(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getTupleTupleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableTupleVariableDeclaration__ExpressionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationSpecifier__LocationAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocationSpecifierAccess().getLocationLocationSpecifierEnumParserRuleCall_0()); }
		ruleLocationSpecifierEnum
		{ after(grammarAccess.getLocationSpecifierAccess().getLocationLocationSpecifierEnumParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__IsVarTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getIsVarTypeVarTypeParserRuleCall_1_0()); }
		ruleVarType
		{ after(grammarAccess.getTypeAccess().getIsVarTypeVarTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardType__DimensionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardTypeAccess().getDimensionArrayDimensionsParserRuleCall_0_1_0()); }
		ruleArrayDimensions
		{ after(grammarAccess.getStandardTypeAccess().getDimensionArrayDimensionsParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardTypeWithoutQualifiedIdentifier__DimensionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getDimensionArrayDimensionsParserRuleCall_0_1_0()); }
		ruleArrayDimensions
		{ after(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getDimensionArrayDimensionsParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementaryType__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementaryTypeAccess().getNameElementaryTypeNameEnumParserRuleCall_0()); }
		ruleElementaryTypeNameEnum
		{ after(grammarAccess.getElementaryTypeAccess().getNameElementaryTypeNameEnumParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__KeyTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingAccess().getKeyTypeElementaryTypeNameEnumParserRuleCall_2_0()); }
		ruleElementaryTypeNameEnum
		{ after(grammarAccess.getMappingAccess().getKeyTypeElementaryTypeNameEnumParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__ValueTypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingAccess().getValueTypeTypeParserRuleCall_4_0()); }
		ruleType
		{ after(grammarAccess.getMappingAccess().getValueTypeTypeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayDimensionsAccess().getValueExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getArrayDimensionsAccess().getValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__ValueAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayDimensionsAccess().getValueExpressionParserRuleCall_4_1_0()); }
		ruleExpression
		{ after(grammarAccess.getArrayDimensionsAccess().getValueExpressionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__MembersAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleAccess().getMembersExpressionParserRuleCall_2_0_0()); }
		ruleExpression
		{ after(grammarAccess.getTupleAccess().getMembersExpressionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__MembersAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleAccess().getMembersTupleSeparatorParserRuleCall_2_1_0_0()); }
		ruleTupleSeparator
		{ after(grammarAccess.getTupleAccess().getMembersTupleSeparatorParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__MembersAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleAccess().getMembersExpressionParserRuleCall_2_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getTupleAccess().getMembersExpressionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__PtionalElementsAssignment_0_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatementAccess().getPtionalElementsVariableDeclarationOptionalElementParserRuleCall_0_0_1_1_0()); }
		ruleVariableDeclarationOptionalElement
		{ after(grammarAccess.getSimpleStatementAccess().getPtionalElementsVariableDeclarationOptionalElementParserRuleCall_0_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__VariableAssignment_0_0_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatementAccess().getVariableVariableParserRuleCall_0_0_1_2_0()); }
		ruleVariable
		{ after(grammarAccess.getSimpleStatementAccess().getVariableVariableParserRuleCall_0_0_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__ExpressionAssignment_0_0_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatementAccess().getExpressionExpressionParserRuleCall_0_0_1_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSimpleStatementAccess().getExpressionExpressionParserRuleCall_0_0_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__VariableAssignment_0_1_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatementAccess().getVariableVariableParserRuleCall_0_1_1_0_1_0()); }
		ruleVariable
		{ after(grammarAccess.getSimpleStatementAccess().getVariableVariableParserRuleCall_0_1_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__ExpressionAssignment_0_1_1_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatementAccess().getExpressionExpressionParserRuleCall_0_1_1_0_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSimpleStatementAccess().getExpressionExpressionParserRuleCall_0_1_1_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__TupleAssignment_0_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatementAccess().getTupleTupleParserRuleCall_0_1_1_1_1_0()); }
		ruleTuple
		{ after(grammarAccess.getSimpleStatementAccess().getTupleTupleParserRuleCall_0_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__ExpressionAssignment_0_1_1_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatementAccess().getExpressionExpressionParserRuleCall_0_1_1_1_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSimpleStatementAccess().getExpressionExpressionParserRuleCall_0_1_1_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__SemicolonAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatementAccess().getSemicolonSemicolonKeyword_1_0()); }
		(
			{ before(grammarAccess.getSimpleStatementAccess().getSemicolonSemicolonKeyword_1_0()); }
			';'
			{ after(grammarAccess.getSimpleStatementAccess().getSemicolonSemicolonKeyword_1_0()); }
		)
		{ after(grammarAccess.getSimpleStatementAccess().getSemicolonSemicolonKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__OptionalElementsAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatement2Access().getOptionalElementsVariableDeclarationOptionalElementParserRuleCall_0_1_1_0()); }
		ruleVariableDeclarationOptionalElement
		{ after(grammarAccess.getSimpleStatement2Access().getOptionalElementsVariableDeclarationOptionalElementParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__VariableAssignment_0_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatement2Access().getVariableVariableParserRuleCall_0_1_2_0()); }
		ruleVariable
		{ after(grammarAccess.getSimpleStatement2Access().getVariableVariableParserRuleCall_0_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__ExpressionAssignment_0_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatement2Access().getExpressionExpressionParserRuleCall_0_1_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSimpleStatement2Access().getExpressionExpressionParserRuleCall_0_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__VariableAssignment_1_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatement2Access().getVariableVariableParserRuleCall_1_1_0_1_0()); }
		ruleVariable
		{ after(grammarAccess.getSimpleStatement2Access().getVariableVariableParserRuleCall_1_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__ExpressionAssignment_1_1_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatement2Access().getExpressionExpressionParserRuleCall_1_1_0_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSimpleStatement2Access().getExpressionExpressionParserRuleCall_1_1_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__TupleAssignment_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatement2Access().getTupleTupleParserRuleCall_1_1_1_1_0()); }
		ruleTuple
		{ after(grammarAccess.getSimpleStatement2Access().getTupleTupleParserRuleCall_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__ExpressionAssignment_1_1_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatement2Access().getExpressionExpressionParserRuleCall_1_1_1_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSimpleStatement2Access().getExpressionExpressionParserRuleCall_1_1_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__ExpressionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__IdentifierAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifiedIdentifierAccess().getIdentifierIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getQualifiedIdentifierAccess().getIdentifierIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__QualifiersAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifiedIdentifierAccess().getQualifiersQualifierParserRuleCall_1_0()); }
		ruleQualifier
		{ after(grammarAccess.getQualifiedIdentifierAccess().getQualifiersQualifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__FieldAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getFieldIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldAccess().getFieldIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexAccess().getValueExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getIndexAccess().getValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__ArgumentsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getArgumentsFunctionCallArgumentsParserRuleCall_0()); }
		ruleFunctionCallArguments
		{ after(grammarAccess.getArgumentsAccess().getArgumentsFunctionCallArgumentsParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierInvocation__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModifierInvocationAccess().getNameModifierCrossReference_0_0()); }
		(
			{ before(grammarAccess.getModifierInvocationAccess().getNameModifierIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getModifierInvocationAccess().getNameModifierIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getModifierInvocationAccess().getNameModifierCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierInvocation__ArgsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModifierInvocationAccess().getArgsFunctionCallListArgumentsParserRuleCall_1_0()); }
		ruleFunctionCallListArguments
		{ after(grammarAccess.getModifierInvocationAccess().getArgsFunctionCallListArgumentsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParametersAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getParametersVariableDeclarationParserRuleCall_2_0_0()); }
		ruleVariableDeclaration
		{ after(grammarAccess.getParameterListAccess().getParametersVariableDeclarationParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParametersAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getParametersVariableDeclarationParserRuleCall_2_1_1_0()); }
		ruleVariableDeclaration
		{ after(grammarAccess.getParameterListAccess().getParametersVariableDeclarationParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__ParametersAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnsParameterListAccess().getParametersReturnParameterDeclarationParserRuleCall_2_0_0()); }
		ruleReturnParameterDeclaration
		{ after(grammarAccess.getReturnsParameterListAccess().getParametersReturnParameterDeclarationParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__ParametersAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnsParameterListAccess().getParametersReturnParameterDeclarationParserRuleCall_2_1_1_0()); }
		ruleReturnParameterDeclaration
		{ after(grammarAccess.getReturnsParameterListAccess().getParametersReturnParameterDeclarationParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameterDeclaration__TypeRefAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnParameterDeclarationAccess().getTypeRefTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getReturnParameterDeclarationAccess().getTypeRefTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameterDeclaration__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnParameterDeclarationAccess().getVariableVariableParserRuleCall_1_0()); }
		ruleVariable
		{ after(grammarAccess.getReturnParameterDeclarationAccess().getVariableVariableParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteStatementAccess().getVariableQualifiedIdentifierParserRuleCall_1_0()); }
		ruleQualifiedIdentifier
		{ after(grammarAccess.getDeleteStatementAccess().getVariableQualifiedIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getConditionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getIfStatementAccess().getConditionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__TrueBodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getTrueBodyStatementParserRuleCall_4_0()); }
		ruleStatement
		{ after(grammarAccess.getIfStatementAccess().getTrueBodyStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__FalseBodyAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getFalseBodyStatementParserRuleCall_5_1_0()); }
		ruleStatement
		{ after(grammarAccess.getIfStatementAccess().getFalseBodyStatementParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementAccess().getConditionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getWhileStatementAccess().getConditionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__BodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementAccess().getBodyStatementParserRuleCall_4_0()); }
		ruleStatement
		{ after(grammarAccess.getWhileStatementAccess().getBodyStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__InitExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getInitExpressionSimpleStatement2ParserRuleCall_2_0()); }
		ruleSimpleStatement2
		{ after(grammarAccess.getForStatementAccess().getInitExpressionSimpleStatement2ParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__ConditionExpressionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getConditionExpressionExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getForStatementAccess().getConditionExpressionExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__LoopExpressionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getLoopExpressionExpressionStatementParserRuleCall_6_0()); }
		ruleExpressionStatement
		{ after(grammarAccess.getForStatementAccess().getLoopExpressionExpressionStatementParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__BodyAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getBodyStatementParserRuleCall_8_0()); }
		ruleStatement
		{ after(grammarAccess.getForStatementAccess().getBodyStatementParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__StatementsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyAccess().getStatementsStatementParserRuleCall_2_0_0()); }
		ruleStatement
		{ after(grammarAccess.getBodyAccess().getStatementsStatementParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__StatementsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyAccess().getStatementsStatementParserRuleCall_2_1_0()); }
		ruleStatement
		{ after(grammarAccess.getBodyAccess().getStatementsStatementParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__FirstAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getFirstLiteralParserRuleCall_0_0_0()); }
		ruleLiteral
		{ after(grammarAccess.getExpressionAccess().getFirstLiteralParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__OperationsAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getOperationsConditionOperationParserRuleCall_0_1_0()); }
		ruleConditionOperation
		{ after(grammarAccess.getExpressionAccess().getOperationsConditionOperationParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__NegateAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getNegateNOTKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getExpressionAccess().getNegateNOTKeyword_1_0_0()); }
			'NOT'
			{ after(grammarAccess.getExpressionAccess().getNegateNOTKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getExpressionAccess().getNegateNOTKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__FirstAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getFirstLiteralParserRuleCall_1_1_0()); }
		ruleLiteral
		{ after(grammarAccess.getExpressionAccess().getFirstLiteralParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__OperationsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getOperationsConditionOperationParserRuleCall_1_2_0()); }
		ruleConditionOperation
		{ after(grammarAccess.getExpressionAccess().getOperationsConditionOperationParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__TernaryAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getTernaryTERNARYKeyword_2_0_0()); }
		(
			{ before(grammarAccess.getExpressionAccess().getTernaryTERNARYKeyword_2_0_0()); }
			'TERNARY'
			{ after(grammarAccess.getExpressionAccess().getTernaryTERNARYKeyword_2_0_0()); }
		)
		{ after(grammarAccess.getExpressionAccess().getTernaryTERNARYKeyword_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__FirstAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getFirstLiteralParserRuleCall_2_1_0()); }
		ruleLiteral
		{ after(grammarAccess.getExpressionAccess().getFirstLiteralParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__TrueAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getTrueLiteralParserRuleCall_2_3_0()); }
		ruleLiteral
		{ after(grammarAccess.getExpressionAccess().getTrueLiteralParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__FalseAssignment_2_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getFalseLiteralParserRuleCall_2_5_0()); }
		ruleLiteral
		{ after(grammarAccess.getExpressionAccess().getFalseLiteralParserRuleCall_2_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionOperation__OperationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionOperationAccess().getOperationLogicalOperationLiteralEnumRuleCall_0_0()); }
		ruleLogicalOperationLiteral
		{ after(grammarAccess.getConditionOperationAccess().getOperationLogicalOperationLiteralEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionOperation__NegateSecondAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionOperationAccess().getNegateSecondNOTKeyword_1_0()); }
		(
			{ before(grammarAccess.getConditionOperationAccess().getNegateSecondNOTKeyword_1_0()); }
			'NOT'
			{ after(grammarAccess.getConditionOperationAccess().getNegateSecondNOTKeyword_1_0()); }
		)
		{ after(grammarAccess.getConditionOperationAccess().getNegateSecondNOTKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionOperation__SecondsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionOperationAccess().getSecondsLiteralParserRuleCall_2_0()); }
		ruleLiteral
		{ after(grammarAccess.getConditionOperationAccess().getSecondsLiteralParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GasleftFunction__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGasleftFunctionAccess().getNameGasleftKeyword_0_0()); }
		(
			{ before(grammarAccess.getGasleftFunctionAccess().getNameGasleftKeyword_0_0()); }
			'gasleft'
			{ after(grammarAccess.getGasleftFunctionAccess().getNameGasleftKeyword_0_0()); }
		)
		{ after(grammarAccess.getGasleftFunctionAccess().getNameGasleftKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockhashFunction__ParameterAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockhashFunctionAccess().getParameterIntParameterParserRuleCall_2_0()); }
		ruleIntParameter
		{ after(grammarAccess.getBlockhashFunctionAccess().getParameterIntParameterParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathematicalFunction__FunctionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathematicalFunctionAccess().getFunctionAlternatives_0_0()); }
		(rule__MathematicalFunction__FunctionAlternatives_0_0)
		{ after(grammarAccess.getMathematicalFunctionAccess().getFunctionAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathematicalFunction__ParametersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathematicalFunctionAccess().getParametersIntParameterParserRuleCall_2_0()); }
		ruleIntParameter
		{ after(grammarAccess.getMathematicalFunctionAccess().getParametersIntParameterParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathematicalFunction__ParametersAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathematicalFunctionAccess().getParametersIntParameterParserRuleCall_4_0()); }
		ruleIntParameter
		{ after(grammarAccess.getMathematicalFunctionAccess().getParametersIntParameterParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathematicalFunction__ParametersAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathematicalFunctionAccess().getParametersIntParameterParserRuleCall_6_0()); }
		ruleIntParameter
		{ after(grammarAccess.getMathematicalFunctionAccess().getParametersIntParameterParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcrecoverFunction__FunctionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEcrecoverFunctionAccess().getFunctionEcrecoverKeyword_0_0()); }
		(
			{ before(grammarAccess.getEcrecoverFunctionAccess().getFunctionEcrecoverKeyword_0_0()); }
			'ecrecover'
			{ after(grammarAccess.getEcrecoverFunctionAccess().getFunctionEcrecoverKeyword_0_0()); }
		)
		{ after(grammarAccess.getEcrecoverFunctionAccess().getFunctionEcrecoverKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcrecoverFunction__ParametersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEcrecoverFunctionAccess().getParametersIntParameterParserRuleCall_2_0()); }
		ruleIntParameter
		{ after(grammarAccess.getEcrecoverFunctionAccess().getParametersIntParameterParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcrecoverFunction__ParametersAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEcrecoverFunctionAccess().getParametersIntParameterParserRuleCall_4_0()); }
		ruleIntParameter
		{ after(grammarAccess.getEcrecoverFunctionAccess().getParametersIntParameterParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcrecoverFunction__ParametersAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEcrecoverFunctionAccess().getParametersIntParameterParserRuleCall_6_0()); }
		ruleIntParameter
		{ after(grammarAccess.getEcrecoverFunctionAccess().getParametersIntParameterParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcrecoverFunction__ParametersAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEcrecoverFunctionAccess().getParametersIntParameterParserRuleCall_8_0()); }
		ruleIntParameter
		{ after(grammarAccess.getEcrecoverFunctionAccess().getParametersIntParameterParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFunction__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHashFunctionAccess().getNameAlternatives_0_0()); }
		(rule__HashFunction__NameAlternatives_0_0)
		{ after(grammarAccess.getHashFunctionAccess().getNameAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HashFunction__ParametersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHashFunctionAccess().getParametersIntParameterParserRuleCall_2_0()); }
		ruleIntParameter
		{ after(grammarAccess.getHashFunctionAccess().getParametersIntParameterParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntParameter__ParamAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntParameterAccess().getParamArithmeticOperationsParserRuleCall_0_0()); }
		ruleArithmeticOperations
		{ after(grammarAccess.getIntParameterAccess().getParamArithmeticOperationsParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntParameter__FunAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntParameterAccess().getFunFunctionCallParserRuleCall_1_0()); }
		ruleFunctionCall
		{ after(grammarAccess.getIntParameterAccess().getFunFunctionCallParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getNameFunctionDefinitionCrossReference_0_0()); }
		(
			{ before(grammarAccess.getFunctionCallAccess().getNameFunctionDefinitionIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFunctionCallAccess().getNameFunctionDefinitionIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getFunctionCallAccess().getNameFunctionDefinitionCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ParametersAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getParametersExpressionParserRuleCall_2_0_0()); }
		ruleExpression
		{ after(grammarAccess.getFunctionCallAccess().getParametersExpressionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ParametersAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getParametersExpressionParserRuleCall_2_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getFunctionCallAccess().getParametersExpressionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticOperations__FirstAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticOperationsAccess().getFirstPrimaryArithmeticParserRuleCall_0_0()); }
		rulePrimaryArithmetic
		{ after(grammarAccess.getArithmeticOperationsAccess().getFirstPrimaryArithmeticParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticOperations__SecondsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticOperationsAccess().getSecondsSecondOperatorsParserRuleCall_1_0()); }
		ruleSecondOperators
		{ after(grammarAccess.getArithmeticOperationsAccess().getSecondsSecondOperatorsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SecondOperators__OperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSecondOperatorsAccess().getOperatorAlternatives_0_0()); }
		(rule__SecondOperators__OperatorAlternatives_0_0)
		{ after(grammarAccess.getSecondOperatorsAccess().getOperatorAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SecondOperators__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSecondOperatorsAccess().getValuePrimaryArithmeticParserRuleCall_1_0()); }
		rulePrimaryArithmetic
		{ after(grammarAccess.getSecondOperatorsAccess().getValuePrimaryArithmeticParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanConst__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanConstAccess().getValueBooleanLiteralEnumEnumRuleCall_0()); }
		ruleBooleanLiteralEnum
		{ after(grammarAccess.getBooleanConstAccess().getValueBooleanLiteralEnumEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericLiteral__IntValueAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericLiteralAccess().getIntValueNumberDimensionlessParserRuleCall_0_0_0()); }
		ruleNumberDimensionless
		{ after(grammarAccess.getNumericLiteralAccess().getIntValueNumberDimensionlessParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericLiteral__HexValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericLiteralAccess().getHexValueHexLiteralParserRuleCall_0_1_0()); }
		ruleHexLiteral
		{ after(grammarAccess.getNumericLiteralAccess().getHexValueHexLiteralParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericLiteral__DecimalValueAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericLiteralAccess().getDecimalValueDecimalLiteralParserRuleCall_0_2_0()); }
		ruleDecimalLiteral
		{ after(grammarAccess.getNumericLiteralAccess().getDecimalValueDecimalLiteralParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericLiteral__NowAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericLiteralAccess().getNowNowParserRuleCall_0_3_0()); }
		ruleNow
		{ after(grammarAccess.getNumericLiteralAccess().getNowNowParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericLiteral__EtherUnitAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericLiteralAccess().getEtherUnitUnitTypesParserRuleCall_1_0()); }
		ruleUnitTypes
		{ after(grammarAccess.getNumericLiteralAccess().getEtherUnitUnitTypesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTypes__TimeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitTypesAccess().getTimeTimeParserRuleCall_0_0()); }
		ruleTime
		{ after(grammarAccess.getUnitTypesAccess().getTimeTimeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitTypes__UnitsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitTypesAccess().getUnitsEtherParserRuleCall_1_0()); }
		ruleEther
		{ after(grammarAccess.getUnitTypesAccess().getUnitsEtherParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberDimensionless__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberDimensionlessAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberDimensionlessAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ether__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEtherAccess().getValueINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getEtherAccess().getValueINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ether__EtherAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEtherAccess().getEtherEtherSubDenominationEnumEnumRuleCall_1_0()); }
		ruleEtherSubDenominationEnum
		{ after(grammarAccess.getEtherAccess().getEtherEtherSubDenominationEnumEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeAccess().getValueINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getTimeAccess().getValueINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__TimeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeAccess().getTimeTimeSubdenominationEnumEnumRuleCall_1_0()); }
		ruleTimeSubdenominationEnum
		{ after(grammarAccess.getTimeAccess().getTimeTimeSubdenominationEnumEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HexLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHexLiteralAccess().getValueHEXTerminalRuleCall_0()); }
		RULE_HEX
		{ after(grammarAccess.getHexLiteralAccess().getValueHEXTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecimalLiteralAccess().getValueDECIMALTerminalRuleCall_0()); }
		RULE_DECIMAL
		{ after(grammarAccess.getDecimalLiteralAccess().getValueDECIMALTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialVariables__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecialVariablesAccess().getTypeSpecialVariablesTypeEnumParserRuleCall_0_0()); }
		ruleSpecialVariablesTypeEnum
		{ after(grammarAccess.getSpecialVariablesAccess().getTypeSpecialVariablesTypeEnumParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialVariables__FieldAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecialVariablesAccess().getFieldIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getSpecialVariablesAccess().getFieldIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialVariables__QualifiersAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecialVariablesAccess().getQualifiersQualifierParserRuleCall_3_0()); }
		ruleQualifier
		{ after(grammarAccess.getSpecialVariablesAccess().getQualifiersQualifierParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementaryTypeNameEnum__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getTypeAlternatives_0()); }
		(rule__ElementaryTypeNameEnum__TypeAlternatives_0)
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getTypeAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationSpecifierEnum__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocationSpecifierEnumAccess().getTypeAlternatives_0()); }
		(rule__LocationSpecifierEnum__TypeAlternatives_0)
		{ after(grammarAccess.getLocationSpecifierEnumAccess().getTypeAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VisibilityEnum__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisibilityEnumAccess().getTypeAlternatives_0()); }
		(rule__VisibilityEnum__TypeAlternatives_0)
		{ after(grammarAccess.getVisibilityEnumAccess().getTypeAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialVariablesTypeEnum__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecialVariablesTypeEnumAccess().getNameAlternatives_0()); }
		(rule__SpecialVariablesTypeEnum__NameAlternatives_0)
		{ after(grammarAccess.getSpecialVariablesTypeEnumAccess().getNameAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_HEX : '0x' ('0'..'9'|'A'..'F'|'a'..'f')+;

RULE_DECIMAL : RULE_INT '.' RULE_INT;

RULE_BLOCK : 'block.' ('coinbase'|'difficulty'|'gaslimit'|'number'|'timestamp');

RULE_MSG : 'msg.' ('data'|'gas'|'sender'|'sig'|'value');

RULE_TX : 'tx.' ('gasprice'|'origin');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
