/**
 * generated by Xtext 2.19.0
 */
package org.unicam.tryGrammar.tryGrammar;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Boolean Const</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.unicam.tryGrammar.tryGrammar.BooleanConst#getValue <em>Value</em>}</li>
 * </ul>
 *
 * @see org.unicam.tryGrammar.tryGrammar.TryGrammarPackage#getBooleanConst()
 * @model
 * @generated
 */
public interface BooleanConst extends Literal
{
  /**
   * Returns the value of the '<em><b>Value</b></em>' attribute.
   * The literals are from the enumeration {@link org.unicam.tryGrammar.tryGrammar.BooleanLiteralEnum}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Value</em>' attribute.
   * @see org.unicam.tryGrammar.tryGrammar.BooleanLiteralEnum
   * @see #setValue(BooleanLiteralEnum)
   * @see org.unicam.tryGrammar.tryGrammar.TryGrammarPackage#getBooleanConst_Value()
   * @model
   * @generated
   */
  BooleanLiteralEnum getValue();

  /**
   * Sets the value of the '{@link org.unicam.tryGrammar.tryGrammar.BooleanConst#getValue <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Value</em>' attribute.
   * @see org.unicam.tryGrammar.tryGrammar.BooleanLiteralEnum
   * @see #getValue()
   * @generated
   */
  void setValue(BooleanLiteralEnum value);

} // BooleanConst
