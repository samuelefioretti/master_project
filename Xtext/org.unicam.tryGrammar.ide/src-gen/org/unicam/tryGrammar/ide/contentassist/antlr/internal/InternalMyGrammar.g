/*
 * generated by Xtext 2.19.0
 */
grammar InternalMyGrammar;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.unicam.tryGrammar.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.unicam.tryGrammar.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.unicam.tryGrammar.services.MyGrammarGrammarAccess;

}
@parser::members {
	private MyGrammarGrammarAccess grammarAccess;

	public void setGrammarAccess(MyGrammarGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleSolidity
entryRuleSolidity
:
{ before(grammarAccess.getSolidityRule()); }
	 ruleSolidity
{ after(grammarAccess.getSolidityRule()); } 
	 EOF 
;

// Rule Solidity
ruleSolidity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSolidityAccess().getAlternatives()); }
		(rule__Solidity__Alternatives)*
		{ after(grammarAccess.getSolidityAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportDirective
entryRuleImportDirective
:
{ before(grammarAccess.getImportDirectiveRule()); }
	 ruleImportDirective
{ after(grammarAccess.getImportDirectiveRule()); } 
	 EOF 
;

// Rule ImportDirective
ruleImportDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportDirectiveAccess().getAlternatives()); }
		(rule__ImportDirective__Alternatives)
		{ after(grammarAccess.getImportDirectiveAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSymbolAlias
entryRuleSymbolAlias
:
{ before(grammarAccess.getSymbolAliasRule()); }
	 ruleSymbolAlias
{ after(grammarAccess.getSymbolAliasRule()); } 
	 EOF 
;

// Rule SymbolAlias
ruleSymbolAlias 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSymbolAliasAccess().getGroup()); }
		(rule__SymbolAlias__Group__0)
		{ after(grammarAccess.getSymbolAliasAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContract
entryRuleContract
:
{ before(grammarAccess.getContractRule()); }
	 ruleContract
{ after(grammarAccess.getContractRule()); } 
	 EOF 
;

// Rule Contract
ruleContract 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContractAccess().getGroup()); }
		(rule__Contract__Group__0)
		{ after(grammarAccess.getContractAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLibrary
entryRuleLibrary
:
{ before(grammarAccess.getLibraryRule()); }
	 ruleLibrary
{ after(grammarAccess.getLibraryRule()); } 
	 EOF 
;

// Rule Library
ruleLibrary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLibraryAccess().getGroup()); }
		(rule__Library__Group__0)
		{ after(grammarAccess.getLibraryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinitionBody
entryRuleDefinitionBody
:
{ before(grammarAccess.getDefinitionBodyRule()); }
	 ruleDefinitionBody
{ after(grammarAccess.getDefinitionBodyRule()); } 
	 EOF 
;

// Rule DefinitionBody
ruleDefinitionBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionBodyAccess().getGroup()); }
		(rule__DefinitionBody__Group__0)
		{ after(grammarAccess.getDefinitionBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInheritanceSpecifier
entryRuleInheritanceSpecifier
:
{ before(grammarAccess.getInheritanceSpecifierRule()); }
	 ruleInheritanceSpecifier
{ after(grammarAccess.getInheritanceSpecifierRule()); } 
	 EOF 
;

// Rule InheritanceSpecifier
ruleInheritanceSpecifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInheritanceSpecifierAccess().getGroup()); }
		(rule__InheritanceSpecifier__Group__0)
		{ after(grammarAccess.getInheritanceSpecifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionCallListArguments
entryRuleFunctionCallListArguments
:
{ before(grammarAccess.getFunctionCallListArgumentsRule()); }
	 ruleFunctionCallListArguments
{ after(grammarAccess.getFunctionCallListArgumentsRule()); } 
	 EOF 
;

// Rule FunctionCallListArguments
ruleFunctionCallListArguments 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionCallListArgumentsAccess().getGroup()); }
		(rule__FunctionCallListArguments__Group__0)
		{ after(grammarAccess.getFunctionCallListArgumentsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionCallArguments
entryRuleFunctionCallArguments
:
{ before(grammarAccess.getFunctionCallArgumentsRule()); }
	 ruleFunctionCallArguments
{ after(grammarAccess.getFunctionCallArgumentsRule()); } 
	 EOF 
;

// Rule FunctionCallArguments
ruleFunctionCallArguments 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionCallArgumentsAccess().getAlternatives()); }
		(rule__FunctionCallArguments__Alternatives)
		{ after(grammarAccess.getFunctionCallArgumentsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionCallArg
entryRuleFunctionCallArg
:
{ before(grammarAccess.getFunctionCallArgRule()); }
	 ruleFunctionCallArg
{ after(grammarAccess.getFunctionCallArgRule()); } 
	 EOF 
;

// Rule FunctionCallArg
ruleFunctionCallArg 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionCallArgAccess().getGroup()); }
		(rule__FunctionCallArg__Group__0)
		{ after(grammarAccess.getFunctionCallArgAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionDefinition
entryRuleFunctionDefinition
:
{ before(grammarAccess.getFunctionDefinitionRule()); }
	 ruleFunctionDefinition
{ after(grammarAccess.getFunctionDefinitionRule()); } 
	 EOF 
;

// Rule FunctionDefinition
ruleFunctionDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
		(rule__FunctionDefinition__Group__0)
		{ after(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionDefinitionOptionalElement
entryRuleFunctionDefinitionOptionalElement
:
{ before(grammarAccess.getFunctionDefinitionOptionalElementRule()); }
	 ruleFunctionDefinitionOptionalElement
{ after(grammarAccess.getFunctionDefinitionOptionalElementRule()); } 
	 EOF 
;

// Rule FunctionDefinitionOptionalElement
ruleFunctionDefinitionOptionalElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionDefinitionOptionalElementAccess().getAlternatives()); }
		(rule__FunctionDefinitionOptionalElement__Alternatives)
		{ after(grammarAccess.getFunctionDefinitionOptionalElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConst
entryRuleConst
:
{ before(grammarAccess.getConstRule()); }
	 ruleConst
{ after(grammarAccess.getConstRule()); } 
	 EOF 
;

// Rule Const
ruleConst 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstAccess().getGroup()); }
		(rule__Const__Group__0)
		{ after(grammarAccess.getConstAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVisibilitySpecifier
entryRuleVisibilitySpecifier
:
{ before(grammarAccess.getVisibilitySpecifierRule()); }
	 ruleVisibilitySpecifier
{ after(grammarAccess.getVisibilitySpecifierRule()); } 
	 EOF 
;

// Rule VisibilitySpecifier
ruleVisibilitySpecifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVisibilitySpecifierAccess().getVisibilityAssignment()); }
		(rule__VisibilitySpecifier__VisibilityAssignment)
		{ after(grammarAccess.getVisibilitySpecifierAccess().getVisibilityAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructDefinition
entryRuleStructDefinition
:
{ before(grammarAccess.getStructDefinitionRule()); }
	 ruleStructDefinition
{ after(grammarAccess.getStructDefinitionRule()); } 
	 EOF 
;

// Rule StructDefinition
ruleStructDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructDefinitionAccess().getGroup()); }
		(rule__StructDefinition__Group__0)
		{ after(grammarAccess.getStructDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumDefinition
entryRuleEnumDefinition
:
{ before(grammarAccess.getEnumDefinitionRule()); }
	 ruleEnumDefinition
{ after(grammarAccess.getEnumDefinitionRule()); } 
	 EOF 
;

// Rule EnumDefinition
ruleEnumDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumDefinitionAccess().getGroup()); }
		(rule__EnumDefinition__Group__0)
		{ after(grammarAccess.getEnumDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumValue
entryRuleEnumValue
:
{ before(grammarAccess.getEnumValueRule()); }
	 ruleEnumValue
{ after(grammarAccess.getEnumValueRule()); } 
	 EOF 
;

// Rule EnumValue
ruleEnumValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumValueAccess().getNameAssignment()); }
		(rule__EnumValue__NameAssignment)
		{ after(grammarAccess.getEnumValueAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getNameAssignment()); }
		(rule__Variable__NameAssignment)
		{ after(grammarAccess.getVariableAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getAlternatives()); }
		(rule__VariableDeclaration__Alternatives)
		{ after(grammarAccess.getVariableDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStandardVariableDeclaration
entryRuleStandardVariableDeclaration
:
{ before(grammarAccess.getStandardVariableDeclarationRule()); }
	 ruleStandardVariableDeclaration
{ after(grammarAccess.getStandardVariableDeclarationRule()); } 
	 EOF 
;

// Rule StandardVariableDeclaration
ruleStandardVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStandardVariableDeclarationAccess().getGroup()); }
		(rule__StandardVariableDeclaration__Group__0)
		{ after(grammarAccess.getStandardVariableDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarVariableDeclaration
entryRuleVarVariableDeclaration
:
{ before(grammarAccess.getVarVariableDeclarationRule()); }
	 ruleVarVariableDeclaration
{ after(grammarAccess.getVarVariableDeclarationRule()); } 
	 EOF 
;

// Rule VarVariableDeclaration
ruleVarVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarVariableDeclarationAccess().getGroup()); }
		(rule__VarVariableDeclaration__Group__0)
		{ after(grammarAccess.getVarVariableDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarVariableTupleVariableDeclaration
entryRuleVarVariableTupleVariableDeclaration
:
{ before(grammarAccess.getVarVariableTupleVariableDeclarationRule()); }
	 ruleVarVariableTupleVariableDeclaration
{ after(grammarAccess.getVarVariableTupleVariableDeclarationRule()); } 
	 EOF 
;

// Rule VarVariableTupleVariableDeclaration
ruleVarVariableTupleVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getGroup()); }
		(rule__VarVariableTupleVariableDeclaration__Group__0)
		{ after(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDeclarationOptionalElement
entryRuleVariableDeclarationOptionalElement
:
{ before(grammarAccess.getVariableDeclarationOptionalElementRule()); }
	 ruleVariableDeclarationOptionalElement
{ after(grammarAccess.getVariableDeclarationOptionalElementRule()); } 
	 EOF 
;

// Rule VariableDeclarationOptionalElement
ruleVariableDeclarationOptionalElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclarationOptionalElementAccess().getAlternatives()); }
		(rule__VariableDeclarationOptionalElement__Alternatives)
		{ after(grammarAccess.getVariableDeclarationOptionalElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndexedSpecifer
entryRuleIndexedSpecifer
:
{ before(grammarAccess.getIndexedSpeciferRule()); }
	 ruleIndexedSpecifer
{ after(grammarAccess.getIndexedSpeciferRule()); } 
	 EOF 
;

// Rule IndexedSpecifer
ruleIndexedSpecifer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndexedSpeciferAccess().getGroup()); }
		(rule__IndexedSpecifer__Group__0)
		{ after(grammarAccess.getIndexedSpeciferAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstantSpecifier
entryRuleConstantSpecifier
:
{ before(grammarAccess.getConstantSpecifierRule()); }
	 ruleConstantSpecifier
{ after(grammarAccess.getConstantSpecifierRule()); } 
	 EOF 
;

// Rule ConstantSpecifier
ruleConstantSpecifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantSpecifierAccess().getGroup()); }
		(rule__ConstantSpecifier__Group__0)
		{ after(grammarAccess.getConstantSpecifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocationSpecifier
entryRuleLocationSpecifier
:
{ before(grammarAccess.getLocationSpecifierRule()); }
	 ruleLocationSpecifier
{ after(grammarAccess.getLocationSpecifierRule()); } 
	 EOF 
;

// Rule LocationSpecifier
ruleLocationSpecifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocationSpecifierAccess().getLocationAssignment()); }
		(rule__LocationSpecifier__LocationAssignment)
		{ after(grammarAccess.getLocationSpecifierAccess().getLocationAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStandardType
entryRuleStandardType
:
{ before(grammarAccess.getStandardTypeRule()); }
	 ruleStandardType
{ after(grammarAccess.getStandardTypeRule()); } 
	 EOF 
;

// Rule StandardType
ruleStandardType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStandardTypeAccess().getAlternatives()); }
		(rule__StandardType__Alternatives)
		{ after(grammarAccess.getStandardTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStandardTypeWithoutQualifiedIdentifier
entryRuleStandardTypeWithoutQualifiedIdentifier
:
{ before(grammarAccess.getStandardTypeWithoutQualifiedIdentifierRule()); }
	 ruleStandardTypeWithoutQualifiedIdentifier
{ after(grammarAccess.getStandardTypeWithoutQualifiedIdentifierRule()); } 
	 EOF 
;

// Rule StandardTypeWithoutQualifiedIdentifier
ruleStandardTypeWithoutQualifiedIdentifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getAlternatives()); }
		(rule__StandardTypeWithoutQualifiedIdentifier__Alternatives)
		{ after(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementaryType
entryRuleElementaryType
:
{ before(grammarAccess.getElementaryTypeRule()); }
	 ruleElementaryType
{ after(grammarAccess.getElementaryTypeRule()); } 
	 EOF 
;

// Rule ElementaryType
ruleElementaryType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementaryTypeAccess().getNameAssignment()); }
		(rule__ElementaryType__NameAssignment)
		{ after(grammarAccess.getElementaryTypeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapping
entryRuleMapping
:
{ before(grammarAccess.getMappingRule()); }
	 ruleMapping
{ after(grammarAccess.getMappingRule()); } 
	 EOF 
;

// Rule Mapping
ruleMapping 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMappingAccess().getGroup()); }
		(rule__Mapping__Group__0)
		{ after(grammarAccess.getMappingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayDimensions
entryRuleArrayDimensions
:
{ before(grammarAccess.getArrayDimensionsRule()); }
	 ruleArrayDimensions
{ after(grammarAccess.getArrayDimensionsRule()); } 
	 EOF 
;

// Rule ArrayDimensions
ruleArrayDimensions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayDimensionsAccess().getGroup()); }
		(rule__ArrayDimensions__Group__0)
		{ after(grammarAccess.getArrayDimensionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarType
entryRuleVarType
:
{ before(grammarAccess.getVarTypeRule()); }
	 ruleVarType
{ after(grammarAccess.getVarTypeRule()); } 
	 EOF 
;

// Rule VarType
ruleVarType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarTypeAccess().getVarKeyword()); }
		'var'
		{ after(grammarAccess.getVarTypeAccess().getVarKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTuple
entryRuleTuple
:
{ before(grammarAccess.getTupleRule()); }
	 ruleTuple
{ after(grammarAccess.getTupleRule()); } 
	 EOF 
;

// Rule Tuple
ruleTuple 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTupleAccess().getGroup()); }
		(rule__Tuple__Group__0)
		{ after(grammarAccess.getTupleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTupleSeparator
entryRuleTupleSeparator
:
{ before(grammarAccess.getTupleSeparatorRule()); }
	 ruleTupleSeparator
{ after(grammarAccess.getTupleSeparatorRule()); } 
	 EOF 
;

// Rule TupleSeparator
ruleTupleSeparator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTupleSeparatorAccess().getGroup()); }
		(rule__TupleSeparator__Group__0)
		{ after(grammarAccess.getTupleSeparatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleStatement
entryRuleSimpleStatement
:
{ before(grammarAccess.getSimpleStatementRule()); }
	 ruleSimpleStatement
{ after(grammarAccess.getSimpleStatementRule()); } 
	 EOF 
;

// Rule SimpleStatement
ruleSimpleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleStatementAccess().getGroup()); }
		(rule__SimpleStatement__Group__0)
		{ after(grammarAccess.getSimpleStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleStatement2
entryRuleSimpleStatement2
:
{ before(grammarAccess.getSimpleStatement2Rule()); }
	 ruleSimpleStatement2
{ after(grammarAccess.getSimpleStatement2Rule()); } 
	 EOF 
;

// Rule SimpleStatement2
ruleSimpleStatement2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleStatement2Access().getAlternatives()); }
		(rule__SimpleStatement2__Alternatives)
		{ after(grammarAccess.getSimpleStatement2Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionStatement
entryRuleExpressionStatement
:
{ before(grammarAccess.getExpressionStatementRule()); }
	 ruleExpressionStatement
{ after(grammarAccess.getExpressionStatementRule()); } 
	 EOF 
;

// Rule ExpressionStatement
ruleExpressionStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionStatementAccess().getExpressionAssignment()); }
		(rule__ExpressionStatement__ExpressionAssignment)
		{ after(grammarAccess.getExpressionStatementAccess().getExpressionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedIdentifier
entryRuleQualifiedIdentifier
:
{ before(grammarAccess.getQualifiedIdentifierRule()); }
	 ruleQualifiedIdentifier
{ after(grammarAccess.getQualifiedIdentifierRule()); } 
	 EOF 
;

// Rule QualifiedIdentifier
ruleQualifiedIdentifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedIdentifierAccess().getGroup()); }
		(rule__QualifiedIdentifier__Group__0)
		{ after(grammarAccess.getQualifiedIdentifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifier
entryRuleQualifier
:
{ before(grammarAccess.getQualifierRule()); }
	 ruleQualifier
{ after(grammarAccess.getQualifierRule()); } 
	 EOF 
;

// Rule Qualifier
ruleQualifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifierAccess().getAlternatives()); }
		(rule__Qualifier__Alternatives)
		{ after(grammarAccess.getQualifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField
entryRuleField
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccess().getGroup()); }
		(rule__Field__Group__0)
		{ after(grammarAccess.getFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndex
entryRuleIndex
:
{ before(grammarAccess.getIndexRule()); }
	 ruleIndex
{ after(grammarAccess.getIndexRule()); } 
	 EOF 
;

// Rule Index
ruleIndex 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndexAccess().getGroup()); }
		(rule__Index__Group__0)
		{ after(grammarAccess.getIndexAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArguments
entryRuleArguments
:
{ before(grammarAccess.getArgumentsRule()); }
	 ruleArguments
{ after(grammarAccess.getArgumentsRule()); } 
	 EOF 
;

// Rule Arguments
ruleArguments 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentsAccess().getArgumentsAssignment()); }
		(rule__Arguments__ArgumentsAssignment)
		{ after(grammarAccess.getArgumentsAccess().getArgumentsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModifier
entryRuleModifier
:
{ before(grammarAccess.getModifierRule()); }
	 ruleModifier
{ after(grammarAccess.getModifierRule()); } 
	 EOF 
;

// Rule Modifier
ruleModifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModifierAccess().getGroup()); }
		(rule__Modifier__Group__0)
		{ after(grammarAccess.getModifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvent
entryRuleEvent
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventAccess().getGroup()); }
		(rule__Event__Group__0)
		{ after(grammarAccess.getEventAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModifierInvocation
entryRuleModifierInvocation
:
{ before(grammarAccess.getModifierInvocationRule()); }
	 ruleModifierInvocation
{ after(grammarAccess.getModifierInvocationRule()); } 
	 EOF 
;

// Rule ModifierInvocation
ruleModifierInvocation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModifierInvocationAccess().getGroup()); }
		(rule__ModifierInvocation__Group__0)
		{ after(grammarAccess.getModifierInvocationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterList
entryRuleParameterList
:
{ before(grammarAccess.getParameterListRule()); }
	 ruleParameterList
{ after(grammarAccess.getParameterListRule()); } 
	 EOF 
;

// Rule ParameterList
ruleParameterList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterListAccess().getGroup()); }
		(rule__ParameterList__Group__0)
		{ after(grammarAccess.getParameterListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturnsParameterList
entryRuleReturnsParameterList
:
{ before(grammarAccess.getReturnsParameterListRule()); }
	 ruleReturnsParameterList
{ after(grammarAccess.getReturnsParameterListRule()); } 
	 EOF 
;

// Rule ReturnsParameterList
ruleReturnsParameterList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnsParameterListAccess().getGroup()); }
		(rule__ReturnsParameterList__Group__0)
		{ after(grammarAccess.getReturnsParameterListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturnParameterDeclaration
entryRuleReturnParameterDeclaration
:
{ before(grammarAccess.getReturnParameterDeclarationRule()); }
	 ruleReturnParameterDeclaration
{ after(grammarAccess.getReturnParameterDeclarationRule()); } 
	 EOF 
;

// Rule ReturnParameterDeclaration
ruleReturnParameterDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnParameterDeclarationAccess().getGroup()); }
		(rule__ReturnParameterDeclaration__Group__0)
		{ after(grammarAccess.getReturnParameterDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeleteStatement
entryRuleDeleteStatement
:
{ before(grammarAccess.getDeleteStatementRule()); }
	 ruleDeleteStatement
{ after(grammarAccess.getDeleteStatementRule()); } 
	 EOF 
;

// Rule DeleteStatement
ruleDeleteStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeleteStatementAccess().getGroup()); }
		(rule__DeleteStatement__Group__0)
		{ after(grammarAccess.getDeleteStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStatement
entryRuleIfStatement
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStatementAccess().getGroup()); }
		(rule__IfStatement__Group__0)
		{ after(grammarAccess.getIfStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileStatement
entryRuleWhileStatement
:
{ before(grammarAccess.getWhileStatementRule()); }
	 ruleWhileStatement
{ after(grammarAccess.getWhileStatementRule()); } 
	 EOF 
;

// Rule WhileStatement
ruleWhileStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileStatementAccess().getGroup()); }
		(rule__WhileStatement__Group__0)
		{ after(grammarAccess.getWhileStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForStatement
entryRuleForStatement
:
{ before(grammarAccess.getForStatementRule()); }
	 ruleForStatement
{ after(grammarAccess.getForStatementRule()); } 
	 EOF 
;

// Rule ForStatement
ruleForStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForStatementAccess().getGroup()); }
		(rule__ForStatement__Group__0)
		{ after(grammarAccess.getForStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBody
entryRuleBody
:
{ before(grammarAccess.getBodyRule()); }
	 ruleBody
{ after(grammarAccess.getBodyRule()); } 
	 EOF 
;

// Rule Body
ruleBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBodyAccess().getGroup()); }
		(rule__Body__Group__0)
		{ after(grammarAccess.getBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContinueStatement
entryRuleContinueStatement
:
{ before(grammarAccess.getContinueStatementRule()); }
	 ruleContinueStatement
{ after(grammarAccess.getContinueStatementRule()); } 
	 EOF 
;

// Rule ContinueStatement
ruleContinueStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContinueStatementAccess().getGroup()); }
		(rule__ContinueStatement__Group__0)
		{ after(grammarAccess.getContinueStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBreakStatement
entryRuleBreakStatement
:
{ before(grammarAccess.getBreakStatementRule()); }
	 ruleBreakStatement
{ after(grammarAccess.getBreakStatementRule()); } 
	 EOF 
;

// Rule BreakStatement
ruleBreakStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBreakStatementAccess().getGroup()); }
		(rule__BreakStatement__Group__0)
		{ after(grammarAccess.getBreakStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturnStatement
entryRuleReturnStatement
:
{ before(grammarAccess.getReturnStatementRule()); }
	 ruleReturnStatement
{ after(grammarAccess.getReturnStatementRule()); } 
	 EOF 
;

// Rule ReturnStatement
ruleReturnStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnStatementAccess().getGroup()); }
		(rule__ReturnStatement__Group__0)
		{ after(grammarAccess.getReturnStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThrowStatement
entryRuleThrowStatement
:
{ before(grammarAccess.getThrowStatementRule()); }
	 ruleThrowStatement
{ after(grammarAccess.getThrowStatementRule()); } 
	 EOF 
;

// Rule ThrowStatement
ruleThrowStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThrowStatementAccess().getGroup()); }
		(rule__ThrowStatement__Group__0)
		{ after(grammarAccess.getThrowStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlaceHolderStatement
entryRulePlaceHolderStatement
:
{ before(grammarAccess.getPlaceHolderStatementRule()); }
	 rulePlaceHolderStatement
{ after(grammarAccess.getPlaceHolderStatementRule()); } 
	 EOF 
;

// Rule PlaceHolderStatement
rulePlaceHolderStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlaceHolderStatementAccess().getGroup()); }
		(rule__PlaceHolderStatement__Group__0)
		{ after(grammarAccess.getPlaceHolderStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAssignmentParserRuleCall()); }
		ruleAssignment
		{ after(grammarAccess.getExpressionAccess().getAssignmentParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSpecialExpression
entryRuleSpecialExpression
:
{ before(grammarAccess.getSpecialExpressionRule()); }
	 ruleSpecialExpression
{ after(grammarAccess.getSpecialExpressionRule()); } 
	 EOF 
;

// Rule SpecialExpression
ruleSpecialExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpecialExpressionAccess().getGroup()); }
		(rule__SpecialExpression__Group__0)
		{ after(grammarAccess.getSpecialExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinaryExpression
entryRuleBinaryExpression
:
{ before(grammarAccess.getBinaryExpressionRule()); }
	 ruleBinaryExpression
{ after(grammarAccess.getBinaryExpressionRule()); } 
	 EOF 
;

// Rule BinaryExpression
ruleBinaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getOrParserRuleCall()); }
		ruleOr
		{ after(grammarAccess.getBinaryExpressionAccess().getOrParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOr
entryRuleOr
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrAccess().getGroup()); }
		(rule__Or__Group__0)
		{ after(grammarAccess.getOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquality
entryRuleEquality
:
{ before(grammarAccess.getEqualityRule()); }
	 ruleEquality
{ after(grammarAccess.getEqualityRule()); } 
	 EOF 
;

// Rule Equality
ruleEquality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityAccess().getGroup()); }
		(rule__Equality__Group__0)
		{ after(grammarAccess.getEqualityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparison
entryRuleComparison
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonAccess().getGroup()); }
		(rule__Comparison__Group__0)
		{ after(grammarAccess.getComparisonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBitOr
entryRuleBitOr
:
{ before(grammarAccess.getBitOrRule()); }
	 ruleBitOr
{ after(grammarAccess.getBitOrRule()); } 
	 EOF 
;

// Rule BitOr
ruleBitOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBitOrAccess().getGroup()); }
		(rule__BitOr__Group__0)
		{ after(grammarAccess.getBitOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBitXor
entryRuleBitXor
:
{ before(grammarAccess.getBitXorRule()); }
	 ruleBitXor
{ after(grammarAccess.getBitXorRule()); } 
	 EOF 
;

// Rule BitXor
ruleBitXor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBitXorAccess().getGroup()); }
		(rule__BitXor__Group__0)
		{ after(grammarAccess.getBitXorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBitAnd
entryRuleBitAnd
:
{ before(grammarAccess.getBitAndRule()); }
	 ruleBitAnd
{ after(grammarAccess.getBitAndRule()); } 
	 EOF 
;

// Rule BitAnd
ruleBitAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBitAndAccess().getGroup()); }
		(rule__BitAnd__Group__0)
		{ after(grammarAccess.getBitAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShift
entryRuleShift
:
{ before(grammarAccess.getShiftRule()); }
	 ruleShift
{ after(grammarAccess.getShiftRule()); } 
	 EOF 
;

// Rule Shift
ruleShift 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShiftAccess().getGroup()); }
		(rule__Shift__Group__0)
		{ after(grammarAccess.getShiftAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddSub
entryRuleAddSub
:
{ before(grammarAccess.getAddSubRule()); }
	 ruleAddSub
{ after(grammarAccess.getAddSubRule()); } 
	 EOF 
;

// Rule AddSub
ruleAddSub 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddSubAccess().getGroup()); }
		(rule__AddSub__Group__0)
		{ after(grammarAccess.getAddSubAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMulDivMod
entryRuleMulDivMod
:
{ before(grammarAccess.getMulDivModRule()); }
	 ruleMulDivMod
{ after(grammarAccess.getMulDivModRule()); } 
	 EOF 
;

// Rule MulDivMod
ruleMulDivMod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMulDivModAccess().getGroup()); }
		(rule__MulDivMod__Group__0)
		{ after(grammarAccess.getMulDivModAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExponent
entryRuleExponent
:
{ before(grammarAccess.getExponentRule()); }
	 ruleExponent
{ after(grammarAccess.getExponentRule()); } 
	 EOF 
;

// Rule Exponent
ruleExponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExponentAccess().getGroup()); }
		(rule__Exponent__Group__0)
		{ after(grammarAccess.getExponentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
		(rule__UnaryExpression__Alternatives)
		{ after(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNotExpression
entryRuleNotExpression
:
{ before(grammarAccess.getNotExpressionRule()); }
	 ruleNotExpression
{ after(grammarAccess.getNotExpressionRule()); } 
	 EOF 
;

// Rule NotExpression
ruleNotExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotExpressionAccess().getGroup()); }
		(rule__NotExpression__Group__0)
		{ after(grammarAccess.getNotExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinaryNotExpression
entryRuleBinaryNotExpression
:
{ before(grammarAccess.getBinaryNotExpressionRule()); }
	 ruleBinaryNotExpression
{ after(grammarAccess.getBinaryNotExpressionRule()); } 
	 EOF 
;

// Rule BinaryNotExpression
ruleBinaryNotExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryNotExpressionAccess().getGroup()); }
		(rule__BinaryNotExpression__Group__0)
		{ after(grammarAccess.getBinaryNotExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSignExpression
entryRuleSignExpression
:
{ before(grammarAccess.getSignExpressionRule()); }
	 ruleSignExpression
{ after(grammarAccess.getSignExpressionRule()); } 
	 EOF 
;

// Rule SignExpression
ruleSignExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignExpressionAccess().getGroup()); }
		(rule__SignExpression__Group__0)
		{ after(grammarAccess.getSignExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNewExpression
entryRuleNewExpression
:
{ before(grammarAccess.getNewExpressionRule()); }
	 ruleNewExpression
{ after(grammarAccess.getNewExpressionRule()); } 
	 EOF 
;

// Rule NewExpression
ruleNewExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNewExpressionAccess().getGroup()); }
		(rule__NewExpression__Group__0)
		{ after(grammarAccess.getNewExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePreExpression
entryRulePreExpression
:
{ before(grammarAccess.getPreExpressionRule()); }
	 rulePreExpression
{ after(grammarAccess.getPreExpressionRule()); } 
	 EOF 
;

// Rule PreExpression
rulePreExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPreExpressionAccess().getAlternatives()); }
		(rule__PreExpression__Alternatives)
		{ after(grammarAccess.getPreExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePostIncDecExpression
entryRulePostIncDecExpression
:
{ before(grammarAccess.getPostIncDecExpressionRule()); }
	 rulePostIncDecExpression
{ after(grammarAccess.getPostIncDecExpressionRule()); } 
	 EOF 
;

// Rule PostIncDecExpression
rulePostIncDecExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostIncDecExpressionAccess().getGroup()); }
		(rule__PostIncDecExpression__Group__0)
		{ after(grammarAccess.getPostIncDecExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
		(rule__PrimaryExpression__Alternatives)
		{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGasleftFunction
entryRuleGasleftFunction
:
{ before(grammarAccess.getGasleftFunctionRule()); }
	 ruleGasleftFunction
{ after(grammarAccess.getGasleftFunctionRule()); } 
	 EOF 
;

// Rule GasleftFunction
ruleGasleftFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGasleftFunctionAccess().getGroup()); }
		(rule__GasleftFunction__Group__0)
		{ after(grammarAccess.getGasleftFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanConst
entryRuleBooleanConst
:
{ before(grammarAccess.getBooleanConstRule()); }
	 ruleBooleanConst
{ after(grammarAccess.getBooleanConstRule()); } 
	 EOF 
;

// Rule BooleanConst
ruleBooleanConst 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanConstAccess().getValueAssignment()); }
		(rule__BooleanConst__ValueAssignment)
		{ after(grammarAccess.getBooleanConstAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumber
entryRuleNumber
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberAccess().getAlternatives()); }
		(rule__Number__Alternatives)
		{ after(grammarAccess.getNumberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumberDimensionless
entryRuleNumberDimensionless
:
{ before(grammarAccess.getNumberDimensionlessRule()); }
	 ruleNumberDimensionless
{ after(grammarAccess.getNumberDimensionlessRule()); } 
	 EOF 
;

// Rule NumberDimensionless
ruleNumberDimensionless 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberDimensionlessAccess().getValueAssignment()); }
		(rule__NumberDimensionless__ValueAssignment)
		{ after(grammarAccess.getNumberDimensionlessAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEther
entryRuleEther
:
{ before(grammarAccess.getEtherRule()); }
	 ruleEther
{ after(grammarAccess.getEtherRule()); } 
	 EOF 
;

// Rule Ether
ruleEther 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEtherAccess().getGroup()); }
		(rule__Ether__Group__0)
		{ after(grammarAccess.getEtherAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTime
entryRuleTime
:
{ before(grammarAccess.getTimeRule()); }
	 ruleTime
{ after(grammarAccess.getTimeRule()); } 
	 EOF 
;

// Rule Time
ruleTime 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeAccess().getGroup()); }
		(rule__Time__Group__0)
		{ after(grammarAccess.getTimeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
		(rule__StringLiteral__ValueAssignment)
		{ after(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHexLiteral
entryRuleHexLiteral
:
{ before(grammarAccess.getHexLiteralRule()); }
	 ruleHexLiteral
{ after(grammarAccess.getHexLiteralRule()); } 
	 EOF 
;

// Rule HexLiteral
ruleHexLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHexLiteralAccess().getValueAssignment()); }
		(rule__HexLiteral__ValueAssignment)
		{ after(grammarAccess.getHexLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDecimalLiteral
entryRuleDecimalLiteral
:
{ before(grammarAccess.getDecimalLiteralRule()); }
	 ruleDecimalLiteral
{ after(grammarAccess.getDecimalLiteralRule()); } 
	 EOF 
;

// Rule DecimalLiteral
ruleDecimalLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDecimalLiteralAccess().getValueAssignment()); }
		(rule__DecimalLiteral__ValueAssignment)
		{ after(grammarAccess.getDecimalLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeCast
entryRuleTypeCast
:
{ before(grammarAccess.getTypeCastRule()); }
	 ruleTypeCast
{ after(grammarAccess.getTypeCastRule()); } 
	 EOF 
;

// Rule TypeCast
ruleTypeCast 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeCastAccess().getGroup()); }
		(rule__TypeCast__Group__0)
		{ after(grammarAccess.getTypeCastAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNow
entryRuleNow
:
{ before(grammarAccess.getNowRule()); }
	 ruleNow
{ after(grammarAccess.getNowRule()); } 
	 EOF 
;

// Rule Now
ruleNow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNowAccess().getGroup()); }
		(rule__Now__Group__0)
		{ after(grammarAccess.getNowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSpecialVariables
entryRuleSpecialVariables
:
{ before(grammarAccess.getSpecialVariablesRule()); }
	 ruleSpecialVariables
{ after(grammarAccess.getSpecialVariablesRule()); } 
	 EOF 
;

// Rule SpecialVariables
ruleSpecialVariables 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpecialVariablesAccess().getGroup()); }
		(rule__SpecialVariables__Group__0)
		{ after(grammarAccess.getSpecialVariablesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSpecialVariablesTypeEnum
entryRuleSpecialVariablesTypeEnum
:
{ before(grammarAccess.getSpecialVariablesTypeEnumRule()); }
	 ruleSpecialVariablesTypeEnum
{ after(grammarAccess.getSpecialVariablesTypeEnumRule()); } 
	 EOF 
;

// Rule SpecialVariablesTypeEnum
ruleSpecialVariablesTypeEnum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpecialVariablesTypeEnumAccess().getNameAssignment()); }
		(rule__SpecialVariablesTypeEnum__NameAssignment)
		{ after(grammarAccess.getSpecialVariablesTypeEnumAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ElementaryTypeNameEnum
ruleElementaryTypeNameEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getAlternatives()); }
		(rule__ElementaryTypeNameEnum__Alternatives)
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule LocationSpecifierEnum
ruleLocationSpecifierEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocationSpecifierEnumAccess().getAlternatives()); }
		(rule__LocationSpecifierEnum__Alternatives)
		{ after(grammarAccess.getLocationSpecifierEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule VisibilityEnum
ruleVisibilityEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisibilityEnumAccess().getAlternatives()); }
		(rule__VisibilityEnum__Alternatives)
		{ after(grammarAccess.getVisibilityEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AssignmentOpEnum
ruleAssignmentOpEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentOpEnumAccess().getAlternatives()); }
		(rule__AssignmentOpEnum__Alternatives)
		{ after(grammarAccess.getAssignmentOpEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule EqualityOpEnum
ruleEqualityOpEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityOpEnumAccess().getAlternatives()); }
		(rule__EqualityOpEnum__Alternatives)
		{ after(grammarAccess.getEqualityOpEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ComparisonOpEnum
ruleComparisonOpEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonOpEnumAccess().getAlternatives()); }
		(rule__ComparisonOpEnum__Alternatives)
		{ after(grammarAccess.getComparisonOpEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ShiftOpEnum
ruleShiftOpEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShiftOpEnumAccess().getAlternatives()); }
		(rule__ShiftOpEnum__Alternatives)
		{ after(grammarAccess.getShiftOpEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AdditionOpEnum
ruleAdditionOpEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionOpEnumAccess().getAlternatives()); }
		(rule__AdditionOpEnum__Alternatives)
		{ after(grammarAccess.getAdditionOpEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule MulDivModOpEnum
ruleMulDivModOpEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulDivModOpEnumAccess().getAlternatives()); }
		(rule__MulDivModOpEnum__Alternatives)
		{ after(grammarAccess.getMulDivModOpEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule IncDecOpEnum
ruleIncDecOpEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncDecOpEnumAccess().getAlternatives()); }
		(rule__IncDecOpEnum__Alternatives)
		{ after(grammarAccess.getIncDecOpEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BooleanLiteralEnum
ruleBooleanLiteralEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralEnumAccess().getAlternatives()); }
		(rule__BooleanLiteralEnum__Alternatives)
		{ after(grammarAccess.getBooleanLiteralEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule EtherSubDenominationEnum
ruleEtherSubDenominationEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEtherSubDenominationEnumAccess().getAlternatives()); }
		(rule__EtherSubDenominationEnum__Alternatives)
		{ after(grammarAccess.getEtherSubDenominationEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TimeSubdenominationEnum
ruleTimeSubdenominationEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeSubdenominationEnumAccess().getAlternatives()); }
		(rule__TimeSubdenominationEnum__Alternatives)
		{ after(grammarAccess.getTimeSubdenominationEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule SpecialExpressionTypeEnum
ruleSpecialExpressionTypeEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecialExpressionTypeEnumAccess().getAlternatives()); }
		(rule__SpecialExpressionTypeEnum__Alternatives)
		{ after(grammarAccess.getSpecialExpressionTypeEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Solidity__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSolidityAccess().getImportDirectiveAssignment_0()); }
		(rule__Solidity__ImportDirectiveAssignment_0)
		{ after(grammarAccess.getSolidityAccess().getImportDirectiveAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSolidityAccess().getContractAssignment_1()); }
		(rule__Solidity__ContractAssignment_1)
		{ after(grammarAccess.getSolidityAccess().getContractAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getSolidityAccess().getLibraryAssignment_2()); }
		(rule__Solidity__LibraryAssignment_2)
		{ after(grammarAccess.getSolidityAccess().getLibraryAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDirectiveAccess().getGroup_0()); }
		(rule__ImportDirective__Group_0__0)
		{ after(grammarAccess.getImportDirectiveAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportDirectiveAccess().getGroup_1()); }
		(rule__ImportDirective__Group_1__0)
		{ after(grammarAccess.getImportDirectiveAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getImportDirectiveAccess().getGroup_2()); }
		(rule__ImportDirective__Group_2__0)
		{ after(grammarAccess.getImportDirectiveAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionBodyAccess().getFunctionsAssignment_2_0()); }
		(rule__DefinitionBody__FunctionsAssignment_2_0)
		{ after(grammarAccess.getDefinitionBodyAccess().getFunctionsAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionBodyAccess().getStructsAssignment_2_1()); }
		(rule__DefinitionBody__StructsAssignment_2_1)
		{ after(grammarAccess.getDefinitionBodyAccess().getStructsAssignment_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionBodyAccess().getEnumsAssignment_2_2()); }
		(rule__DefinitionBody__EnumsAssignment_2_2)
		{ after(grammarAccess.getDefinitionBodyAccess().getEnumsAssignment_2_2()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionBodyAccess().getGroup_2_3()); }
		(rule__DefinitionBody__Group_2_3__0)
		{ after(grammarAccess.getDefinitionBodyAccess().getGroup_2_3()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionBodyAccess().getModifiersAssignment_2_4()); }
		(rule__DefinitionBody__ModifiersAssignment_2_4)
		{ after(grammarAccess.getDefinitionBodyAccess().getModifiersAssignment_2_4()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionBodyAccess().getEventsAssignment_2_5()); }
		(rule__DefinitionBody__EventsAssignment_2_5)
		{ after(grammarAccess.getDefinitionBodyAccess().getEventsAssignment_2_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallArgumentsAccess().getGroup_0()); }
		(rule__FunctionCallArguments__Group_0__0)
		{ after(grammarAccess.getFunctionCallArgumentsAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionCallArgumentsAccess().getFunctionCallListArgumentsParserRuleCall_1()); }
		ruleFunctionCallListArguments
		{ after(grammarAccess.getFunctionCallArgumentsAccess().getFunctionCallListArgumentsParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Alternatives_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getBlockAssignment_7_0()); }
		(rule__FunctionDefinition__BlockAssignment_7_0)
		{ after(grammarAccess.getFunctionDefinitionAccess().getBlockAssignment_7_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getSemicolonKeyword_7_1()); }
		';'
		{ after(grammarAccess.getFunctionDefinitionAccess().getSemicolonKeyword_7_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinitionOptionalElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionOptionalElementAccess().getConstParserRuleCall_0()); }
		ruleConst
		{ after(grammarAccess.getFunctionDefinitionOptionalElementAccess().getConstParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionDefinitionOptionalElementAccess().getModifierInvocationParserRuleCall_1()); }
		ruleModifierInvocation
		{ after(grammarAccess.getFunctionDefinitionOptionalElementAccess().getModifierInvocationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionDefinitionOptionalElementAccess().getVisibilitySpecifierParserRuleCall_2()); }
		ruleVisibilitySpecifier
		{ after(grammarAccess.getFunctionDefinitionOptionalElementAccess().getVisibilitySpecifierParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getStandardVariableDeclarationParserRuleCall_0()); }
		ruleStandardVariableDeclaration
		{ after(grammarAccess.getVariableDeclarationAccess().getStandardVariableDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getVarVariableDeclarationParserRuleCall_1()); }
		ruleVarVariableDeclaration
		{ after(grammarAccess.getVariableDeclarationAccess().getVarVariableDeclarationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getVarVariableTupleVariableDeclarationParserRuleCall_2()); }
		ruleVarVariableTupleVariableDeclaration
		{ after(grammarAccess.getVariableDeclarationAccess().getVarVariableTupleVariableDeclarationParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationOptionalElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationOptionalElementAccess().getVisibilitySpecifierParserRuleCall_0()); }
		ruleVisibilitySpecifier
		{ after(grammarAccess.getVariableDeclarationOptionalElementAccess().getVisibilitySpecifierParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationOptionalElementAccess().getIndexedSpeciferParserRuleCall_1()); }
		ruleIndexedSpecifer
		{ after(grammarAccess.getVariableDeclarationOptionalElementAccess().getIndexedSpeciferParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationOptionalElementAccess().getConstantSpecifierParserRuleCall_2()); }
		ruleConstantSpecifier
		{ after(grammarAccess.getVariableDeclarationOptionalElementAccess().getConstantSpecifierParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationOptionalElementAccess().getLocationSpecifierParserRuleCall_3()); }
		ruleLocationSpecifier
		{ after(grammarAccess.getVariableDeclarationOptionalElementAccess().getLocationSpecifierParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getStandardTypeParserRuleCall_0()); }
		ruleStandardType
		{ after(grammarAccess.getTypeAccess().getStandardTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getIsVarTypeAssignment_1()); }
		(rule__Type__IsVarTypeAssignment_1)
		{ after(grammarAccess.getTypeAccess().getIsVarTypeAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardTypeAccess().getGroup_0()); }
		(rule__StandardType__Group_0__0)
		{ after(grammarAccess.getStandardTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStandardTypeAccess().getMappingParserRuleCall_1()); }
		ruleMapping
		{ after(grammarAccess.getStandardTypeAccess().getMappingParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStandardTypeAccess().getQualifiedIdentifierParserRuleCall_2()); }
		ruleQualifiedIdentifier
		{ after(grammarAccess.getStandardTypeAccess().getQualifiedIdentifierParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardTypeWithoutQualifiedIdentifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getGroup_0()); }
		(rule__StandardTypeWithoutQualifiedIdentifier__Group_0__0)
		{ after(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getMappingParserRuleCall_1()); }
		ruleMapping
		{ after(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getMappingParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatementAccess().getGroup_0_0()); }
		(rule__SimpleStatement__Group_0_0__0)
		{ after(grammarAccess.getSimpleStatementAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStatementAccess().getGroup_0_1()); }
		(rule__SimpleStatement__Group_0_1__0)
		{ after(grammarAccess.getSimpleStatementAccess().getGroup_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStatementAccess().getExpressionStatementParserRuleCall_0_2()); }
		ruleExpressionStatement
		{ after(grammarAccess.getSimpleStatementAccess().getExpressionStatementParserRuleCall_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Alternatives_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatementAccess().getGroup_0_1_1_0()); }
		(rule__SimpleStatement__Group_0_1_1_0__0)
		{ after(grammarAccess.getSimpleStatementAccess().getGroup_0_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStatementAccess().getGroup_0_1_1_1()); }
		(rule__SimpleStatement__Group_0_1_1_1__0)
		{ after(grammarAccess.getSimpleStatementAccess().getGroup_0_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatement2Access().getGroup_0()); }
		(rule__SimpleStatement2__Group_0__0)
		{ after(grammarAccess.getSimpleStatement2Access().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStatement2Access().getGroup_1()); }
		(rule__SimpleStatement2__Group_1__0)
		{ after(grammarAccess.getSimpleStatement2Access().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStatement2Access().getExpressionStatementParserRuleCall_2()); }
		ruleExpressionStatement
		{ after(grammarAccess.getSimpleStatement2Access().getExpressionStatementParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatement2Access().getGroup_1_1_0()); }
		(rule__SimpleStatement2__Group_1_1_0__0)
		{ after(grammarAccess.getSimpleStatement2Access().getGroup_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStatement2Access().getGroup_1_1_1()); }
		(rule__SimpleStatement2__Group_1_1_1__0)
		{ after(grammarAccess.getSimpleStatement2Access().getGroup_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifierAccess().getFieldParserRuleCall_0()); }
		ruleField
		{ after(grammarAccess.getQualifierAccess().getFieldParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getQualifierAccess().getIndexParserRuleCall_1()); }
		ruleIndex
		{ after(grammarAccess.getQualifierAccess().getIndexParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getQualifierAccess().getArgumentsParserRuleCall_2()); }
		ruleArguments
		{ after(grammarAccess.getQualifierAccess().getArgumentsParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_0()); }
		ruleIfStatement
		{ after(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_1()); }
		ruleWhileStatement
		{ after(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getForStatementParserRuleCall_2()); }
		ruleForStatement
		{ after(grammarAccess.getStatementAccess().getForStatementParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getBodyParserRuleCall_3()); }
		ruleBody
		{ after(grammarAccess.getStatementAccess().getBodyParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getPlaceHolderStatementParserRuleCall_4()); }
		rulePlaceHolderStatement
		{ after(grammarAccess.getStatementAccess().getPlaceHolderStatementParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives_5()); }
		(rule__Statement__Alternatives_5)
		{ after(grammarAccess.getStatementAccess().getAlternatives_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getContinueStatementParserRuleCall_5_0()); }
		ruleContinueStatement
		{ after(grammarAccess.getStatementAccess().getContinueStatementParserRuleCall_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getBreakStatementParserRuleCall_5_1()); }
		ruleBreakStatement
		{ after(grammarAccess.getStatementAccess().getBreakStatementParserRuleCall_5_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_5_2()); }
		ruleReturnStatement
		{ after(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_5_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getThrowStatementParserRuleCall_5_3()); }
		ruleThrowStatement
		{ after(grammarAccess.getStatementAccess().getThrowStatementParserRuleCall_5_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDeleteStatementParserRuleCall_5_4()); }
		ruleDeleteStatement
		{ after(grammarAccess.getStatementAccess().getDeleteStatementParserRuleCall_5_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSimpleStatementParserRuleCall_5_5()); }
		ruleSimpleStatement
		{ after(grammarAccess.getStatementAccess().getSimpleStatementParserRuleCall_5_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialExpression__QualifiersAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecialExpressionAccess().getQualifiersIndexParserRuleCall_2_0_0()); }
		ruleIndex
		{ after(grammarAccess.getSpecialExpressionAccess().getQualifiersIndexParserRuleCall_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSpecialExpressionAccess().getQualifiersArgumentsParserRuleCall_2_0_1()); }
		ruleArguments
		{ after(grammarAccess.getSpecialExpressionAccess().getQualifiersArgumentsParserRuleCall_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup_1_0()); }
		(rule__Assignment__Group_1_0__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup_1_1()); }
		(rule__Assignment__Group_1_1__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getNotExpressionParserRuleCall_0()); }
		ruleNotExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getNotExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getBinaryNotExpressionParserRuleCall_1()); }
		ruleBinaryNotExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getBinaryNotExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getSignExpressionParserRuleCall_2()); }
		ruleSignExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getSignExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getNewExpressionParserRuleCall_3()); }
		ruleNewExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getNewExpressionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getPreExpressionParserRuleCall_4()); }
		rulePreExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getPreExpressionParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SignExpression__SignOpAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignExpressionAccess().getSignOpPlusSignKeyword_0_0_0()); }
		'+'
		{ after(grammarAccess.getSignExpressionAccess().getSignOpPlusSignKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSignExpressionAccess().getSignOpHyphenMinusKeyword_0_0_1()); }
		'-'
		{ after(grammarAccess.getSignExpressionAccess().getSignOpHyphenMinusKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreExpressionAccess().getPostIncDecExpressionParserRuleCall_0()); }
		rulePostIncDecExpression
		{ after(grammarAccess.getPreExpressionAccess().getPostIncDecExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPreExpressionAccess().getGroup_1()); }
		(rule__PreExpression__Group_1__0)
		{ after(grammarAccess.getPreExpressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPreExpressionAccess().getGroup_2()); }
		(rule__PreExpression__Group_2__0)
		{ after(grammarAccess.getPreExpressionAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getSpecialExpressionParserRuleCall_0()); }
		ruleSpecialExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getSpecialExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getQualifiedIdentifierParserRuleCall_1()); }
		ruleQualifiedIdentifier
		{ after(grammarAccess.getPrimaryExpressionAccess().getQualifiedIdentifierParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_2()); }
		ruleLiteral
		{ after(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getTypeCastParserRuleCall_3()); }
		ruleTypeCast
		{ after(grammarAccess.getPrimaryExpressionAccess().getTypeCastParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_4()); }
		(rule__PrimaryExpression__Group_4__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_5()); }
		(rule__PrimaryExpression__Group_5__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_6()); }
		(rule__PrimaryExpression__Group_6__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getSpecialVariablesParserRuleCall_0()); }
		ruleSpecialVariables
		{ after(grammarAccess.getLiteralAccess().getSpecialVariablesParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getBooleanConstParserRuleCall_1()); }
		ruleBooleanConst
		{ after(grammarAccess.getLiteralAccess().getBooleanConstParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getNumberParserRuleCall_2()); }
		ruleNumber
		{ after(grammarAccess.getLiteralAccess().getNumberParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_3()); }
		ruleStringLiteral
		{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getGasleftFunctionParserRuleCall_4()); }
		ruleGasleftFunction
		{ after(grammarAccess.getLiteralAccess().getGasleftFunctionParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getNumberDimensionlessParserRuleCall_0()); }
		ruleNumberDimensionless
		{ after(grammarAccess.getNumberAccess().getNumberDimensionlessParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumberAccess().getEtherParserRuleCall_1()); }
		ruleEther
		{ after(grammarAccess.getNumberAccess().getEtherParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getNumberAccess().getTimeParserRuleCall_2()); }
		ruleTime
		{ after(grammarAccess.getNumberAccess().getTimeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getNumberAccess().getNowParserRuleCall_3()); }
		ruleNow
		{ after(grammarAccess.getNumberAccess().getNowParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getNumberAccess().getHexLiteralParserRuleCall_4()); }
		ruleHexLiteral
		{ after(grammarAccess.getNumberAccess().getHexLiteralParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getNumberAccess().getDecimalLiteralParserRuleCall_5()); }
		ruleDecimalLiteral
		{ after(grammarAccess.getNumberAccess().getDecimalLiteralParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialVariablesTypeEnum__NameAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecialVariablesTypeEnumAccess().getNameBLOCKTerminalRuleCall_0_0()); }
		RULE_BLOCK
		{ after(grammarAccess.getSpecialVariablesTypeEnumAccess().getNameBLOCKTerminalRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSpecialVariablesTypeEnumAccess().getNameMSGTerminalRuleCall_0_1()); }
		RULE_MSG
		{ after(grammarAccess.getSpecialVariablesTypeEnumAccess().getNameMSGTerminalRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getSpecialVariablesTypeEnumAccess().getNameTXTerminalRuleCall_0_2()); }
		RULE_TX
		{ after(grammarAccess.getSpecialVariablesTypeEnumAccess().getNameTXTerminalRuleCall_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementaryTypeNameEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINTEnumLiteralDeclaration_0()); }
		('int')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT16EnumLiteralDeclaration_1()); }
		('int16')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT16EnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT24EnumLiteralDeclaration_2()); }
		('int24')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT24EnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT32EnumLiteralDeclaration_3()); }
		('int32')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT32EnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT40EnumLiteralDeclaration_4()); }
		('int40')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT40EnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT48EnumLiteralDeclaration_5()); }
		('int48')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT48EnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT56EnumLiteralDeclaration_6()); }
		('int56')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT56EnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT64EnumLiteralDeclaration_7()); }
		('int64')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT64EnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT72EnumLiteralDeclaration_8()); }
		('int72')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT72EnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT80EnumLiteralDeclaration_9()); }
		('int80')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT80EnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT88EnumLiteralDeclaration_10()); }
		('int88')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT88EnumLiteralDeclaration_10()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT96EnumLiteralDeclaration_11()); }
		('int96')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT96EnumLiteralDeclaration_11()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT104EnumLiteralDeclaration_12()); }
		('int104')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT104EnumLiteralDeclaration_12()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT112EnumLiteralDeclaration_13()); }
		('int112')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT112EnumLiteralDeclaration_13()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT120EnumLiteralDeclaration_14()); }
		('int120')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT120EnumLiteralDeclaration_14()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT128EnumLiteralDeclaration_15()); }
		('int128')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT128EnumLiteralDeclaration_15()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT136EnumLiteralDeclaration_16()); }
		('int136')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT136EnumLiteralDeclaration_16()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT144EnumLiteralDeclaration_17()); }
		('int144')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT144EnumLiteralDeclaration_17()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT152EnumLiteralDeclaration_18()); }
		('int152')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT152EnumLiteralDeclaration_18()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT160EnumLiteralDeclaration_19()); }
		('int160')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT160EnumLiteralDeclaration_19()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT168EnumLiteralDeclaration_20()); }
		('int168')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT168EnumLiteralDeclaration_20()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT178EnumLiteralDeclaration_21()); }
		('int178')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT178EnumLiteralDeclaration_21()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT184EnumLiteralDeclaration_22()); }
		('int184')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT184EnumLiteralDeclaration_22()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT192EnumLiteralDeclaration_23()); }
		('int192')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT192EnumLiteralDeclaration_23()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT200EnumLiteralDeclaration_24()); }
		('int200')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT200EnumLiteralDeclaration_24()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT208EnumLiteralDeclaration_25()); }
		('int208')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT208EnumLiteralDeclaration_25()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT216EnumLiteralDeclaration_26()); }
		('int216')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT216EnumLiteralDeclaration_26()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT224EnumLiteralDeclaration_27()); }
		('int224')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT224EnumLiteralDeclaration_27()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT232EnumLiteralDeclaration_28()); }
		('int232')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT232EnumLiteralDeclaration_28()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT240EnumLiteralDeclaration_29()); }
		('int240')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT240EnumLiteralDeclaration_29()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT248EnumLiteralDeclaration_30()); }
		('int248')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT248EnumLiteralDeclaration_30()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getINT256EnumLiteralDeclaration_31()); }
		('int256')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getINT256EnumLiteralDeclaration_31()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINTEnumLiteralDeclaration_32()); }
		('uint')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINTEnumLiteralDeclaration_32()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT8EnumLiteralDeclaration_33()); }
		('uint8')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT8EnumLiteralDeclaration_33()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT16EnumLiteralDeclaration_34()); }
		('uint16')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT16EnumLiteralDeclaration_34()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUNIT24EnumLiteralDeclaration_35()); }
		('uint24')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUNIT24EnumLiteralDeclaration_35()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT32EnumLiteralDeclaration_36()); }
		('uint32')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT32EnumLiteralDeclaration_36()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT40EnumLiteralDeclaration_37()); }
		('uint40')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT40EnumLiteralDeclaration_37()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT48EnumLiteralDeclaration_38()); }
		('uint48')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT48EnumLiteralDeclaration_38()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUNIT56EnumLiteralDeclaration_39()); }
		('uint56')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUNIT56EnumLiteralDeclaration_39()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT64EnumLiteralDeclaration_40()); }
		('uint64')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT64EnumLiteralDeclaration_40()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT72EnumLiteralDeclaration_41()); }
		('uint72')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT72EnumLiteralDeclaration_41()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT80EnumLiteralDeclaration_42()); }
		('uint80')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT80EnumLiteralDeclaration_42()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT88EnumLiteralDeclaration_43()); }
		('uint88')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT88EnumLiteralDeclaration_43()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT96EnumLiteralDeclaration_44()); }
		('uint96')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT96EnumLiteralDeclaration_44()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT104EnumLiteralDeclaration_45()); }
		('uint104')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT104EnumLiteralDeclaration_45()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT112EnumLiteralDeclaration_46()); }
		('uint112')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT112EnumLiteralDeclaration_46()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT120EnumLiteralDeclaration_47()); }
		('uint120')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT120EnumLiteralDeclaration_47()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT128EnumLiteralDeclaration_48()); }
		('uint128')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT128EnumLiteralDeclaration_48()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT136EnumLiteralDeclaration_49()); }
		('uint136')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT136EnumLiteralDeclaration_49()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT144EnumLiteralDeclaration_50()); }
		('uint144')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT144EnumLiteralDeclaration_50()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT152EnumLiteralDeclaration_51()); }
		('uint152')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT152EnumLiteralDeclaration_51()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT160EnumLiteralDeclaration_52()); }
		('uint160')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT160EnumLiteralDeclaration_52()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT168EnumLiteralDeclaration_53()); }
		('uint168')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT168EnumLiteralDeclaration_53()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT178EnumLiteralDeclaration_54()); }
		('uint178')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT178EnumLiteralDeclaration_54()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT184EnumLiteralDeclaration_55()); }
		('uint184')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT184EnumLiteralDeclaration_55()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT192EnumLiteralDeclaration_56()); }
		('uint192')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT192EnumLiteralDeclaration_56()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT200EnumLiteralDeclaration_57()); }
		('uint200')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT200EnumLiteralDeclaration_57()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT208EnumLiteralDeclaration_58()); }
		('uint208')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT208EnumLiteralDeclaration_58()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT216EnumLiteralDeclaration_59()); }
		('uint216')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT216EnumLiteralDeclaration_59()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT244EnumLiteralDeclaration_60()); }
		('uint224')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT244EnumLiteralDeclaration_60()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT232EnumLiteralDeclaration_61()); }
		('uint232')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT232EnumLiteralDeclaration_61()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT240EnumLiteralDeclaration_62()); }
		('uint240')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT240EnumLiteralDeclaration_62()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT248EnumLiteralDeclaration_63()); }
		('uint248')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT248EnumLiteralDeclaration_63()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUINT256EnumLiteralDeclaration_64()); }
		('uint256')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUINT256EnumLiteralDeclaration_64()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTEEnumLiteralDeclaration_65()); }
		('byte')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTEEnumLiteralDeclaration_65()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTESEnumLiteralDeclaration_66()); }
		('bytes')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTESEnumLiteralDeclaration_66()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES1EnumLiteralDeclaration_67()); }
		('bytes1')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES1EnumLiteralDeclaration_67()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES2EnumLiteralDeclaration_68()); }
		('bytes2')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES2EnumLiteralDeclaration_68()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES3EnumLiteralDeclaration_69()); }
		('bytes3')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES3EnumLiteralDeclaration_69()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES4EnumLiteralDeclaration_70()); }
		('bytes4')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES4EnumLiteralDeclaration_70()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES5EnumLiteralDeclaration_71()); }
		('bytes5')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES5EnumLiteralDeclaration_71()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES6EnumLiteralDeclaration_72()); }
		('bytes6')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES6EnumLiteralDeclaration_72()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES7EnumLiteralDeclaration_73()); }
		('bytes7')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES7EnumLiteralDeclaration_73()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES8EnumLiteralDeclaration_74()); }
		('bytes8')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES8EnumLiteralDeclaration_74()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES9EnumLiteralDeclaration_75()); }
		('bytes9')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES9EnumLiteralDeclaration_75()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES10EnumLiteralDeclaration_76()); }
		('bytes10')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES10EnumLiteralDeclaration_76()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES11EnumLiteralDeclaration_77()); }
		('bytes11')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES11EnumLiteralDeclaration_77()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES12EnumLiteralDeclaration_78()); }
		('bytes12')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES12EnumLiteralDeclaration_78()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES13EnumLiteralDeclaration_79()); }
		('bytes13')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES13EnumLiteralDeclaration_79()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES14EnumLiteralDeclaration_80()); }
		('bytes14')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES14EnumLiteralDeclaration_80()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES15EnumLiteralDeclaration_81()); }
		('bytes15')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES15EnumLiteralDeclaration_81()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES16EnumLiteralDeclaration_82()); }
		('bytes16')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES16EnumLiteralDeclaration_82()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES17EnumLiteralDeclaration_83()); }
		('bytes17')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES17EnumLiteralDeclaration_83()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES18EnumLiteralDeclaration_84()); }
		('bytes18')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES18EnumLiteralDeclaration_84()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES19EnumLiteralDeclaration_85()); }
		('bytes19')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES19EnumLiteralDeclaration_85()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES20EnumLiteralDeclaration_86()); }
		('bytes20')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES20EnumLiteralDeclaration_86()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES21EnumLiteralDeclaration_87()); }
		('bytes21')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES21EnumLiteralDeclaration_87()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES22EnumLiteralDeclaration_88()); }
		('bytes22')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES22EnumLiteralDeclaration_88()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES23EnumLiteralDeclaration_89()); }
		('bytes23')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES23EnumLiteralDeclaration_89()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES24EnumLiteralDeclaration_90()); }
		('bytes24')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES24EnumLiteralDeclaration_90()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES25EnumLiteralDeclaration_91()); }
		('bytes25')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES25EnumLiteralDeclaration_91()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES26EnumLiteralDeclaration_92()); }
		('bytes26')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES26EnumLiteralDeclaration_92()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES27EnumLiteralDeclaration_93()); }
		('bytes27')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES27EnumLiteralDeclaration_93()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES28EnumLiteralDeclaration_94()); }
		('bytes28')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES28EnumLiteralDeclaration_94()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES29EnumLiteralDeclaration_95()); }
		('bytes29')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES29EnumLiteralDeclaration_95()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES30EnumLiteralDeclaration_96()); }
		('bytes30')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES30EnumLiteralDeclaration_96()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES31EnumLiteralDeclaration_97()); }
		('bytes31')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES31EnumLiteralDeclaration_97()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES32EnumLiteralDeclaration_98()); }
		('bytes32')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBYTES32EnumLiteralDeclaration_98()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getSTRINGEnumLiteralDeclaration_99()); }
		('string')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getSTRINGEnumLiteralDeclaration_99()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getADDRESSEnumLiteralDeclaration_100()); }
		('address')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getADDRESSEnumLiteralDeclaration_100()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getBOOLEnumLiteralDeclaration_101()); }
		('bool')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getBOOLEnumLiteralDeclaration_101()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getREALEnumLiteralDeclaration_102()); }
		('real')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getREALEnumLiteralDeclaration_102()); }
	)
	|
	(
		{ before(grammarAccess.getElementaryTypeNameEnumAccess().getUREALEnumLiteralDeclaration_103()); }
		('ureal')
		{ after(grammarAccess.getElementaryTypeNameEnumAccess().getUREALEnumLiteralDeclaration_103()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationSpecifierEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocationSpecifierEnumAccess().getMEMORYEnumLiteralDeclaration_0()); }
		('memory')
		{ after(grammarAccess.getLocationSpecifierEnumAccess().getMEMORYEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getLocationSpecifierEnumAccess().getSTORAGEEnumLiteralDeclaration_1()); }
		('storage')
		{ after(grammarAccess.getLocationSpecifierEnumAccess().getSTORAGEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getLocationSpecifierEnumAccess().getCALLDATAEnumLiteralDeclaration_2()); }
		('calldata')
		{ after(grammarAccess.getLocationSpecifierEnumAccess().getCALLDATAEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VisibilityEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisibilityEnumAccess().getPUBLICEnumLiteralDeclaration_0()); }
		('public')
		{ after(grammarAccess.getVisibilityEnumAccess().getPUBLICEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getVisibilityEnumAccess().getINTERNALEnumLiteralDeclaration_1()); }
		('internal')
		{ after(grammarAccess.getVisibilityEnumAccess().getINTERNALEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getVisibilityEnumAccess().getPRIVATEEnumLiteralDeclaration_2()); }
		('private')
		{ after(grammarAccess.getVisibilityEnumAccess().getPRIVATEEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getVisibilityEnumAccess().getEXTERNALEnumLiteralDeclaration_3()); }
		('external')
		{ after(grammarAccess.getVisibilityEnumAccess().getEXTERNALEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOpEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentOpEnumAccess().getASSIGNEnumLiteralDeclaration_0()); }
		('=')
		{ after(grammarAccess.getAssignmentOpEnumAccess().getASSIGNEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentOpEnumAccess().getASSIGN_OREnumLiteralDeclaration_1()); }
		('|=')
		{ after(grammarAccess.getAssignmentOpEnumAccess().getASSIGN_OREnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentOpEnumAccess().getASSIGN_XOREnumLiteralDeclaration_2()); }
		('^=')
		{ after(grammarAccess.getAssignmentOpEnumAccess().getASSIGN_XOREnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentOpEnumAccess().getASSIGN_ANDEnumLiteralDeclaration_3()); }
		('&=')
		{ after(grammarAccess.getAssignmentOpEnumAccess().getASSIGN_ANDEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentOpEnumAccess().getASSIGN_SHIFT_LEFTEnumLiteralDeclaration_4()); }
		('<<=')
		{ after(grammarAccess.getAssignmentOpEnumAccess().getASSIGN_SHIFT_LEFTEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentOpEnumAccess().getASSIGN_SHIFT_RIGHTEnumLiteralDeclaration_5()); }
		('>>=')
		{ after(grammarAccess.getAssignmentOpEnumAccess().getASSIGN_SHIFT_RIGHTEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentOpEnumAccess().getASSIGN_SHIFT_RIGHT_ARIMETICEnumLiteralDeclaration_6()); }
		('>>>=')
		{ after(grammarAccess.getAssignmentOpEnumAccess().getASSIGN_SHIFT_RIGHT_ARIMETICEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentOpEnumAccess().getASSIGN_ADDEnumLiteralDeclaration_7()); }
		('+=')
		{ after(grammarAccess.getAssignmentOpEnumAccess().getASSIGN_ADDEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentOpEnumAccess().getASSIGN_SUBEnumLiteralDeclaration_8()); }
		('-=')
		{ after(grammarAccess.getAssignmentOpEnumAccess().getASSIGN_SUBEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentOpEnumAccess().getASSIGN_MULTEnumLiteralDeclaration_9()); }
		('*=')
		{ after(grammarAccess.getAssignmentOpEnumAccess().getASSIGN_MULTEnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentOpEnumAccess().getASSIGN_DIVEnumLiteralDeclaration_10()); }
		('/=')
		{ after(grammarAccess.getAssignmentOpEnumAccess().getASSIGN_DIVEnumLiteralDeclaration_10()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentOpEnumAccess().getASSIGN_MODEnumLiteralDeclaration_11()); }
		('%=')
		{ after(grammarAccess.getAssignmentOpEnumAccess().getASSIGN_MODEnumLiteralDeclaration_11()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityOpEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityOpEnumAccess().getEQEnumLiteralDeclaration_0()); }
		('==')
		{ after(grammarAccess.getEqualityOpEnumAccess().getEQEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityOpEnumAccess().getNOTEQEnumLiteralDeclaration_1()); }
		('!=')
		{ after(grammarAccess.getEqualityOpEnumAccess().getNOTEQEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOpEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonOpEnumAccess().getLTEnumLiteralDeclaration_0()); }
		('<')
		{ after(grammarAccess.getComparisonOpEnumAccess().getLTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOpEnumAccess().getGTEnumLiteralDeclaration_1()); }
		('>')
		{ after(grammarAccess.getComparisonOpEnumAccess().getGTEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOpEnumAccess().getLTEEnumLiteralDeclaration_2()); }
		('<=')
		{ after(grammarAccess.getComparisonOpEnumAccess().getLTEEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOpEnumAccess().getGTEEnumLiteralDeclaration_3()); }
		('>=')
		{ after(grammarAccess.getComparisonOpEnumAccess().getGTEEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOpEnumAccess().getINEnumLiteralDeclaration_4()); }
		('in')
		{ after(grammarAccess.getComparisonOpEnumAccess().getINEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftOpEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShiftOpEnumAccess().getLEFT_SHIFTEnumLiteralDeclaration_0()); }
		('<<')
		{ after(grammarAccess.getShiftOpEnumAccess().getLEFT_SHIFTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getShiftOpEnumAccess().getRIGHT_SHIFTEnumLiteralDeclaration_1()); }
		('>>')
		{ after(grammarAccess.getShiftOpEnumAccess().getRIGHT_SHIFTEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getShiftOpEnumAccess().getARITHMETIC_RIGHT_SHIFTEnumLiteralDeclaration_2()); }
		('>>>')
		{ after(grammarAccess.getShiftOpEnumAccess().getARITHMETIC_RIGHT_SHIFTEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionOpEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionOpEnumAccess().getADDEnumLiteralDeclaration_0()); }
		('+')
		{ after(grammarAccess.getAdditionOpEnumAccess().getADDEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditionOpEnumAccess().getSUBEnumLiteralDeclaration_1()); }
		('-')
		{ after(grammarAccess.getAdditionOpEnumAccess().getSUBEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDivModOpEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulDivModOpEnumAccess().getMULTEnumLiteralDeclaration_0()); }
		('*')
		{ after(grammarAccess.getMulDivModOpEnumAccess().getMULTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getMulDivModOpEnumAccess().getDIVEnumLiteralDeclaration_1()); }
		('/')
		{ after(grammarAccess.getMulDivModOpEnumAccess().getDIVEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getMulDivModOpEnumAccess().getMODEnumLiteralDeclaration_2()); }
		('%')
		{ after(grammarAccess.getMulDivModOpEnumAccess().getMODEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncDecOpEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncDecOpEnumAccess().getINCEnumLiteralDeclaration_0()); }
		('++')
		{ after(grammarAccess.getIncDecOpEnumAccess().getINCEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getIncDecOpEnumAccess().getDECEnumLiteralDeclaration_1()); }
		('--')
		{ after(grammarAccess.getIncDecOpEnumAccess().getDECEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteralEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralEnumAccess().getTRUEEnumLiteralDeclaration_0()); }
		('true')
		{ after(grammarAccess.getBooleanLiteralEnumAccess().getTRUEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanLiteralEnumAccess().getFALSEEnumLiteralDeclaration_1()); }
		('false')
		{ after(grammarAccess.getBooleanLiteralEnumAccess().getFALSEEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EtherSubDenominationEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEtherSubDenominationEnumAccess().getWEIEnumLiteralDeclaration_0()); }
		('wei')
		{ after(grammarAccess.getEtherSubDenominationEnumAccess().getWEIEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getEtherSubDenominationEnumAccess().getSZABOEnumLiteralDeclaration_1()); }
		('szabo')
		{ after(grammarAccess.getEtherSubDenominationEnumAccess().getSZABOEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getEtherSubDenominationEnumAccess().getFINNEYEnumLiteralDeclaration_2()); }
		('finney')
		{ after(grammarAccess.getEtherSubDenominationEnumAccess().getFINNEYEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getEtherSubDenominationEnumAccess().getETHEREnumLiteralDeclaration_3()); }
		('ether')
		{ after(grammarAccess.getEtherSubDenominationEnumAccess().getETHEREnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSubdenominationEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeSubdenominationEnumAccess().getSECONDSEnumLiteralDeclaration_0()); }
		('seconds')
		{ after(grammarAccess.getTimeSubdenominationEnumAccess().getSECONDSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeSubdenominationEnumAccess().getMINUTESEnumLiteralDeclaration_1()); }
		('minutes')
		{ after(grammarAccess.getTimeSubdenominationEnumAccess().getMINUTESEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimeSubdenominationEnumAccess().getHOURSEnumLiteralDeclaration_2()); }
		('hours')
		{ after(grammarAccess.getTimeSubdenominationEnumAccess().getHOURSEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTimeSubdenominationEnumAccess().getDAYSEnumLiteralDeclaration_3()); }
		('days')
		{ after(grammarAccess.getTimeSubdenominationEnumAccess().getDAYSEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getTimeSubdenominationEnumAccess().getWEEKSEnumLiteralDeclaration_4()); }
		('weeks')
		{ after(grammarAccess.getTimeSubdenominationEnumAccess().getWEEKSEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getTimeSubdenominationEnumAccess().getYEARSEnumLiteralDeclaration_5()); }
		('years')
		{ after(grammarAccess.getTimeSubdenominationEnumAccess().getYEARSEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialExpressionTypeEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecialExpressionTypeEnumAccess().getSUPEREnumLiteralDeclaration_0()); }
		('super')
		{ after(grammarAccess.getSpecialExpressionTypeEnumAccess().getSUPEREnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getSpecialExpressionTypeEnumAccess().getTHISEnumLiteralDeclaration_1()); }
		('this')
		{ after(grammarAccess.getSpecialExpressionTypeEnumAccess().getTHISEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDirective__Group_0__0__Impl
	rule__ImportDirective__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDirectiveAccess().getImportKeyword_0_0()); }
	'import'
	{ after(grammarAccess.getImportDirectiveAccess().getImportKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDirective__Group_0__1__Impl
	rule__ImportDirective__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDirectiveAccess().getImportURIAssignment_0_1()); }
	(rule__ImportDirective__ImportURIAssignment_0_1)
	{ after(grammarAccess.getImportDirectiveAccess().getImportURIAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDirective__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDirectiveAccess().getSemicolonKeyword_0_2()); }
	';'
	{ after(grammarAccess.getImportDirectiveAccess().getSemicolonKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDirective__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDirective__Group_1__0__Impl
	rule__ImportDirective__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDirectiveAccess().getImportKeyword_1_0()); }
	'import'
	{ after(grammarAccess.getImportDirectiveAccess().getImportKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDirective__Group_1__1__Impl
	rule__ImportDirective__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDirectiveAccess().getAsteriskKeyword_1_1()); }
	'*'
	{ after(grammarAccess.getImportDirectiveAccess().getAsteriskKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDirective__Group_1__2__Impl
	rule__ImportDirective__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDirectiveAccess().getAsKeyword_1_2()); }
	'as'
	{ after(grammarAccess.getImportDirectiveAccess().getAsKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDirective__Group_1__3__Impl
	rule__ImportDirective__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDirectiveAccess().getUnitAliasAssignment_1_3()); }
	(rule__ImportDirective__UnitAliasAssignment_1_3)
	{ after(grammarAccess.getImportDirectiveAccess().getUnitAliasAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDirective__Group_1__4__Impl
	rule__ImportDirective__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDirectiveAccess().getFromKeyword_1_4()); }
	'from'
	{ after(grammarAccess.getImportDirectiveAccess().getFromKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDirective__Group_1__5__Impl
	rule__ImportDirective__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDirectiveAccess().getImportURIAssignment_1_5()); }
	(rule__ImportDirective__ImportURIAssignment_1_5)
	{ after(grammarAccess.getImportDirectiveAccess().getImportURIAssignment_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDirective__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDirectiveAccess().getSemicolonKeyword_1_6()); }
	';'
	{ after(grammarAccess.getImportDirectiveAccess().getSemicolonKeyword_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDirective__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDirective__Group_2__0__Impl
	rule__ImportDirective__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDirectiveAccess().getImportKeyword_2_0()); }
	'import'
	{ after(grammarAccess.getImportDirectiveAccess().getImportKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDirective__Group_2__1__Impl
	rule__ImportDirective__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDirectiveAccess().getLeftCurlyBracketKeyword_2_1()); }
	'{'
	{ after(grammarAccess.getImportDirectiveAccess().getLeftCurlyBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDirective__Group_2__2__Impl
	rule__ImportDirective__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDirectiveAccess().getSymbolAliasesAssignment_2_2()); }
	(rule__ImportDirective__SymbolAliasesAssignment_2_2)
	{ after(grammarAccess.getImportDirectiveAccess().getSymbolAliasesAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDirective__Group_2__3__Impl
	rule__ImportDirective__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDirectiveAccess().getGroup_2_3()); }
	(rule__ImportDirective__Group_2_3__0)?
	{ after(grammarAccess.getImportDirectiveAccess().getGroup_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDirective__Group_2__4__Impl
	rule__ImportDirective__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDirectiveAccess().getRightCurlyBracketKeyword_2_4()); }
	'}'
	{ after(grammarAccess.getImportDirectiveAccess().getRightCurlyBracketKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDirective__Group_2__5__Impl
	rule__ImportDirective__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDirectiveAccess().getFromKeyword_2_5()); }
	'from'
	{ after(grammarAccess.getImportDirectiveAccess().getFromKeyword_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_2__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDirective__Group_2__6__Impl
	rule__ImportDirective__Group_2__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_2__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDirectiveAccess().getImportURIAssignment_2_6()); }
	(rule__ImportDirective__ImportURIAssignment_2_6)
	{ after(grammarAccess.getImportDirectiveAccess().getImportURIAssignment_2_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_2__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDirective__Group_2__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_2__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDirectiveAccess().getSemicolonKeyword_2_7()); }
	';'
	{ after(grammarAccess.getImportDirectiveAccess().getSemicolonKeyword_2_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDirective__Group_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDirective__Group_2_3__0__Impl
	rule__ImportDirective__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDirectiveAccess().getCommaKeyword_2_3_0()); }
	','
	{ after(grammarAccess.getImportDirectiveAccess().getCommaKeyword_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDirective__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__Group_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDirectiveAccess().getSymbolAliasesAssignment_2_3_1()); }
	(rule__ImportDirective__SymbolAliasesAssignment_2_3_1)
	{ after(grammarAccess.getImportDirectiveAccess().getSymbolAliasesAssignment_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolAlias__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SymbolAlias__Group__0__Impl
	rule__SymbolAlias__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolAlias__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSymbolAliasAccess().getSymbolAssignment_0()); }
	(rule__SymbolAlias__SymbolAssignment_0)
	{ after(grammarAccess.getSymbolAliasAccess().getSymbolAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolAlias__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SymbolAlias__Group__1__Impl
	rule__SymbolAlias__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolAlias__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSymbolAliasAccess().getAsKeyword_1()); }
	'as'
	{ after(grammarAccess.getSymbolAliasAccess().getAsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolAlias__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SymbolAlias__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolAlias__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSymbolAliasAccess().getAliasAssignment_2()); }
	(rule__SymbolAlias__AliasAssignment_2)
	{ after(grammarAccess.getSymbolAliasAccess().getAliasAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Contract__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__0__Impl
	rule__Contract__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getContractKeyword_0()); }
	'contract'
	{ after(grammarAccess.getContractAccess().getContractKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__1__Impl
	rule__Contract__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getNameAssignment_1()); }
	(rule__Contract__NameAssignment_1)
	{ after(grammarAccess.getContractAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__2__Impl
	rule__Contract__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getGroup_2()); }
	(rule__Contract__Group_2__0)?
	{ after(grammarAccess.getContractAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getBodyAssignment_3()); }
	(rule__Contract__BodyAssignment_3)
	{ after(grammarAccess.getContractAccess().getBodyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Contract__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group_2__0__Impl
	rule__Contract__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getIsKeyword_2_0()); }
	'is'
	{ after(grammarAccess.getContractAccess().getIsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group_2__1__Impl
	rule__Contract__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getInheritanceSpecifiersAssignment_2_1()); }
	(rule__Contract__InheritanceSpecifiersAssignment_2_1)
	{ after(grammarAccess.getContractAccess().getInheritanceSpecifiersAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getGroup_2_2()); }
	(rule__Contract__Group_2_2__0)*
	{ after(grammarAccess.getContractAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Contract__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group_2_2__0__Impl
	rule__Contract__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getContractAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getInheritanceSpecifiersAssignment_2_2_1()); }
	(rule__Contract__InheritanceSpecifiersAssignment_2_2_1)
	{ after(grammarAccess.getContractAccess().getInheritanceSpecifiersAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Library__Group__0__Impl
	rule__Library__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryAccess().getLibraryKeyword_0()); }
	'library'
	{ after(grammarAccess.getLibraryAccess().getLibraryKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Library__Group__1__Impl
	rule__Library__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryAccess().getNameAssignment_1()); }
	(rule__Library__NameAssignment_1)
	{ after(grammarAccess.getLibraryAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Library__Group__2__Impl
	rule__Library__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryAccess().getGroup_2()); }
	(rule__Library__Group_2__0)?
	{ after(grammarAccess.getLibraryAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Library__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryAccess().getBodyAssignment_3()); }
	(rule__Library__BodyAssignment_3)
	{ after(grammarAccess.getLibraryAccess().getBodyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Library__Group_2__0__Impl
	rule__Library__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryAccess().getIsKeyword_2_0()); }
	'is'
	{ after(grammarAccess.getLibraryAccess().getIsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Library__Group_2__1__Impl
	rule__Library__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryAccess().getInheritanceSpecifiersAssignment_2_1()); }
	(rule__Library__InheritanceSpecifiersAssignment_2_1)
	{ after(grammarAccess.getLibraryAccess().getInheritanceSpecifiersAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Library__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryAccess().getGroup_2_2()); }
	(rule__Library__Group_2_2__0)*
	{ after(grammarAccess.getLibraryAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Library__Group_2_2__0__Impl
	rule__Library__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getLibraryAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Library__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryAccess().getInheritanceSpecifiersAssignment_2_2_1()); }
	(rule__Library__InheritanceSpecifiersAssignment_2_2_1)
	{ after(grammarAccess.getLibraryAccess().getInheritanceSpecifiersAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionBody__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionBody__Group__0__Impl
	rule__DefinitionBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionBodyAccess().getDefinitionBodyAction_0()); }
	()
	{ after(grammarAccess.getDefinitionBodyAccess().getDefinitionBodyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionBody__Group__1__Impl
	rule__DefinitionBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionBodyAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getDefinitionBodyAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionBody__Group__2__Impl
	rule__DefinitionBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionBodyAccess().getAlternatives_2()); }
	(rule__DefinitionBody__Alternatives_2)*
	{ after(grammarAccess.getDefinitionBodyAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionBody__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionBodyAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getDefinitionBodyAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionBody__Group_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionBody__Group_2_3__0__Impl
	rule__DefinitionBody__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__Group_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionBodyAccess().getVariablesAssignment_2_3_0()); }
	(rule__DefinitionBody__VariablesAssignment_2_3_0)
	{ after(grammarAccess.getDefinitionBodyAccess().getVariablesAssignment_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__Group_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionBody__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__Group_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionBodyAccess().getSemicolonKeyword_2_3_1()); }
	';'
	{ after(grammarAccess.getDefinitionBodyAccess().getSemicolonKeyword_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InheritanceSpecifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InheritanceSpecifier__Group__0__Impl
	rule__InheritanceSpecifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InheritanceSpecifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInheritanceSpecifierAccess().getSuperTypeAssignment_0()); }
	(rule__InheritanceSpecifier__SuperTypeAssignment_0)
	{ after(grammarAccess.getInheritanceSpecifierAccess().getSuperTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InheritanceSpecifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InheritanceSpecifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InheritanceSpecifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInheritanceSpecifierAccess().getArgsAssignment_1()); }
	(rule__InheritanceSpecifier__ArgsAssignment_1)?
	{ after(grammarAccess.getInheritanceSpecifierAccess().getArgsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallListArguments__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallListArguments__Group__0__Impl
	rule__FunctionCallListArguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallListArgumentsAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getFunctionCallListArgumentsAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallListArguments__Group__1__Impl
	rule__FunctionCallListArguments__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallListArgumentsAccess().getFunctionCallListArgumentsAction_1()); }
	()
	{ after(grammarAccess.getFunctionCallListArgumentsAccess().getFunctionCallListArgumentsAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallListArguments__Group__2__Impl
	rule__FunctionCallListArguments__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallListArgumentsAccess().getGroup_2()); }
	(rule__FunctionCallListArguments__Group_2__0)?
	{ after(grammarAccess.getFunctionCallListArgumentsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallListArguments__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallListArgumentsAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFunctionCallListArgumentsAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallListArguments__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallListArguments__Group_2__0__Impl
	rule__FunctionCallListArguments__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallListArgumentsAccess().getArgumentsAssignment_2_0()); }
	(rule__FunctionCallListArguments__ArgumentsAssignment_2_0)
	{ after(grammarAccess.getFunctionCallListArgumentsAccess().getArgumentsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallListArguments__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallListArgumentsAccess().getGroup_2_1()); }
	(rule__FunctionCallListArguments__Group_2_1__0)*
	{ after(grammarAccess.getFunctionCallListArgumentsAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallListArguments__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallListArguments__Group_2_1__0__Impl
	rule__FunctionCallListArguments__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallListArgumentsAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getFunctionCallListArgumentsAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallListArguments__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallListArgumentsAccess().getArgumentsAssignment_2_1_1()); }
	(rule__FunctionCallListArguments__ArgumentsAssignment_2_1_1)
	{ after(grammarAccess.getFunctionCallListArgumentsAccess().getArgumentsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallArguments__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArguments__Group_0__0__Impl
	rule__FunctionCallArguments__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgumentsAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getFunctionCallArgumentsAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArguments__Group_0__1__Impl
	rule__FunctionCallArguments__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgumentsAccess().getLeftCurlyBracketKeyword_0_1()); }
	'{'
	{ after(grammarAccess.getFunctionCallArgumentsAccess().getLeftCurlyBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArguments__Group_0__2__Impl
	rule__FunctionCallArguments__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgumentsAccess().getFunctionCallArgumentsAction_0_2()); }
	()
	{ after(grammarAccess.getFunctionCallArgumentsAccess().getFunctionCallArgumentsAction_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArguments__Group_0__3__Impl
	rule__FunctionCallArguments__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgumentsAccess().getGroup_0_3()); }
	(rule__FunctionCallArguments__Group_0_3__0)?
	{ after(grammarAccess.getFunctionCallArgumentsAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArguments__Group_0__4__Impl
	rule__FunctionCallArguments__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgumentsAccess().getRightCurlyBracketKeyword_0_4()); }
	'}'
	{ after(grammarAccess.getFunctionCallArgumentsAccess().getRightCurlyBracketKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArguments__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgumentsAccess().getRightParenthesisKeyword_0_5()); }
	')'
	{ after(grammarAccess.getFunctionCallArgumentsAccess().getRightParenthesisKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallArguments__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArguments__Group_0_3__0__Impl
	rule__FunctionCallArguments__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgumentsAccess().getArgsAssignment_0_3_0()); }
	(rule__FunctionCallArguments__ArgsAssignment_0_3_0)
	{ after(grammarAccess.getFunctionCallArgumentsAccess().getArgsAssignment_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArguments__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgumentsAccess().getGroup_0_3_1()); }
	(rule__FunctionCallArguments__Group_0_3_1__0)*
	{ after(grammarAccess.getFunctionCallArgumentsAccess().getGroup_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallArguments__Group_0_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArguments__Group_0_3_1__0__Impl
	rule__FunctionCallArguments__Group_0_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgumentsAccess().getCommaKeyword_0_3_1_0()); }
	','
	{ after(grammarAccess.getFunctionCallArgumentsAccess().getCommaKeyword_0_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArguments__Group_0_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__Group_0_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgumentsAccess().getArgsAssignment_0_3_1_1()); }
	(rule__FunctionCallArguments__ArgsAssignment_0_3_1_1)
	{ after(grammarAccess.getFunctionCallArgumentsAccess().getArgsAssignment_0_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallArg__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArg__Group__0__Impl
	rule__FunctionCallArg__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArg__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgAccess().getNameAssignment_0()); }
	(rule__FunctionCallArg__NameAssignment_0)
	{ after(grammarAccess.getFunctionCallArgAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArg__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArg__Group__1__Impl
	rule__FunctionCallArg__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArg__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getFunctionCallArgAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArg__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArg__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArg__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgAccess().getExprAssignment_2()); }
	(rule__FunctionCallArg__ExprAssignment_2)
	{ after(grammarAccess.getFunctionCallArgAccess().getExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__0__Impl
	rule__FunctionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getVisibilityAssignment_0()); }
	(rule__FunctionDefinition__VisibilityAssignment_0)
	{ after(grammarAccess.getFunctionDefinitionAccess().getVisibilityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__1__Impl
	rule__FunctionDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getPayableAssignment_1()); }
	(rule__FunctionDefinition__PayableAssignment_1)?
	{ after(grammarAccess.getFunctionDefinitionAccess().getPayableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__2__Impl
	rule__FunctionDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getFunctionKeyword_2()); }
	'function'
	{ after(grammarAccess.getFunctionDefinitionAccess().getFunctionKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__3__Impl
	rule__FunctionDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getNameAssignment_3()); }
	(rule__FunctionDefinition__NameAssignment_3)
	{ after(grammarAccess.getFunctionDefinitionAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__4__Impl
	rule__FunctionDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getParametersAssignment_4()); }
	(rule__FunctionDefinition__ParametersAssignment_4)
	{ after(grammarAccess.getFunctionDefinitionAccess().getParametersAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__5__Impl
	rule__FunctionDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getOptionalElementsAssignment_5()); }
	(rule__FunctionDefinition__OptionalElementsAssignment_5)*
	{ after(grammarAccess.getFunctionDefinitionAccess().getOptionalElementsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__6__Impl
	rule__FunctionDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getGroup_6()); }
	(rule__FunctionDefinition__Group_6__0)?
	{ after(grammarAccess.getFunctionDefinitionAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getAlternatives_7()); }
	(rule__FunctionDefinition__Alternatives_7)
	{ after(grammarAccess.getFunctionDefinitionAccess().getAlternatives_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group_6__0__Impl
	rule__FunctionDefinition__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getReturnsKeyword_6_0()); }
	'returns'
	{ after(grammarAccess.getFunctionDefinitionAccess().getReturnsKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getReturnParametersAssignment_6_1()); }
	(rule__FunctionDefinition__ReturnParametersAssignment_6_1)
	{ after(grammarAccess.getFunctionDefinitionAccess().getReturnParametersAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Const__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Const__Group__0__Impl
	rule__Const__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Const__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstAccess().getConstantKeyword_0()); }
	'constant'
	{ after(grammarAccess.getConstAccess().getConstantKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Const__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Const__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Const__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstAccess().getConstAction_1()); }
	()
	{ after(grammarAccess.getConstAccess().getConstAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDefinition__Group__0__Impl
	rule__StructDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDefinitionAccess().getVisibilityAssignment_0()); }
	(rule__StructDefinition__VisibilityAssignment_0)?
	{ after(grammarAccess.getStructDefinitionAccess().getVisibilityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDefinition__Group__1__Impl
	rule__StructDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDefinitionAccess().getStructKeyword_1()); }
	'struct'
	{ after(grammarAccess.getStructDefinitionAccess().getStructKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDefinition__Group__2__Impl
	rule__StructDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDefinitionAccess().getNameAssignment_2()); }
	(rule__StructDefinition__NameAssignment_2)
	{ after(grammarAccess.getStructDefinitionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDefinition__Group__3__Impl
	rule__StructDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDefinitionAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getStructDefinitionAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDefinition__Group__4__Impl
	rule__StructDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDefinitionAccess().getGroup_4()); }
	(rule__StructDefinition__Group_4__0)*
	{ after(grammarAccess.getStructDefinitionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDefinitionAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getStructDefinitionAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructDefinition__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDefinition__Group_4__0__Impl
	rule__StructDefinition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDefinitionAccess().getMembersAssignment_4_0()); }
	(rule__StructDefinition__MembersAssignment_4_0)
	{ after(grammarAccess.getStructDefinitionAccess().getMembersAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDefinition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDefinitionAccess().getSemicolonKeyword_4_1()); }
	';'
	{ after(grammarAccess.getStructDefinitionAccess().getSemicolonKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDefinition__Group__0__Impl
	rule__EnumDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefinitionAccess().getVisibilityAssignment_0()); }
	(rule__EnumDefinition__VisibilityAssignment_0)?
	{ after(grammarAccess.getEnumDefinitionAccess().getVisibilityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDefinition__Group__1__Impl
	rule__EnumDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefinitionAccess().getEnumKeyword_1()); }
	'enum'
	{ after(grammarAccess.getEnumDefinitionAccess().getEnumKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDefinition__Group__2__Impl
	rule__EnumDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefinitionAccess().getNameAssignment_2()); }
	(rule__EnumDefinition__NameAssignment_2)
	{ after(grammarAccess.getEnumDefinitionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDefinition__Group__3__Impl
	rule__EnumDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefinitionAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getEnumDefinitionAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDefinition__Group__4__Impl
	rule__EnumDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefinitionAccess().getGroup_4()); }
	(rule__EnumDefinition__Group_4__0)?
	{ after(grammarAccess.getEnumDefinitionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefinitionAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getEnumDefinitionAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDefinition__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDefinition__Group_4__0__Impl
	rule__EnumDefinition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefinitionAccess().getMembersAssignment_4_0()); }
	(rule__EnumDefinition__MembersAssignment_4_0)
	{ after(grammarAccess.getEnumDefinitionAccess().getMembersAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDefinition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefinitionAccess().getGroup_4_1()); }
	(rule__EnumDefinition__Group_4_1__0)*
	{ after(grammarAccess.getEnumDefinitionAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDefinition__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDefinition__Group_4_1__0__Impl
	rule__EnumDefinition__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefinitionAccess().getCommaKeyword_4_1_0()); }
	','
	{ after(grammarAccess.getEnumDefinitionAccess().getCommaKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDefinition__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefinitionAccess().getMembersAssignment_4_1_1()); }
	(rule__EnumDefinition__MembersAssignment_4_1_1)
	{ after(grammarAccess.getEnumDefinitionAccess().getMembersAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StandardVariableDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardVariableDeclaration__Group__0__Impl
	rule__StandardVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardVariableDeclarationAccess().getTypeAssignment_0()); }
	(rule__StandardVariableDeclaration__TypeAssignment_0)
	{ after(grammarAccess.getStandardVariableDeclarationAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardVariableDeclaration__Group__1__Impl
	rule__StandardVariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardVariableDeclarationAccess().getOptionalElementsAssignment_1()); }
	(rule__StandardVariableDeclaration__OptionalElementsAssignment_1)*
	{ after(grammarAccess.getStandardVariableDeclarationAccess().getOptionalElementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardVariableDeclaration__Group__2__Impl
	rule__StandardVariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardVariableDeclarationAccess().getVariableAssignment_2()); }
	(rule__StandardVariableDeclaration__VariableAssignment_2)
	{ after(grammarAccess.getStandardVariableDeclarationAccess().getVariableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardVariableDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardVariableDeclarationAccess().getGroup_3()); }
	(rule__StandardVariableDeclaration__Group_3__0)?
	{ after(grammarAccess.getStandardVariableDeclarationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StandardVariableDeclaration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardVariableDeclaration__Group_3__0__Impl
	rule__StandardVariableDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardVariableDeclarationAccess().getEqualsSignKeyword_3_0()); }
	'='
	{ after(grammarAccess.getStandardVariableDeclarationAccess().getEqualsSignKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardVariableDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardVariableDeclarationAccess().getExpressionAssignment_3_1()); }
	(rule__StandardVariableDeclaration__ExpressionAssignment_3_1)
	{ after(grammarAccess.getStandardVariableDeclarationAccess().getExpressionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarVariableDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarVariableDeclaration__Group__0__Impl
	rule__VarVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarVariableDeclarationAccess().getVarTypeAssignment_0()); }
	(rule__VarVariableDeclaration__VarTypeAssignment_0)
	{ after(grammarAccess.getVarVariableDeclarationAccess().getVarTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarVariableDeclaration__Group__1__Impl
	rule__VarVariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarVariableDeclarationAccess().getVariableAssignment_1()); }
	(rule__VarVariableDeclaration__VariableAssignment_1)
	{ after(grammarAccess.getVarVariableDeclarationAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarVariableDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarVariableDeclarationAccess().getGroup_2()); }
	(rule__VarVariableDeclaration__Group_2__0)?
	{ after(grammarAccess.getVarVariableDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarVariableDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarVariableDeclaration__Group_2__0__Impl
	rule__VarVariableDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarVariableDeclarationAccess().getEqualsSignKeyword_2_0()); }
	'='
	{ after(grammarAccess.getVarVariableDeclarationAccess().getEqualsSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarVariableDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarVariableDeclarationAccess().getExpressionAssignment_2_1()); }
	(rule__VarVariableDeclaration__ExpressionAssignment_2_1)
	{ after(grammarAccess.getVarVariableDeclarationAccess().getExpressionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarVariableTupleVariableDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarVariableTupleVariableDeclaration__Group__0__Impl
	rule__VarVariableTupleVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableTupleVariableDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getVarTypeAssignment_0()); }
	(rule__VarVariableTupleVariableDeclaration__VarTypeAssignment_0)
	{ after(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getVarTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableTupleVariableDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarVariableTupleVariableDeclaration__Group__1__Impl
	rule__VarVariableTupleVariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableTupleVariableDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getTupleAssignment_1()); }
	(rule__VarVariableTupleVariableDeclaration__TupleAssignment_1)
	{ after(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getTupleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableTupleVariableDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarVariableTupleVariableDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableTupleVariableDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getGroup_2()); }
	(rule__VarVariableTupleVariableDeclaration__Group_2__0)?
	{ after(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarVariableTupleVariableDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarVariableTupleVariableDeclaration__Group_2__0__Impl
	rule__VarVariableTupleVariableDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableTupleVariableDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getEqualsSignKeyword_2_0()); }
	'='
	{ after(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getEqualsSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableTupleVariableDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarVariableTupleVariableDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableTupleVariableDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getExpressionAssignment_2_1()); }
	(rule__VarVariableTupleVariableDeclaration__ExpressionAssignment_2_1)
	{ after(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getExpressionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexedSpecifer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexedSpecifer__Group__0__Impl
	rule__IndexedSpecifer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedSpecifer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexedSpeciferAccess().getIndexedKeyword_0()); }
	'indexed'
	{ after(grammarAccess.getIndexedSpeciferAccess().getIndexedKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedSpecifer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexedSpecifer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedSpecifer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexedSpeciferAccess().getIndexedSpeciferAction_1()); }
	()
	{ after(grammarAccess.getIndexedSpeciferAccess().getIndexedSpeciferAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantSpecifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantSpecifier__Group__0__Impl
	rule__ConstantSpecifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantSpecifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantSpecifierAccess().getConstantKeyword_0()); }
	'constant'
	{ after(grammarAccess.getConstantSpecifierAccess().getConstantKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantSpecifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantSpecifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantSpecifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantSpecifierAccess().getConstantSpecifierAction_1()); }
	()
	{ after(grammarAccess.getConstantSpecifierAccess().getConstantSpecifierAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StandardType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardType__Group_0__0__Impl
	rule__StandardType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardTypeAccess().getElementaryTypeParserRuleCall_0_0()); }
	ruleElementaryType
	{ after(grammarAccess.getStandardTypeAccess().getElementaryTypeParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardTypeAccess().getDimensionAssignment_0_1()); }
	(rule__StandardType__DimensionAssignment_0_1)?
	{ after(grammarAccess.getStandardTypeAccess().getDimensionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StandardTypeWithoutQualifiedIdentifier__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardTypeWithoutQualifiedIdentifier__Group_0__0__Impl
	rule__StandardTypeWithoutQualifiedIdentifier__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardTypeWithoutQualifiedIdentifier__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getElementaryTypeParserRuleCall_0_0()); }
	ruleElementaryType
	{ after(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getElementaryTypeParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardTypeWithoutQualifiedIdentifier__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardTypeWithoutQualifiedIdentifier__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardTypeWithoutQualifiedIdentifier__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getDimensionAssignment_0_1()); }
	(rule__StandardTypeWithoutQualifiedIdentifier__DimensionAssignment_0_1)?
	{ after(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getDimensionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__0__Impl
	rule__Mapping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getMappingKeyword_0()); }
	'mapping'
	{ after(grammarAccess.getMappingAccess().getMappingKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__1__Impl
	rule__Mapping__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMappingAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__2__Impl
	rule__Mapping__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getKeyTypeAssignment_2()); }
	(rule__Mapping__KeyTypeAssignment_2)
	{ after(grammarAccess.getMappingAccess().getKeyTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__3__Impl
	rule__Mapping__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getEqualsSignGreaterThanSignKeyword_3()); }
	'=>'
	{ after(grammarAccess.getMappingAccess().getEqualsSignGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__4__Impl
	rule__Mapping__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getValueTypeAssignment_4()); }
	(rule__Mapping__ValueTypeAssignment_4)
	{ after(grammarAccess.getMappingAccess().getValueTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getMappingAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayDimensions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDimensions__Group__0__Impl
	rule__ArrayDimensions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDimensionsAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getArrayDimensionsAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDimensions__Group__1__Impl
	rule__ArrayDimensions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDimensionsAccess().getArrayDimensionsAction_1()); }
	()
	{ after(grammarAccess.getArrayDimensionsAccess().getArrayDimensionsAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDimensions__Group__2__Impl
	rule__ArrayDimensions__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDimensionsAccess().getValueAssignment_2()); }
	(rule__ArrayDimensions__ValueAssignment_2)?
	{ after(grammarAccess.getArrayDimensionsAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDimensions__Group__3__Impl
	rule__ArrayDimensions__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDimensionsAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getArrayDimensionsAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDimensions__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDimensionsAccess().getGroup_4()); }
	(rule__ArrayDimensions__Group_4__0)*
	{ after(grammarAccess.getArrayDimensionsAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayDimensions__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDimensions__Group_4__0__Impl
	rule__ArrayDimensions__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDimensionsAccess().getLeftSquareBracketKeyword_4_0()); }
	'['
	{ after(grammarAccess.getArrayDimensionsAccess().getLeftSquareBracketKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDimensions__Group_4__1__Impl
	rule__ArrayDimensions__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDimensionsAccess().getValueAssignment_4_1()); }
	(rule__ArrayDimensions__ValueAssignment_4_1)?
	{ after(grammarAccess.getArrayDimensionsAccess().getValueAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDimensions__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDimensionsAccess().getRightSquareBracketKeyword_4_2()); }
	']'
	{ after(grammarAccess.getArrayDimensionsAccess().getRightSquareBracketKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Tuple__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tuple__Group__0__Impl
	rule__Tuple__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getTupleAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tuple__Group__1__Impl
	rule__Tuple__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleAccess().getTupleAction_1()); }
	()
	{ after(grammarAccess.getTupleAccess().getTupleAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tuple__Group__2__Impl
	rule__Tuple__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleAccess().getGroup_2()); }
	(rule__Tuple__Group_2__0)?
	{ after(grammarAccess.getTupleAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tuple__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getTupleAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Tuple__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tuple__Group_2__0__Impl
	rule__Tuple__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleAccess().getMembersAssignment_2_0()); }
	(rule__Tuple__MembersAssignment_2_0)?
	{ after(grammarAccess.getTupleAccess().getMembersAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tuple__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTupleAccess().getGroup_2_1()); }
		(rule__Tuple__Group_2_1__0)
		{ after(grammarAccess.getTupleAccess().getGroup_2_1()); }
	)
	(
		{ before(grammarAccess.getTupleAccess().getGroup_2_1()); }
		(rule__Tuple__Group_2_1__0)*
		{ after(grammarAccess.getTupleAccess().getGroup_2_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Tuple__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tuple__Group_2_1__0__Impl
	rule__Tuple__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleAccess().getMembersAssignment_2_1_0()); }
	(rule__Tuple__MembersAssignment_2_1_0)
	{ after(grammarAccess.getTupleAccess().getMembersAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tuple__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleAccess().getMembersAssignment_2_1_1()); }
	(rule__Tuple__MembersAssignment_2_1_1)?
	{ after(grammarAccess.getTupleAccess().getMembersAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleSeparator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleSeparator__Group__0__Impl
	rule__TupleSeparator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleSeparator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleSeparatorAccess().getCommaKeyword_0()); }
	','
	{ after(grammarAccess.getTupleSeparatorAccess().getCommaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleSeparator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleSeparator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleSeparator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleSeparatorAccess().getTupleSeparatorAction_1()); }
	()
	{ after(grammarAccess.getTupleSeparatorAccess().getTupleSeparatorAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group__0__Impl
	rule__SimpleStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getAlternatives_0()); }
	(rule__SimpleStatement__Alternatives_0)
	{ after(grammarAccess.getSimpleStatementAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getSemicolonAssignment_1()); }
	(rule__SimpleStatement__SemicolonAssignment_1)
	{ after(grammarAccess.getSimpleStatementAccess().getSemicolonAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_0__0__Impl
	rule__SimpleStatement__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getStandardTypeWithoutQualifiedIdentifierParserRuleCall_0_0_0()); }
	ruleStandardTypeWithoutQualifiedIdentifier
	{ after(grammarAccess.getSimpleStatementAccess().getStandardTypeWithoutQualifiedIdentifierParserRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getGroup_0_0_1()); }
	(rule__SimpleStatement__Group_0_0_1__0)
	{ after(grammarAccess.getSimpleStatementAccess().getGroup_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement__Group_0_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_0_1__0__Impl
	rule__SimpleStatement__Group_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getStandardVariableDeclarationTypeAction_0_0_1_0()); }
	()
	{ after(grammarAccess.getSimpleStatementAccess().getStandardVariableDeclarationTypeAction_0_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_0_1__1__Impl
	rule__SimpleStatement__Group_0_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getPtionalElementsAssignment_0_0_1_1()); }
	(rule__SimpleStatement__PtionalElementsAssignment_0_0_1_1)*
	{ after(grammarAccess.getSimpleStatementAccess().getPtionalElementsAssignment_0_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_0_1__2__Impl
	rule__SimpleStatement__Group_0_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getVariableAssignment_0_0_1_2()); }
	(rule__SimpleStatement__VariableAssignment_0_0_1_2)
	{ after(grammarAccess.getSimpleStatementAccess().getVariableAssignment_0_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_0_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getGroup_0_0_1_3()); }
	(rule__SimpleStatement__Group_0_0_1_3__0)?
	{ after(grammarAccess.getSimpleStatementAccess().getGroup_0_0_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement__Group_0_0_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_0_1_3__0__Impl
	rule__SimpleStatement__Group_0_0_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getEqualsSignKeyword_0_0_1_3_0()); }
	'='
	{ after(grammarAccess.getSimpleStatementAccess().getEqualsSignKeyword_0_0_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_0_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_0_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getExpressionAssignment_0_0_1_3_1()); }
	(rule__SimpleStatement__ExpressionAssignment_0_0_1_3_1)
	{ after(grammarAccess.getSimpleStatementAccess().getExpressionAssignment_0_0_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_1__0__Impl
	rule__SimpleStatement__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getVarTypeParserRuleCall_0_1_0()); }
	ruleVarType
	{ after(grammarAccess.getSimpleStatementAccess().getVarTypeParserRuleCall_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getAlternatives_0_1_1()); }
	(rule__SimpleStatement__Alternatives_0_1_1)
	{ after(grammarAccess.getSimpleStatementAccess().getAlternatives_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement__Group_0_1_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_1_1_0__0__Impl
	rule__SimpleStatement__Group_0_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getVarVariableTypeDeclarationAction_0_1_1_0_0()); }
	()
	{ after(grammarAccess.getSimpleStatementAccess().getVarVariableTypeDeclarationAction_0_1_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_1_1_0__1__Impl
	rule__SimpleStatement__Group_0_1_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getVariableAssignment_0_1_1_0_1()); }
	(rule__SimpleStatement__VariableAssignment_0_1_1_0_1)
	{ after(grammarAccess.getSimpleStatementAccess().getVariableAssignment_0_1_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_1_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getGroup_0_1_1_0_2()); }
	(rule__SimpleStatement__Group_0_1_1_0_2__0)
	{ after(grammarAccess.getSimpleStatementAccess().getGroup_0_1_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement__Group_0_1_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_1_1_0_2__0__Impl
	rule__SimpleStatement__Group_0_1_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getEqualsSignKeyword_0_1_1_0_2_0()); }
	'='
	{ after(grammarAccess.getSimpleStatementAccess().getEqualsSignKeyword_0_1_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_1_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getExpressionAssignment_0_1_1_0_2_1()); }
	(rule__SimpleStatement__ExpressionAssignment_0_1_1_0_2_1)
	{ after(grammarAccess.getSimpleStatementAccess().getExpressionAssignment_0_1_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement__Group_0_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_1_1_1__0__Impl
	rule__SimpleStatement__Group_0_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getVarVariableTupleVariableDeclarationAction_0_1_1_1_0()); }
	()
	{ after(grammarAccess.getSimpleStatementAccess().getVarVariableTupleVariableDeclarationAction_0_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_1_1_1__1__Impl
	rule__SimpleStatement__Group_0_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getTupleAssignment_0_1_1_1_1()); }
	(rule__SimpleStatement__TupleAssignment_0_1_1_1_1)
	{ after(grammarAccess.getSimpleStatementAccess().getTupleAssignment_0_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_1_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getGroup_0_1_1_1_2()); }
	(rule__SimpleStatement__Group_0_1_1_1_2__0)
	{ after(grammarAccess.getSimpleStatementAccess().getGroup_0_1_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement__Group_0_1_1_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_1_1_1_2__0__Impl
	rule__SimpleStatement__Group_0_1_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getEqualsSignKeyword_0_1_1_1_2_0()); }
	'='
	{ after(grammarAccess.getSimpleStatementAccess().getEqualsSignKeyword_0_1_1_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement__Group_0_1_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__Group_0_1_1_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatementAccess().getExpressionAssignment_0_1_1_1_2_1()); }
	(rule__SimpleStatement__ExpressionAssignment_0_1_1_1_2_1)
	{ after(grammarAccess.getSimpleStatementAccess().getExpressionAssignment_0_1_1_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement2__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_0__0__Impl
	rule__SimpleStatement2__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getStandardTypeWithoutQualifiedIdentifierParserRuleCall_0_0()); }
	ruleStandardTypeWithoutQualifiedIdentifier
	{ after(grammarAccess.getSimpleStatement2Access().getStandardTypeWithoutQualifiedIdentifierParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getGroup_0_1()); }
	(rule__SimpleStatement2__Group_0_1__0)
	{ after(grammarAccess.getSimpleStatement2Access().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement2__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_0_1__0__Impl
	rule__SimpleStatement2__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getStandardVariableDeclarationTypeAction_0_1_0()); }
	()
	{ after(grammarAccess.getSimpleStatement2Access().getStandardVariableDeclarationTypeAction_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_0_1__1__Impl
	rule__SimpleStatement2__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getOptionalElementsAssignment_0_1_1()); }
	(rule__SimpleStatement2__OptionalElementsAssignment_0_1_1)*
	{ after(grammarAccess.getSimpleStatement2Access().getOptionalElementsAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_0_1__2__Impl
	rule__SimpleStatement2__Group_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getVariableAssignment_0_1_2()); }
	(rule__SimpleStatement2__VariableAssignment_0_1_2)
	{ after(grammarAccess.getSimpleStatement2Access().getVariableAssignment_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_0_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getGroup_0_1_3()); }
	(rule__SimpleStatement2__Group_0_1_3__0)?
	{ after(grammarAccess.getSimpleStatement2Access().getGroup_0_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement2__Group_0_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_0_1_3__0__Impl
	rule__SimpleStatement2__Group_0_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getEqualsSignKeyword_0_1_3_0()); }
	'='
	{ after(grammarAccess.getSimpleStatement2Access().getEqualsSignKeyword_0_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_0_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_0_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getExpressionAssignment_0_1_3_1()); }
	(rule__SimpleStatement2__ExpressionAssignment_0_1_3_1)
	{ after(grammarAccess.getSimpleStatement2Access().getExpressionAssignment_0_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement2__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_1__0__Impl
	rule__SimpleStatement2__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getVarTypeParserRuleCall_1_0()); }
	ruleVarType
	{ after(grammarAccess.getSimpleStatement2Access().getVarTypeParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getAlternatives_1_1()); }
	(rule__SimpleStatement2__Alternatives_1_1)
	{ after(grammarAccess.getSimpleStatement2Access().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement2__Group_1_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_1_1_0__0__Impl
	rule__SimpleStatement2__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getVarVariableTypeDeclarationAction_1_1_0_0()); }
	()
	{ after(grammarAccess.getSimpleStatement2Access().getVarVariableTypeDeclarationAction_1_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_1_1_0__1__Impl
	rule__SimpleStatement2__Group_1_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getVariableAssignment_1_1_0_1()); }
	(rule__SimpleStatement2__VariableAssignment_1_1_0_1)
	{ after(grammarAccess.getSimpleStatement2Access().getVariableAssignment_1_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_1_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getGroup_1_1_0_2()); }
	(rule__SimpleStatement2__Group_1_1_0_2__0)
	{ after(grammarAccess.getSimpleStatement2Access().getGroup_1_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement2__Group_1_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_1_1_0_2__0__Impl
	rule__SimpleStatement2__Group_1_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getEqualsSignKeyword_1_1_0_2_0()); }
	'='
	{ after(grammarAccess.getSimpleStatement2Access().getEqualsSignKeyword_1_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_1_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getExpressionAssignment_1_1_0_2_1()); }
	(rule__SimpleStatement2__ExpressionAssignment_1_1_0_2_1)
	{ after(grammarAccess.getSimpleStatement2Access().getExpressionAssignment_1_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement2__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_1_1_1__0__Impl
	rule__SimpleStatement2__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getVarVariableTupleVariableDeclarationAction_1_1_1_0()); }
	()
	{ after(grammarAccess.getSimpleStatement2Access().getVarVariableTupleVariableDeclarationAction_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_1_1_1__1__Impl
	rule__SimpleStatement2__Group_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getTupleAssignment_1_1_1_1()); }
	(rule__SimpleStatement2__TupleAssignment_1_1_1_1)
	{ after(grammarAccess.getSimpleStatement2Access().getTupleAssignment_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_1_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getGroup_1_1_1_2()); }
	(rule__SimpleStatement2__Group_1_1_1_2__0)
	{ after(grammarAccess.getSimpleStatement2Access().getGroup_1_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStatement2__Group_1_1_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_1_1_1_2__0__Impl
	rule__SimpleStatement2__Group_1_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getEqualsSignKeyword_1_1_1_2_0()); }
	'='
	{ after(grammarAccess.getSimpleStatement2Access().getEqualsSignKeyword_1_1_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStatement2__Group_1_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__Group_1_1_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStatement2Access().getExpressionAssignment_1_1_1_2_1()); }
	(rule__SimpleStatement2__ExpressionAssignment_1_1_1_2_1)
	{ after(grammarAccess.getSimpleStatement2Access().getExpressionAssignment_1_1_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedIdentifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedIdentifier__Group__0__Impl
	rule__QualifiedIdentifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedIdentifierAccess().getIdentifierAssignment_0()); }
	(rule__QualifiedIdentifier__IdentifierAssignment_0)
	{ after(grammarAccess.getQualifiedIdentifierAccess().getIdentifierAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedIdentifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedIdentifierAccess().getQualifiersAssignment_1()); }
	(rule__QualifiedIdentifier__QualifiersAssignment_1)*
	{ after(grammarAccess.getQualifiedIdentifierAccess().getQualifiersAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getFieldAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getFieldAssignment_1()); }
	(rule__Field__FieldAssignment_1)
	{ after(grammarAccess.getFieldAccess().getFieldAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Index__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group__0__Impl
	rule__Index__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group__1__Impl
	rule__Index__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getIndexAction_1()); }
	()
	{ after(grammarAccess.getIndexAccess().getIndexAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group__2__Impl
	rule__Index__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getValueAssignment_2()); }
	(rule__Index__ValueAssignment_2)?
	{ after(grammarAccess.getIndexAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getIndexAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Modifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modifier__Group__0__Impl
	rule__Modifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifierAccess().getModifierKeyword_0()); }
	'modifier'
	{ after(grammarAccess.getModifierAccess().getModifierKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modifier__Group__1__Impl
	rule__Modifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifierAccess().getNameAssignment_1()); }
	(rule__Modifier__NameAssignment_1)
	{ after(grammarAccess.getModifierAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modifier__Group__2__Impl
	rule__Modifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifierAccess().getParametersAssignment_2()); }
	(rule__Modifier__ParametersAssignment_2)?
	{ after(grammarAccess.getModifierAccess().getParametersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modifier__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifierAccess().getBlockAssignment_3()); }
	(rule__Modifier__BlockAssignment_3)
	{ after(grammarAccess.getModifierAccess().getBlockAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group__0__Impl
	rule__Event__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getEventKeyword_0()); }
	'event'
	{ after(grammarAccess.getEventAccess().getEventKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group__1__Impl
	rule__Event__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getNameAssignment_1()); }
	(rule__Event__NameAssignment_1)
	{ after(grammarAccess.getEventAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group__2__Impl
	rule__Event__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getParametersAssignment_2()); }
	(rule__Event__ParametersAssignment_2)?
	{ after(grammarAccess.getEventAccess().getParametersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getEventAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModifierInvocation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModifierInvocation__Group__0__Impl
	rule__ModifierInvocation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierInvocation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifierInvocationAccess().getNameAssignment_0()); }
	(rule__ModifierInvocation__NameAssignment_0)
	{ after(grammarAccess.getModifierInvocationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierInvocation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModifierInvocation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierInvocation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifierInvocationAccess().getArgsAssignment_1()); }
	(rule__ModifierInvocation__ArgsAssignment_1)?
	{ after(grammarAccess.getModifierInvocationAccess().getArgsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__0__Impl
	rule__ParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getParameterListAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__1__Impl
	rule__ParameterList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParameterListAction_1()); }
	()
	{ after(grammarAccess.getParameterListAccess().getParameterListAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__2__Impl
	rule__ParameterList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getGroup_2()); }
	(rule__ParameterList__Group_2__0)?
	{ after(grammarAccess.getParameterListAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getParameterListAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_2__0__Impl
	rule__ParameterList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParametersAssignment_2_0()); }
	(rule__ParameterList__ParametersAssignment_2_0)
	{ after(grammarAccess.getParameterListAccess().getParametersAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getGroup_2_1()); }
	(rule__ParameterList__Group_2_1__0)*
	{ after(grammarAccess.getParameterListAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_2_1__0__Impl
	rule__ParameterList__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getParameterListAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParametersAssignment_2_1_1()); }
	(rule__ParameterList__ParametersAssignment_2_1_1)
	{ after(grammarAccess.getParameterListAccess().getParametersAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnsParameterList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnsParameterList__Group__0__Impl
	rule__ReturnsParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnsParameterListAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getReturnsParameterListAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnsParameterList__Group__1__Impl
	rule__ReturnsParameterList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnsParameterListAccess().getReturnsParameterListAction_1()); }
	()
	{ after(grammarAccess.getReturnsParameterListAccess().getReturnsParameterListAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnsParameterList__Group__2__Impl
	rule__ReturnsParameterList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnsParameterListAccess().getGroup_2()); }
	(rule__ReturnsParameterList__Group_2__0)?
	{ after(grammarAccess.getReturnsParameterListAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnsParameterList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnsParameterListAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getReturnsParameterListAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnsParameterList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnsParameterList__Group_2__0__Impl
	rule__ReturnsParameterList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnsParameterListAccess().getParametersAssignment_2_0()); }
	(rule__ReturnsParameterList__ParametersAssignment_2_0)
	{ after(grammarAccess.getReturnsParameterListAccess().getParametersAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnsParameterList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnsParameterListAccess().getGroup_2_1()); }
	(rule__ReturnsParameterList__Group_2_1__0)*
	{ after(grammarAccess.getReturnsParameterListAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnsParameterList__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnsParameterList__Group_2_1__0__Impl
	rule__ReturnsParameterList__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnsParameterListAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getReturnsParameterListAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnsParameterList__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnsParameterListAccess().getParametersAssignment_2_1_1()); }
	(rule__ReturnsParameterList__ParametersAssignment_2_1_1)
	{ after(grammarAccess.getReturnsParameterListAccess().getParametersAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnParameterDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnParameterDeclaration__Group__0__Impl
	rule__ReturnParameterDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameterDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnParameterDeclarationAccess().getTypeRefAssignment_0()); }
	(rule__ReturnParameterDeclaration__TypeRefAssignment_0)
	{ after(grammarAccess.getReturnParameterDeclarationAccess().getTypeRefAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameterDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnParameterDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameterDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnParameterDeclarationAccess().getVariableAssignment_1()); }
	(rule__ReturnParameterDeclaration__VariableAssignment_1)?
	{ after(grammarAccess.getReturnParameterDeclarationAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStatement__Group__0__Impl
	rule__DeleteStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStatementAccess().getDeleteKeyword_0()); }
	'delete'
	{ after(grammarAccess.getDeleteStatementAccess().getDeleteKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStatement__Group__1__Impl
	rule__DeleteStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStatementAccess().getVariableAssignment_1()); }
	(rule__DeleteStatement__VariableAssignment_1)
	{ after(grammarAccess.getDeleteStatementAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteStatementAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getDeleteStatementAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getConditionAssignment_2()); }
	(rule__IfStatement__ConditionAssignment_2)
	{ after(grammarAccess.getIfStatementAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__4__Impl
	rule__IfStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getTrueBodyAssignment_4()); }
	(rule__IfStatement__TrueBodyAssignment_4)
	{ after(grammarAccess.getIfStatementAccess().getTrueBodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getGroup_5()); }
	(rule__IfStatement__Group_5__0)?
	{ after(grammarAccess.getIfStatementAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_5__0__Impl
	rule__IfStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseKeyword_5_0()); }
	('else')
	{ after(grammarAccess.getIfStatementAccess().getElseKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getFalseBodyAssignment_5_1()); }
	(rule__IfStatement__FalseBodyAssignment_5_1)
	{ after(grammarAccess.getIfStatementAccess().getFalseBodyAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__0__Impl
	rule__WhileStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__1__Impl
	rule__WhileStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__2__Impl
	rule__WhileStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getConditionAssignment_2()); }
	(rule__WhileStatement__ConditionAssignment_2)
	{ after(grammarAccess.getWhileStatementAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__3__Impl
	rule__WhileStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getBodyAssignment_4()); }
	(rule__WhileStatement__BodyAssignment_4)
	{ after(grammarAccess.getWhileStatementAccess().getBodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__0__Impl
	rule__ForStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getForStatementAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__1__Impl
	rule__ForStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__2__Impl
	rule__ForStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getInitExpressionAssignment_2()); }
	(rule__ForStatement__InitExpressionAssignment_2)?
	{ after(grammarAccess.getForStatementAccess().getInitExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__3__Impl
	rule__ForStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getSemicolonKeyword_3()); }
	(';')
	{ after(grammarAccess.getForStatementAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__4__Impl
	rule__ForStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getConditionExpressionAssignment_4()); }
	(rule__ForStatement__ConditionExpressionAssignment_4)?
	{ after(grammarAccess.getForStatementAccess().getConditionExpressionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__5__Impl
	rule__ForStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getForStatementAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__6__Impl
	rule__ForStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getLoopExpressionAssignment_6()); }
	(rule__ForStatement__LoopExpressionAssignment_6)?
	{ after(grammarAccess.getForStatementAccess().getLoopExpressionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__7__Impl
	rule__ForStatement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getBodyAssignment_8()); }
	(rule__ForStatement__BodyAssignment_8)
	{ after(grammarAccess.getForStatementAccess().getBodyAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__0__Impl
	rule__Body__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__1__Impl
	rule__Body__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getBlockAction_1()); }
	()
	{ after(grammarAccess.getBodyAccess().getBlockAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__2__Impl
	rule__Body__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getGroup_2()); }
	(rule__Body__Group_2__0)?
	{ after(grammarAccess.getBodyAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group_2__0__Impl
	rule__Body__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getStatementsAssignment_2_0()); }
	(rule__Body__StatementsAssignment_2_0)
	{ after(grammarAccess.getBodyAccess().getStatementsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getStatementsAssignment_2_1()); }
	(rule__Body__StatementsAssignment_2_1)*
	{ after(grammarAccess.getBodyAccess().getStatementsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContinueStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContinueStatement__Group__0__Impl
	rule__ContinueStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinueStatementAccess().getContinueKeyword_0()); }
	'continue'
	{ after(grammarAccess.getContinueStatementAccess().getContinueKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContinueStatement__Group__1__Impl
	rule__ContinueStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinueStatementAccess().getContinueAction_1()); }
	()
	{ after(grammarAccess.getContinueStatementAccess().getContinueAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContinueStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinueStatementAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getContinueStatementAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BreakStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BreakStatement__Group__0__Impl
	rule__BreakStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakStatementAccess().getBreakKeyword_0()); }
	'break'
	{ after(grammarAccess.getBreakStatementAccess().getBreakKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BreakStatement__Group__1__Impl
	rule__BreakStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakStatementAccess().getBreakStatementAction_1()); }
	()
	{ after(grammarAccess.getBreakStatementAccess().getBreakStatementAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BreakStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakStatementAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getBreakStatementAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__0__Impl
	rule__ReturnStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getReturnKeyword_0()); }
	'return'
	{ after(grammarAccess.getReturnStatementAccess().getReturnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__1__Impl
	rule__ReturnStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getReturnStatementAction_1()); }
	()
	{ after(grammarAccess.getReturnStatementAccess().getReturnStatementAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__2__Impl
	rule__ReturnStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getExpressionAssignment_2()); }
	(rule__ReturnStatement__ExpressionAssignment_2)?
	{ after(grammarAccess.getReturnStatementAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ThrowStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThrowStatement__Group__0__Impl
	rule__ThrowStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThrowStatementAccess().getThrowKeyword_0()); }
	'throw'
	{ after(grammarAccess.getThrowStatementAccess().getThrowKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThrowStatement__Group__1__Impl
	rule__ThrowStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThrowStatementAccess().getThrowStatementAction_1()); }
	()
	{ after(grammarAccess.getThrowStatementAccess().getThrowStatementAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThrowStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThrowStatementAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getThrowStatementAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlaceHolderStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlaceHolderStatement__Group__0__Impl
	rule__PlaceHolderStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlaceHolderStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlaceHolderStatementAccess().get_Keyword_0()); }
	'_'
	{ after(grammarAccess.getPlaceHolderStatementAccess().get_Keyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlaceHolderStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlaceHolderStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlaceHolderStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlaceHolderStatementAccess().getPlaceHolderStatementAction_1()); }
	()
	{ after(grammarAccess.getPlaceHolderStatementAccess().getPlaceHolderStatementAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SpecialExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialExpression__Group__0__Impl
	rule__SpecialExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecialExpressionAccess().getTypeAssignment_0()); }
	(rule__SpecialExpression__TypeAssignment_0)
	{ after(grammarAccess.getSpecialExpressionAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialExpression__Group__1__Impl
	rule__SpecialExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecialExpressionAccess().getFieldOrMethodAssignment_1()); }
	(rule__SpecialExpression__FieldOrMethodAssignment_1)?
	{ after(grammarAccess.getSpecialExpressionAccess().getFieldOrMethodAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecialExpressionAccess().getQualifiersAssignment_2()); }
	(rule__SpecialExpression__QualifiersAssignment_2)*
	{ after(grammarAccess.getSpecialExpressionAccess().getQualifiersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getBinaryExpressionParserRuleCall_0()); }
	ruleBinaryExpression
	{ after(grammarAccess.getAssignmentAccess().getBinaryExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getAlternatives_1()); }
	(rule__Assignment__Alternatives_1)?
	{ after(grammarAccess.getAssignmentAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_1_0__0__Impl
	rule__Assignment__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getAssignmentLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getAssignmentAccess().getAssignmentLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_1_0__1__Impl
	rule__Assignment__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getAssignmentOpAssignment_1_0_1()); }
	(rule__Assignment__AssignmentOpAssignment_1_0_1)
	{ after(grammarAccess.getAssignmentAccess().getAssignmentOpAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getExpressionAssignment_1_0_2()); }
	(rule__Assignment__ExpressionAssignment_1_0_2)
	{ after(grammarAccess.getAssignmentAccess().getExpressionAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_1_1__0__Impl
	rule__Assignment__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getVariableDeclarationExpressionTypeAction_1_1_0()); }
	()
	{ after(grammarAccess.getAssignmentAccess().getVariableDeclarationExpressionTypeAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_1_1__1__Impl
	rule__Assignment__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getVariableAssignment_1_1_1()); }
	(rule__Assignment__VariableAssignment_1_1_1)
	{ after(grammarAccess.getAssignmentAccess().getVariableAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getGroup_1_1_2()); }
	(rule__Assignment__Group_1_1_2__0)?
	{ after(grammarAccess.getAssignmentAccess().getGroup_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_1_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_1_1_2__0__Impl
	rule__Assignment__Group_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1_1_2_0()); }
	'='
	{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getExpressionAssignment_1_1_2_1()); }
	(rule__Assignment__ExpressionAssignment_1_1_2_1)
	{ after(grammarAccess.getAssignmentAccess().getExpressionAssignment_1_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
	ruleAnd
	{ after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getGroup_1()); }
	(rule__Or__Group_1__0)*
	{ after(grammarAccess.getOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__1__Impl
	rule__Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getVerticalLineVerticalLineKeyword_1_1()); }
	'||'
	{ after(grammarAccess.getOrAccess().getVerticalLineVerticalLineKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
	(rule__Or__RightAssignment_1_2)
	{ after(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); }
	ruleEquality
	{ after(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getGroup_1()); }
	(rule__And__Group_1__0)*
	{ after(grammarAccess.getAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_1()); }
	'&&'
	{ after(grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
	(rule__And__RightAssignment_1_2)
	{ after(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__0__Impl
	rule__Equality__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); }
	ruleComparison
	{ after(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getGroup_1()); }
	(rule__Equality__Group_1__0)*
	{ after(grammarAccess.getEqualityAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__0__Impl
	rule__Equality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__1__Impl
	rule__Equality__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getEqualityOpAssignment_1_1()); }
	(rule__Equality__EqualityOpAssignment_1_1)
	{ after(grammarAccess.getEqualityAccess().getEqualityOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); }
	(rule__Equality__RightAssignment_1_2)
	{ after(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getBitOrParserRuleCall_0()); }
	ruleBitOr
	{ after(grammarAccess.getComparisonAccess().getBitOrParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getGroup_1()); }
	(rule__Comparison__Group_1__0)*
	{ after(grammarAccess.getComparisonAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__0__Impl
	rule__Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); }
	()
	{ after(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__1__Impl
	rule__Comparison__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getComparisonOpAssignment_1_1()); }
	(rule__Comparison__ComparisonOpAssignment_1_1)
	{ after(grammarAccess.getComparisonAccess().getComparisonOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
	(rule__Comparison__RightAssignment_1_2)
	{ after(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BitOr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitOr__Group__0__Impl
	rule__BitOr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitOrAccess().getBitXorParserRuleCall_0()); }
	ruleBitXor
	{ after(grammarAccess.getBitOrAccess().getBitXorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitOr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitOrAccess().getGroup_1()); }
	(rule__BitOr__Group_1__0)*
	{ after(grammarAccess.getBitOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BitOr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitOr__Group_1__0__Impl
	rule__BitOr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitOrAccess().getBitOrLeftAction_1_0()); }
	()
	{ after(grammarAccess.getBitOrAccess().getBitOrLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitOr__Group_1__1__Impl
	rule__BitOr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitOrAccess().getVerticalLineKeyword_1_1()); }
	'|'
	{ after(grammarAccess.getBitOrAccess().getVerticalLineKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitOr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitOrAccess().getRightAssignment_1_2()); }
	(rule__BitOr__RightAssignment_1_2)
	{ after(grammarAccess.getBitOrAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BitXor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitXor__Group__0__Impl
	rule__BitXor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitXorAccess().getBitAndParserRuleCall_0()); }
	ruleBitAnd
	{ after(grammarAccess.getBitXorAccess().getBitAndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitXor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitXorAccess().getGroup_1()); }
	(rule__BitXor__Group_1__0)*
	{ after(grammarAccess.getBitXorAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BitXor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitXor__Group_1__0__Impl
	rule__BitXor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitXorAccess().getBitXorLeftAction_1_0()); }
	()
	{ after(grammarAccess.getBitXorAccess().getBitXorLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitXor__Group_1__1__Impl
	rule__BitXor__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitXorAccess().getCircumflexAccentKeyword_1_1()); }
	'^'
	{ after(grammarAccess.getBitXorAccess().getCircumflexAccentKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXor__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitXor__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXor__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitXorAccess().getRightAssignment_1_2()); }
	(rule__BitXor__RightAssignment_1_2)
	{ after(grammarAccess.getBitXorAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BitAnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitAnd__Group__0__Impl
	rule__BitAnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitAndAccess().getShiftParserRuleCall_0()); }
	ruleShift
	{ after(grammarAccess.getBitAndAccess().getShiftParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitAnd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitAndAccess().getGroup_1()); }
	(rule__BitAnd__Group_1__0)*
	{ after(grammarAccess.getBitAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BitAnd__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitAnd__Group_1__0__Impl
	rule__BitAnd__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAnd__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitAndAccess().getBitAndLeftAction_1_0()); }
	()
	{ after(grammarAccess.getBitAndAccess().getBitAndLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAnd__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitAnd__Group_1__1__Impl
	rule__BitAnd__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAnd__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitAndAccess().getAmpersandKeyword_1_1()); }
	'&'
	{ after(grammarAccess.getBitAndAccess().getAmpersandKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAnd__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitAnd__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAnd__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitAndAccess().getRightAssignment_1_2()); }
	(rule__BitAnd__RightAssignment_1_2)
	{ after(grammarAccess.getBitAndAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Shift__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shift__Group__0__Impl
	rule__Shift__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftAccess().getAddSubParserRuleCall_0()); }
	ruleAddSub
	{ after(grammarAccess.getShiftAccess().getAddSubParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shift__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftAccess().getGroup_1()); }
	(rule__Shift__Group_1__0)*
	{ after(grammarAccess.getShiftAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Shift__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shift__Group_1__0__Impl
	rule__Shift__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftAccess().getShiftLeftAction_1_0()); }
	()
	{ after(grammarAccess.getShiftAccess().getShiftLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shift__Group_1__1__Impl
	rule__Shift__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftAccess().getShiftOpAssignment_1_1()); }
	(rule__Shift__ShiftOpAssignment_1_1)
	{ after(grammarAccess.getShiftAccess().getShiftOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shift__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftAccess().getRightAssignment_1_2()); }
	(rule__Shift__RightAssignment_1_2)
	{ after(grammarAccess.getShiftAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddSub__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddSub__Group__0__Impl
	rule__AddSub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddSubAccess().getMulDivModParserRuleCall_0()); }
	ruleMulDivMod
	{ after(grammarAccess.getAddSubAccess().getMulDivModParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddSub__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddSubAccess().getGroup_1()); }
	(rule__AddSub__Group_1__0)*
	{ after(grammarAccess.getAddSubAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddSub__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddSub__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddSubAccess().getGroup_1_0()); }
	(rule__AddSub__Group_1_0__0)
	{ after(grammarAccess.getAddSubAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddSub__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddSub__Group_1_0__0__Impl
	rule__AddSub__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddSubAccess().getAddSubLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getAddSubAccess().getAddSubLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddSub__Group_1_0__1__Impl
	rule__AddSub__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddSubAccess().getAdditionOpAssignment_1_0_1()); }
	(rule__AddSub__AdditionOpAssignment_1_0_1)
	{ after(grammarAccess.getAddSubAccess().getAdditionOpAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddSub__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddSubAccess().getRightAssignment_1_0_2()); }
	(rule__AddSub__RightAssignment_1_0_2)
	{ after(grammarAccess.getAddSubAccess().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulDivMod__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulDivMod__Group__0__Impl
	rule__MulDivMod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDivMod__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulDivModAccess().getExponentParserRuleCall_0()); }
	ruleExponent
	{ after(grammarAccess.getMulDivModAccess().getExponentParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDivMod__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulDivMod__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDivMod__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulDivModAccess().getGroup_1()); }
	(rule__MulDivMod__Group_1__0)*
	{ after(grammarAccess.getMulDivModAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulDivMod__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulDivMod__Group_1__0__Impl
	rule__MulDivMod__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDivMod__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulDivModAccess().getMulDivModLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMulDivModAccess().getMulDivModLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDivMod__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulDivMod__Group_1__1__Impl
	rule__MulDivMod__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDivMod__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulDivModAccess().getMultipliciativeOpAssignment_1_1()); }
	(rule__MulDivMod__MultipliciativeOpAssignment_1_1)
	{ after(grammarAccess.getMulDivModAccess().getMultipliciativeOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDivMod__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulDivMod__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDivMod__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulDivModAccess().getRightAssignment_1_2()); }
	(rule__MulDivMod__RightAssignment_1_2)
	{ after(grammarAccess.getMulDivModAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exponent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exponent__Group__0__Impl
	rule__Exponent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentAccess().getUnaryExpressionParserRuleCall_0()); }
	ruleUnaryExpression
	{ after(grammarAccess.getExponentAccess().getUnaryExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exponent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentAccess().getGroup_1()); }
	(rule__Exponent__Group_1__0)*
	{ after(grammarAccess.getExponentAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exponent__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exponent__Group_1__0__Impl
	rule__Exponent__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentAccess().getExponentLeftAction_1_0()); }
	()
	{ after(grammarAccess.getExponentAccess().getExponentLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exponent__Group_1__1__Impl
	rule__Exponent__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentAccess().getAsteriskAsteriskKeyword_1_1()); }
	'**'
	{ after(grammarAccess.getExponentAccess().getAsteriskAsteriskKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exponent__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentAccess().getRightAssignment_1_2()); }
	(rule__Exponent__RightAssignment_1_2)
	{ after(grammarAccess.getExponentAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NotExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotExpression__Group__0__Impl
	rule__NotExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotExpressionAccess().getExclamationMarkKeyword_0()); }
	'!'
	{ after(grammarAccess.getNotExpressionAccess().getExclamationMarkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotExpressionAccess().getExpressionAssignment_1()); }
	(rule__NotExpression__ExpressionAssignment_1)
	{ after(grammarAccess.getNotExpressionAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryNotExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryNotExpression__Group__0__Impl
	rule__BinaryNotExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryNotExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryNotExpressionAccess().getTildeKeyword_0()); }
	'~'
	{ after(grammarAccess.getBinaryNotExpressionAccess().getTildeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryNotExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryNotExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryNotExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryNotExpressionAccess().getExpressionAssignment_1()); }
	(rule__BinaryNotExpression__ExpressionAssignment_1)
	{ after(grammarAccess.getBinaryNotExpressionAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SignExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SignExpression__Group__0__Impl
	rule__SignExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignExpressionAccess().getSignOpAssignment_0()); }
	(rule__SignExpression__SignOpAssignment_0)
	{ after(grammarAccess.getSignExpressionAccess().getSignOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SignExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SignExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignExpressionAccess().getExpressionAssignment_1()); }
	(rule__SignExpression__ExpressionAssignment_1)
	{ after(grammarAccess.getSignExpressionAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NewExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewExpression__Group__0__Impl
	rule__NewExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NewExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewExpressionAccess().getNewKeyword_0()); }
	'new'
	{ after(grammarAccess.getNewExpressionAccess().getNewKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewExpression__Group__1__Impl
	rule__NewExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NewExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewExpressionAccess().getContractAssignment_1()); }
	(rule__NewExpression__ContractAssignment_1)
	{ after(grammarAccess.getNewExpressionAccess().getContractAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NewExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewExpressionAccess().getArgsAssignment_2()); }
	(rule__NewExpression__ArgsAssignment_2)
	{ after(grammarAccess.getNewExpressionAccess().getArgsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PreExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreExpression__Group_1__0__Impl
	rule__PreExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PreExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreExpressionAccess().getPlusSignPlusSignKeyword_1_0()); }
	'++'
	{ after(grammarAccess.getPreExpressionAccess().getPlusSignPlusSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreExpression__Group_1__1__Impl
	rule__PreExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PreExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreExpressionAccess().getPostIncDecExpressionParserRuleCall_1_1()); }
	rulePostIncDecExpression
	{ after(grammarAccess.getPreExpressionAccess().getPostIncDecExpressionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PreExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreExpressionAccess().getPreIncExpressionExpressionAction_1_2()); }
	()
	{ after(grammarAccess.getPreExpressionAccess().getPreIncExpressionExpressionAction_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PreExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreExpression__Group_2__0__Impl
	rule__PreExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PreExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreExpressionAccess().getHyphenMinusHyphenMinusKeyword_2_0()); }
	'--'
	{ after(grammarAccess.getPreExpressionAccess().getHyphenMinusHyphenMinusKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreExpression__Group_2__1__Impl
	rule__PreExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PreExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreExpressionAccess().getPostIncDecExpressionParserRuleCall_2_1()); }
	rulePostIncDecExpression
	{ after(grammarAccess.getPreExpressionAccess().getPostIncDecExpressionParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreExpression__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PreExpression__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreExpressionAccess().getPreDecExpressionExpressionAction_2_2()); }
	()
	{ after(grammarAccess.getPreExpressionAccess().getPreDecExpressionExpressionAction_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostIncDecExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostIncDecExpression__Group__0__Impl
	rule__PostIncDecExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncDecExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostIncDecExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
	{ after(grammarAccess.getPostIncDecExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncDecExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostIncDecExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncDecExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostIncDecExpressionAccess().getGroup_1()); }
	(rule__PostIncDecExpression__Group_1__0)*
	{ after(grammarAccess.getPostIncDecExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostIncDecExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostIncDecExpression__Group_1__0__Impl
	rule__PostIncDecExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncDecExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostIncDecExpressionAccess().getPostIncDecExpressionExpressionAction_1_0()); }
	()
	{ after(grammarAccess.getPostIncDecExpressionAccess().getPostIncDecExpressionExpressionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncDecExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostIncDecExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncDecExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostIncDecExpressionAccess().getPostOpAssignment_1_1()); }
	(rule__PostIncDecExpression__PostOpAssignment_1_1)
	{ after(grammarAccess.getPostIncDecExpressionAccess().getPostOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_4__0__Impl
	rule__PrimaryExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_4__1__Impl
	rule__PrimaryExpression__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_4_1()); }
	ruleExpression
	{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_4__2__Impl
	rule__PrimaryExpression__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_4_2()); }
	(rule__PrimaryExpression__Group_4_2__0)?
	{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_4_3()); }
	')'
	{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_4_2__0__Impl
	rule__PrimaryExpression__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getTupleMembersAction_4_2_0()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getTupleMembersAction_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_4_2_1()); }
		(rule__PrimaryExpression__Group_4_2_1__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_4_2_1()); }
	)
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_4_2_1()); }
		(rule__PrimaryExpression__Group_4_2_1__0)*
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_4_2_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_4_2_1__0__Impl
	rule__PrimaryExpression__Group_4_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getMembersAssignment_4_2_1_0()); }
	(rule__PrimaryExpression__MembersAssignment_4_2_1_0)
	{ after(grammarAccess.getPrimaryExpressionAccess().getMembersAssignment_4_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_4_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getMembersAssignment_4_2_1_1()); }
	(rule__PrimaryExpression__MembersAssignment_4_2_1_1)?
	{ after(grammarAccess.getPrimaryExpressionAccess().getMembersAssignment_4_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_5__0__Impl
	rule__PrimaryExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_5_0()); }
	'('
	{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_5__1__Impl
	rule__PrimaryExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getTupleSeparatorParserRuleCall_5_1()); }
	ruleTupleSeparator
	{ after(grammarAccess.getPrimaryExpressionAccess().getTupleSeparatorParserRuleCall_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_5__2__Impl
	rule__PrimaryExpression__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_5_2()); }
	(rule__PrimaryExpression__Group_5_2__0)
	{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_5_3()); }
	')'
	{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_5_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_5_2__0__Impl
	rule__PrimaryExpression__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getTupleMembersAction_5_2_0()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getTupleMembersAction_5_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_5_2__1__Impl
	rule__PrimaryExpression__Group_5_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getMembersAssignment_5_2_1()); }
	(rule__PrimaryExpression__MembersAssignment_5_2_1)?
	{ after(grammarAccess.getPrimaryExpressionAccess().getMembersAssignment_5_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_5_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_5_2_2()); }
	(rule__PrimaryExpression__Group_5_2_2__0)*
	{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_5_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_5_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_5_2_2__0__Impl
	rule__PrimaryExpression__Group_5_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getMembersAssignment_5_2_2_0()); }
	(rule__PrimaryExpression__MembersAssignment_5_2_2_0)
	{ after(grammarAccess.getPrimaryExpressionAccess().getMembersAssignment_5_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_5_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getMembersAssignment_5_2_2_1()); }
	(rule__PrimaryExpression__MembersAssignment_5_2_2_1)?
	{ after(grammarAccess.getPrimaryExpressionAccess().getMembersAssignment_5_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_6__0__Impl
	rule__PrimaryExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_6_0()); }
	'('
	{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_6__1__Impl
	rule__PrimaryExpression__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_6_1()); }
	')'
	{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getTupleAction_6_2()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getTupleAction_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GasleftFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GasleftFunction__Group__0__Impl
	rule__GasleftFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GasleftFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGasleftFunctionAccess().getNameAssignment_0()); }
	(rule__GasleftFunction__NameAssignment_0)
	{ after(grammarAccess.getGasleftFunctionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GasleftFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GasleftFunction__Group__1__Impl
	rule__GasleftFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GasleftFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGasleftFunctionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getGasleftFunctionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GasleftFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GasleftFunction__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GasleftFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGasleftFunctionAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getGasleftFunctionAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ether__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ether__Group__0__Impl
	rule__Ether__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ether__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEtherAccess().getValueAssignment_0()); }
	(rule__Ether__ValueAssignment_0)
	{ after(grammarAccess.getEtherAccess().getValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ether__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ether__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ether__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEtherAccess().getEtherAssignment_1()); }
	(rule__Ether__EtherAssignment_1)
	{ after(grammarAccess.getEtherAccess().getEtherAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Time__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Time__Group__0__Impl
	rule__Time__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeAccess().getValueAssignment_0()); }
	(rule__Time__ValueAssignment_0)
	{ after(grammarAccess.getTimeAccess().getValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Time__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeAccess().getTimeAssignment_1()); }
	(rule__Time__TimeAssignment_1)
	{ after(grammarAccess.getTimeAccess().getTimeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeCast__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeCast__Group__0__Impl
	rule__TypeCast__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCast__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeCastAccess().getValueAssignment_0()); }
	(rule__TypeCast__ValueAssignment_0)
	{ after(grammarAccess.getTypeCastAccess().getValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCast__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeCast__Group__1__Impl
	rule__TypeCast__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCast__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeCastAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getTypeCastAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCast__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeCast__Group__2__Impl
	rule__TypeCast__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCast__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeCastAccess().getExpressionAssignment_2()); }
	(rule__TypeCast__ExpressionAssignment_2)
	{ after(grammarAccess.getTypeCastAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCast__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeCast__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCast__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeCastAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getTypeCastAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Now__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Now__Group__0__Impl
	rule__Now__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Now__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNowAccess().getNowAction_0()); }
	()
	{ after(grammarAccess.getNowAccess().getNowAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Now__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Now__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Now__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNowAccess().getNowKeyword_1()); }
	'now'
	{ after(grammarAccess.getNowAccess().getNowKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SpecialVariables__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialVariables__Group__0__Impl
	rule__SpecialVariables__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialVariables__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecialVariablesAccess().getTypeAssignment_0()); }
	(rule__SpecialVariables__TypeAssignment_0)
	{ after(grammarAccess.getSpecialVariablesAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialVariables__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialVariables__Group__1__Impl
	rule__SpecialVariables__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialVariables__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecialVariablesAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getSpecialVariablesAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialVariables__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialVariables__Group__2__Impl
	rule__SpecialVariables__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialVariables__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecialVariablesAccess().getFieldAssignment_2()); }
	(rule__SpecialVariables__FieldAssignment_2)
	{ after(grammarAccess.getSpecialVariablesAccess().getFieldAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialVariables__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialVariables__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialVariables__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecialVariablesAccess().getQualifiersAssignment_3()); }
	(rule__SpecialVariables__QualifiersAssignment_3)*
	{ after(grammarAccess.getSpecialVariablesAccess().getQualifiersAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Solidity__ImportDirectiveAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSolidityAccess().getImportDirectiveImportDirectiveParserRuleCall_0_0()); }
		ruleImportDirective
		{ after(grammarAccess.getSolidityAccess().getImportDirectiveImportDirectiveParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Solidity__ContractAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSolidityAccess().getContractContractParserRuleCall_1_0()); }
		ruleContract
		{ after(grammarAccess.getSolidityAccess().getContractContractParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Solidity__LibraryAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSolidityAccess().getLibraryLibraryParserRuleCall_2_0()); }
		ruleLibrary
		{ after(grammarAccess.getSolidityAccess().getLibraryLibraryParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__ImportURIAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDirectiveAccess().getImportURISTRINGTerminalRuleCall_0_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getImportDirectiveAccess().getImportURISTRINGTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__UnitAliasAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDirectiveAccess().getUnitAliasIDTerminalRuleCall_1_3_0()); }
		RULE_ID
		{ after(grammarAccess.getImportDirectiveAccess().getUnitAliasIDTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__ImportURIAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDirectiveAccess().getImportURISTRINGTerminalRuleCall_1_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getImportDirectiveAccess().getImportURISTRINGTerminalRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__SymbolAliasesAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDirectiveAccess().getSymbolAliasesSymbolAliasParserRuleCall_2_2_0()); }
		ruleSymbolAlias
		{ after(grammarAccess.getImportDirectiveAccess().getSymbolAliasesSymbolAliasParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__SymbolAliasesAssignment_2_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDirectiveAccess().getSymbolAliasesSymbolAliasParserRuleCall_2_3_1_0()); }
		ruleSymbolAlias
		{ after(grammarAccess.getImportDirectiveAccess().getSymbolAliasesSymbolAliasParserRuleCall_2_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDirective__ImportURIAssignment_2_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDirectiveAccess().getImportURISTRINGTerminalRuleCall_2_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getImportDirectiveAccess().getImportURISTRINGTerminalRuleCall_2_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolAlias__SymbolAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSymbolAliasAccess().getSymbolIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSymbolAliasAccess().getSymbolIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolAlias__AliasAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSymbolAliasAccess().getAliasIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getSymbolAliasAccess().getAliasIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getContractAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__InheritanceSpecifiersAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractAccess().getInheritanceSpecifiersInheritanceSpecifierParserRuleCall_2_1_0()); }
		ruleInheritanceSpecifier
		{ after(grammarAccess.getContractAccess().getInheritanceSpecifiersInheritanceSpecifierParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__InheritanceSpecifiersAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractAccess().getInheritanceSpecifiersInheritanceSpecifierParserRuleCall_2_2_1_0()); }
		ruleInheritanceSpecifier
		{ after(grammarAccess.getContractAccess().getInheritanceSpecifiersInheritanceSpecifierParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__BodyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractAccess().getBodyDefinitionBodyParserRuleCall_3_0()); }
		ruleDefinitionBody
		{ after(grammarAccess.getContractAccess().getBodyDefinitionBodyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLibraryAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLibraryAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__InheritanceSpecifiersAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLibraryAccess().getInheritanceSpecifiersInheritanceSpecifierParserRuleCall_2_1_0()); }
		ruleInheritanceSpecifier
		{ after(grammarAccess.getLibraryAccess().getInheritanceSpecifiersInheritanceSpecifierParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__InheritanceSpecifiersAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLibraryAccess().getInheritanceSpecifiersInheritanceSpecifierParserRuleCall_2_2_1_0()); }
		ruleInheritanceSpecifier
		{ after(grammarAccess.getLibraryAccess().getInheritanceSpecifiersInheritanceSpecifierParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__BodyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLibraryAccess().getBodyDefinitionBodyParserRuleCall_3_0()); }
		ruleDefinitionBody
		{ after(grammarAccess.getLibraryAccess().getBodyDefinitionBodyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__FunctionsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionBodyAccess().getFunctionsFunctionDefinitionParserRuleCall_2_0_0()); }
		ruleFunctionDefinition
		{ after(grammarAccess.getDefinitionBodyAccess().getFunctionsFunctionDefinitionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__StructsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionBodyAccess().getStructsStructDefinitionParserRuleCall_2_1_0()); }
		ruleStructDefinition
		{ after(grammarAccess.getDefinitionBodyAccess().getStructsStructDefinitionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__EnumsAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionBodyAccess().getEnumsEnumDefinitionParserRuleCall_2_2_0()); }
		ruleEnumDefinition
		{ after(grammarAccess.getDefinitionBodyAccess().getEnumsEnumDefinitionParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__VariablesAssignment_2_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionBodyAccess().getVariablesVariableDeclarationParserRuleCall_2_3_0_0()); }
		ruleVariableDeclaration
		{ after(grammarAccess.getDefinitionBodyAccess().getVariablesVariableDeclarationParserRuleCall_2_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__ModifiersAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionBodyAccess().getModifiersModifierParserRuleCall_2_4_0()); }
		ruleModifier
		{ after(grammarAccess.getDefinitionBodyAccess().getModifiersModifierParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__EventsAssignment_2_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionBodyAccess().getEventsEventParserRuleCall_2_5_0()); }
		ruleEvent
		{ after(grammarAccess.getDefinitionBodyAccess().getEventsEventParserRuleCall_2_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InheritanceSpecifier__SuperTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInheritanceSpecifierAccess().getSuperTypeContractOrLibraryCrossReference_0_0()); }
		(
			{ before(grammarAccess.getInheritanceSpecifierAccess().getSuperTypeContractOrLibraryIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getInheritanceSpecifierAccess().getSuperTypeContractOrLibraryIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getInheritanceSpecifierAccess().getSuperTypeContractOrLibraryCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InheritanceSpecifier__ArgsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInheritanceSpecifierAccess().getArgsFunctionCallListArgumentsParserRuleCall_1_0()); }
		ruleFunctionCallListArguments
		{ after(grammarAccess.getInheritanceSpecifierAccess().getArgsFunctionCallListArgumentsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__ArgumentsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallListArgumentsAccess().getArgumentsExpressionParserRuleCall_2_0_0()); }
		ruleExpression
		{ after(grammarAccess.getFunctionCallListArgumentsAccess().getArgumentsExpressionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallListArguments__ArgumentsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallListArgumentsAccess().getArgumentsExpressionParserRuleCall_2_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getFunctionCallListArgumentsAccess().getArgumentsExpressionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__ArgsAssignment_0_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallArgumentsAccess().getArgsFunctionCallArgParserRuleCall_0_3_0_0()); }
		ruleFunctionCallArg
		{ after(grammarAccess.getFunctionCallArgumentsAccess().getArgsFunctionCallArgParserRuleCall_0_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArguments__ArgsAssignment_0_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallArgumentsAccess().getArgsFunctionCallArgParserRuleCall_0_3_1_1_0()); }
		ruleFunctionCallArg
		{ after(grammarAccess.getFunctionCallArgumentsAccess().getArgsFunctionCallArgParserRuleCall_0_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArg__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallArgAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionCallArgAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArg__ExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallArgAccess().getExprExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getFunctionCallArgAccess().getExprExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__VisibilityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getVisibilityVisibilityEnumEnumRuleCall_0_0()); }
		ruleVisibilityEnum
		{ after(grammarAccess.getFunctionDefinitionAccess().getVisibilityVisibilityEnumEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__PayableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getPayablePayableKeyword_1_0()); }
		(
			{ before(grammarAccess.getFunctionDefinitionAccess().getPayablePayableKeyword_1_0()); }
			'payable'
			{ after(grammarAccess.getFunctionDefinitionAccess().getPayablePayableKeyword_1_0()); }
		)
		{ after(grammarAccess.getFunctionDefinitionAccess().getPayablePayableKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionDefinitionAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__ParametersAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getParametersParameterListParserRuleCall_4_0()); }
		ruleParameterList
		{ after(grammarAccess.getFunctionDefinitionAccess().getParametersParameterListParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__OptionalElementsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getOptionalElementsFunctionDefinitionOptionalElementParserRuleCall_5_0()); }
		ruleFunctionDefinitionOptionalElement
		{ after(grammarAccess.getFunctionDefinitionAccess().getOptionalElementsFunctionDefinitionOptionalElementParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__ReturnParametersAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getReturnParametersReturnsParameterListParserRuleCall_6_1_0()); }
		ruleReturnsParameterList
		{ after(grammarAccess.getFunctionDefinitionAccess().getReturnParametersReturnsParameterListParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__BlockAssignment_7_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getBlockBodyParserRuleCall_7_0_0()); }
		ruleBody
		{ after(grammarAccess.getFunctionDefinitionAccess().getBlockBodyParserRuleCall_7_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VisibilitySpecifier__VisibilityAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisibilitySpecifierAccess().getVisibilityVisibilityEnumEnumRuleCall_0()); }
		ruleVisibilityEnum
		{ after(grammarAccess.getVisibilitySpecifierAccess().getVisibilityVisibilityEnumEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__VisibilityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDefinitionAccess().getVisibilityVisibilityEnumEnumRuleCall_0_0()); }
		ruleVisibilityEnum
		{ after(grammarAccess.getStructDefinitionAccess().getVisibilityVisibilityEnumEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getStructDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDefinition__MembersAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDefinitionAccess().getMembersVariableDeclarationParserRuleCall_4_0_0()); }
		ruleVariableDeclaration
		{ after(grammarAccess.getStructDefinitionAccess().getMembersVariableDeclarationParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__VisibilityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumDefinitionAccess().getVisibilityVisibilityEnumEnumRuleCall_0_0()); }
		ruleVisibilityEnum
		{ after(grammarAccess.getEnumDefinitionAccess().getVisibilityVisibilityEnumEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__MembersAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumDefinitionAccess().getMembersEnumValueParserRuleCall_4_0_0()); }
		ruleEnumValue
		{ after(grammarAccess.getEnumDefinitionAccess().getMembersEnumValueParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__MembersAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumDefinitionAccess().getMembersEnumValueParserRuleCall_4_1_1_0()); }
		ruleEnumValue
		{ after(grammarAccess.getEnumDefinitionAccess().getMembersEnumValueParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumValueAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumValueAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardVariableDeclarationAccess().getTypeStandardTypeParserRuleCall_0_0()); }
		ruleStandardType
		{ after(grammarAccess.getStandardVariableDeclarationAccess().getTypeStandardTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__OptionalElementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardVariableDeclarationAccess().getOptionalElementsVariableDeclarationOptionalElementParserRuleCall_1_0()); }
		ruleVariableDeclarationOptionalElement
		{ after(grammarAccess.getStandardVariableDeclarationAccess().getOptionalElementsVariableDeclarationOptionalElementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__VariableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardVariableDeclarationAccess().getVariableVariableParserRuleCall_2_0()); }
		ruleVariable
		{ after(grammarAccess.getStandardVariableDeclarationAccess().getVariableVariableParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVariableDeclaration__ExpressionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardVariableDeclarationAccess().getExpressionExpressionParserRuleCall_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getStandardVariableDeclarationAccess().getExpressionExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableDeclaration__VarTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarVariableDeclarationAccess().getVarTypeVarTypeParserRuleCall_0_0()); }
		ruleVarType
		{ after(grammarAccess.getVarVariableDeclarationAccess().getVarTypeVarTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableDeclaration__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarVariableDeclarationAccess().getVariableVariableParserRuleCall_1_0()); }
		ruleVariable
		{ after(grammarAccess.getVarVariableDeclarationAccess().getVariableVariableParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableDeclaration__ExpressionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarVariableDeclarationAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getVarVariableDeclarationAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableTupleVariableDeclaration__VarTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getVarTypeVarTypeParserRuleCall_0_0()); }
		ruleVarType
		{ after(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getVarTypeVarTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableTupleVariableDeclaration__TupleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getTupleTupleParserRuleCall_1_0()); }
		ruleTuple
		{ after(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getTupleTupleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarVariableTupleVariableDeclaration__ExpressionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getVarVariableTupleVariableDeclarationAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationSpecifier__LocationAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocationSpecifierAccess().getLocationLocationSpecifierEnumEnumRuleCall_0()); }
		ruleLocationSpecifierEnum
		{ after(grammarAccess.getLocationSpecifierAccess().getLocationLocationSpecifierEnumEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__IsVarTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getIsVarTypeVarTypeParserRuleCall_1_0()); }
		ruleVarType
		{ after(grammarAccess.getTypeAccess().getIsVarTypeVarTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardType__DimensionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardTypeAccess().getDimensionArrayDimensionsParserRuleCall_0_1_0()); }
		ruleArrayDimensions
		{ after(grammarAccess.getStandardTypeAccess().getDimensionArrayDimensionsParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardTypeWithoutQualifiedIdentifier__DimensionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getDimensionArrayDimensionsParserRuleCall_0_1_0()); }
		ruleArrayDimensions
		{ after(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getDimensionArrayDimensionsParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementaryType__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementaryTypeAccess().getNameElementaryTypeNameEnumEnumRuleCall_0()); }
		ruleElementaryTypeNameEnum
		{ after(grammarAccess.getElementaryTypeAccess().getNameElementaryTypeNameEnumEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__KeyTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingAccess().getKeyTypeElementaryTypeNameEnumEnumRuleCall_2_0()); }
		ruleElementaryTypeNameEnum
		{ after(grammarAccess.getMappingAccess().getKeyTypeElementaryTypeNameEnumEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__ValueTypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingAccess().getValueTypeTypeParserRuleCall_4_0()); }
		ruleType
		{ after(grammarAccess.getMappingAccess().getValueTypeTypeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayDimensionsAccess().getValueExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getArrayDimensionsAccess().getValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensions__ValueAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayDimensionsAccess().getValueExpressionParserRuleCall_4_1_0()); }
		ruleExpression
		{ after(grammarAccess.getArrayDimensionsAccess().getValueExpressionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__MembersAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleAccess().getMembersExpressionParserRuleCall_2_0_0()); }
		ruleExpression
		{ after(grammarAccess.getTupleAccess().getMembersExpressionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__MembersAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleAccess().getMembersTupleSeparatorParserRuleCall_2_1_0_0()); }
		ruleTupleSeparator
		{ after(grammarAccess.getTupleAccess().getMembersTupleSeparatorParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__MembersAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleAccess().getMembersExpressionParserRuleCall_2_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getTupleAccess().getMembersExpressionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__PtionalElementsAssignment_0_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatementAccess().getPtionalElementsVariableDeclarationOptionalElementParserRuleCall_0_0_1_1_0()); }
		ruleVariableDeclarationOptionalElement
		{ after(grammarAccess.getSimpleStatementAccess().getPtionalElementsVariableDeclarationOptionalElementParserRuleCall_0_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__VariableAssignment_0_0_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatementAccess().getVariableVariableParserRuleCall_0_0_1_2_0()); }
		ruleVariable
		{ after(grammarAccess.getSimpleStatementAccess().getVariableVariableParserRuleCall_0_0_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__ExpressionAssignment_0_0_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatementAccess().getExpressionExpressionParserRuleCall_0_0_1_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSimpleStatementAccess().getExpressionExpressionParserRuleCall_0_0_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__VariableAssignment_0_1_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatementAccess().getVariableVariableParserRuleCall_0_1_1_0_1_0()); }
		ruleVariable
		{ after(grammarAccess.getSimpleStatementAccess().getVariableVariableParserRuleCall_0_1_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__ExpressionAssignment_0_1_1_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatementAccess().getExpressionExpressionParserRuleCall_0_1_1_0_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSimpleStatementAccess().getExpressionExpressionParserRuleCall_0_1_1_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__TupleAssignment_0_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatementAccess().getTupleTupleParserRuleCall_0_1_1_1_1_0()); }
		ruleTuple
		{ after(grammarAccess.getSimpleStatementAccess().getTupleTupleParserRuleCall_0_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__ExpressionAssignment_0_1_1_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatementAccess().getExpressionExpressionParserRuleCall_0_1_1_1_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSimpleStatementAccess().getExpressionExpressionParserRuleCall_0_1_1_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement__SemicolonAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatementAccess().getSemicolonSemicolonKeyword_1_0()); }
		(
			{ before(grammarAccess.getSimpleStatementAccess().getSemicolonSemicolonKeyword_1_0()); }
			';'
			{ after(grammarAccess.getSimpleStatementAccess().getSemicolonSemicolonKeyword_1_0()); }
		)
		{ after(grammarAccess.getSimpleStatementAccess().getSemicolonSemicolonKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__OptionalElementsAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatement2Access().getOptionalElementsVariableDeclarationOptionalElementParserRuleCall_0_1_1_0()); }
		ruleVariableDeclarationOptionalElement
		{ after(grammarAccess.getSimpleStatement2Access().getOptionalElementsVariableDeclarationOptionalElementParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__VariableAssignment_0_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatement2Access().getVariableVariableParserRuleCall_0_1_2_0()); }
		ruleVariable
		{ after(grammarAccess.getSimpleStatement2Access().getVariableVariableParserRuleCall_0_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__ExpressionAssignment_0_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatement2Access().getExpressionExpressionParserRuleCall_0_1_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSimpleStatement2Access().getExpressionExpressionParserRuleCall_0_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__VariableAssignment_1_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatement2Access().getVariableVariableParserRuleCall_1_1_0_1_0()); }
		ruleVariable
		{ after(grammarAccess.getSimpleStatement2Access().getVariableVariableParserRuleCall_1_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__ExpressionAssignment_1_1_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatement2Access().getExpressionExpressionParserRuleCall_1_1_0_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSimpleStatement2Access().getExpressionExpressionParserRuleCall_1_1_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__TupleAssignment_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatement2Access().getTupleTupleParserRuleCall_1_1_1_1_0()); }
		ruleTuple
		{ after(grammarAccess.getSimpleStatement2Access().getTupleTupleParserRuleCall_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStatement2__ExpressionAssignment_1_1_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStatement2Access().getExpressionExpressionParserRuleCall_1_1_1_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSimpleStatement2Access().getExpressionExpressionParserRuleCall_1_1_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__ExpressionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__IdentifierAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifiedIdentifierAccess().getIdentifierIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getQualifiedIdentifierAccess().getIdentifierIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__QualifiersAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifiedIdentifierAccess().getQualifiersQualifierParserRuleCall_1_0()); }
		ruleQualifier
		{ after(grammarAccess.getQualifiedIdentifierAccess().getQualifiersQualifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__FieldAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getFieldIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldAccess().getFieldIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexAccess().getValueExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getIndexAccess().getValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__ArgumentsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getArgumentsFunctionCallArgumentsParserRuleCall_0()); }
		ruleFunctionCallArguments
		{ after(grammarAccess.getArgumentsAccess().getArgumentsFunctionCallArgumentsParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModifierAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModifierAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__ParametersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModifierAccess().getParametersParameterListParserRuleCall_2_0()); }
		ruleParameterList
		{ after(grammarAccess.getModifierAccess().getParametersParameterListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__BlockAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModifierAccess().getBlockBodyParserRuleCall_3_0()); }
		ruleBody
		{ after(grammarAccess.getModifierAccess().getBlockBodyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__ParametersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getParametersParameterListParserRuleCall_2_0()); }
		ruleParameterList
		{ after(grammarAccess.getEventAccess().getParametersParameterListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierInvocation__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModifierInvocationAccess().getNameModifierCrossReference_0_0()); }
		(
			{ before(grammarAccess.getModifierInvocationAccess().getNameModifierIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getModifierInvocationAccess().getNameModifierIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getModifierInvocationAccess().getNameModifierCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierInvocation__ArgsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModifierInvocationAccess().getArgsFunctionCallListArgumentsParserRuleCall_1_0()); }
		ruleFunctionCallListArguments
		{ after(grammarAccess.getModifierInvocationAccess().getArgsFunctionCallListArgumentsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParametersAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getParametersVariableDeclarationParserRuleCall_2_0_0()); }
		ruleVariableDeclaration
		{ after(grammarAccess.getParameterListAccess().getParametersVariableDeclarationParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParametersAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getParametersVariableDeclarationParserRuleCall_2_1_1_0()); }
		ruleVariableDeclaration
		{ after(grammarAccess.getParameterListAccess().getParametersVariableDeclarationParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__ParametersAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnsParameterListAccess().getParametersReturnParameterDeclarationParserRuleCall_2_0_0()); }
		ruleReturnParameterDeclaration
		{ after(grammarAccess.getReturnsParameterListAccess().getParametersReturnParameterDeclarationParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnsParameterList__ParametersAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnsParameterListAccess().getParametersReturnParameterDeclarationParserRuleCall_2_1_1_0()); }
		ruleReturnParameterDeclaration
		{ after(grammarAccess.getReturnsParameterListAccess().getParametersReturnParameterDeclarationParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameterDeclaration__TypeRefAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnParameterDeclarationAccess().getTypeRefTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getReturnParameterDeclarationAccess().getTypeRefTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameterDeclaration__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnParameterDeclarationAccess().getVariableVariableParserRuleCall_1_0()); }
		ruleVariable
		{ after(grammarAccess.getReturnParameterDeclarationAccess().getVariableVariableParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteStatementAccess().getVariableQualifiedIdentifierParserRuleCall_1_0()); }
		ruleQualifiedIdentifier
		{ after(grammarAccess.getDeleteStatementAccess().getVariableQualifiedIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getConditionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getIfStatementAccess().getConditionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__TrueBodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getTrueBodyStatementParserRuleCall_4_0()); }
		ruleStatement
		{ after(grammarAccess.getIfStatementAccess().getTrueBodyStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__FalseBodyAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getFalseBodyStatementParserRuleCall_5_1_0()); }
		ruleStatement
		{ after(grammarAccess.getIfStatementAccess().getFalseBodyStatementParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementAccess().getConditionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getWhileStatementAccess().getConditionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__BodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementAccess().getBodyStatementParserRuleCall_4_0()); }
		ruleStatement
		{ after(grammarAccess.getWhileStatementAccess().getBodyStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__InitExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getInitExpressionSimpleStatement2ParserRuleCall_2_0()); }
		ruleSimpleStatement2
		{ after(grammarAccess.getForStatementAccess().getInitExpressionSimpleStatement2ParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__ConditionExpressionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getConditionExpressionExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getForStatementAccess().getConditionExpressionExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__LoopExpressionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getLoopExpressionExpressionStatementParserRuleCall_6_0()); }
		ruleExpressionStatement
		{ after(grammarAccess.getForStatementAccess().getLoopExpressionExpressionStatementParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__BodyAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getBodyStatementParserRuleCall_8_0()); }
		ruleStatement
		{ after(grammarAccess.getForStatementAccess().getBodyStatementParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__StatementsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyAccess().getStatementsStatementParserRuleCall_2_0_0()); }
		ruleStatement
		{ after(grammarAccess.getBodyAccess().getStatementsStatementParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__StatementsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyAccess().getStatementsStatementParserRuleCall_2_1_0()); }
		ruleStatement
		{ after(grammarAccess.getBodyAccess().getStatementsStatementParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialExpression__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecialExpressionAccess().getTypeSpecialExpressionTypeEnumEnumRuleCall_0_0()); }
		ruleSpecialExpressionTypeEnum
		{ after(grammarAccess.getSpecialExpressionAccess().getTypeSpecialExpressionTypeEnumEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialExpression__FieldOrMethodAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecialExpressionAccess().getFieldOrMethodFieldParserRuleCall_1_0()); }
		ruleField
		{ after(grammarAccess.getSpecialExpressionAccess().getFieldOrMethodFieldParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialExpression__QualifiersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecialExpressionAccess().getQualifiersAlternatives_2_0()); }
		(rule__SpecialExpression__QualifiersAlternatives_2_0)
		{ after(grammarAccess.getSpecialExpressionAccess().getQualifiersAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__AssignmentOpAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getAssignmentOpAssignmentOpEnumEnumRuleCall_1_0_1_0()); }
		ruleAssignmentOpEnum
		{ after(grammarAccess.getAssignmentAccess().getAssignmentOpAssignmentOpEnumEnumRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpressionAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_1_0_2_0()); }
		ruleExpression
		{ after(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__VariableAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getVariableVariableParserRuleCall_1_1_1_0()); }
		ruleVariable
		{ after(grammarAccess.getAssignmentAccess().getVariableVariableParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpressionAssignment_1_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_1_1_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_1_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
		ruleAnd
		{ after(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); }
		ruleEquality
		{ after(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__EqualityOpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getEqualityOpEqualityOpEnumEnumRuleCall_1_1_0()); }
		ruleEqualityOpEnum
		{ after(grammarAccess.getEqualityAccess().getEqualityOpEqualityOpEnumEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); }
		ruleComparison
		{ after(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__ComparisonOpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getComparisonOpComparisonOpEnumEnumRuleCall_1_1_0()); }
		ruleComparisonOpEnum
		{ after(grammarAccess.getComparisonAccess().getComparisonOpComparisonOpEnumEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getRightBitOrParserRuleCall_1_2_0()); }
		ruleBitOr
		{ after(grammarAccess.getComparisonAccess().getRightBitOrParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitOrAccess().getRightBitXorParserRuleCall_1_2_0()); }
		ruleBitXor
		{ after(grammarAccess.getBitOrAccess().getRightBitXorParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXor__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitXorAccess().getRightBitAndParserRuleCall_1_2_0()); }
		ruleBitAnd
		{ after(grammarAccess.getBitXorAccess().getRightBitAndParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAnd__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitAndAccess().getRightShiftParserRuleCall_1_2_0()); }
		ruleShift
		{ after(grammarAccess.getBitAndAccess().getRightShiftParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift__ShiftOpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShiftAccess().getShiftOpShiftOpEnumEnumRuleCall_1_1_0()); }
		ruleShiftOpEnum
		{ after(grammarAccess.getShiftAccess().getShiftOpShiftOpEnumEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShiftAccess().getRightAddSubParserRuleCall_1_2_0()); }
		ruleAddSub
		{ after(grammarAccess.getShiftAccess().getRightAddSubParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__AdditionOpAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddSubAccess().getAdditionOpAdditionOpEnumEnumRuleCall_1_0_1_0()); }
		ruleAdditionOpEnum
		{ after(grammarAccess.getAddSubAccess().getAdditionOpAdditionOpEnumEnumRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddSubAccess().getRightMulDivModParserRuleCall_1_0_2_0()); }
		ruleMulDivMod
		{ after(grammarAccess.getAddSubAccess().getRightMulDivModParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDivMod__MultipliciativeOpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulDivModAccess().getMultipliciativeOpMulDivModOpEnumEnumRuleCall_1_1_0()); }
		ruleMulDivModOpEnum
		{ after(grammarAccess.getMulDivModAccess().getMultipliciativeOpMulDivModOpEnumEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDivMod__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulDivModAccess().getRightExponentParserRuleCall_1_2_0()); }
		ruleExponent
		{ after(grammarAccess.getMulDivModAccess().getRightExponentParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExponentAccess().getRightUnaryExpressionParserRuleCall_1_2_0()); }
		ruleUnaryExpression
		{ after(grammarAccess.getExponentAccess().getRightUnaryExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotExpressionAccess().getExpressionUnaryExpressionParserRuleCall_1_0()); }
		ruleUnaryExpression
		{ after(grammarAccess.getNotExpressionAccess().getExpressionUnaryExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryNotExpression__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryNotExpressionAccess().getExpressionUnaryExpressionParserRuleCall_1_0()); }
		ruleUnaryExpression
		{ after(grammarAccess.getBinaryNotExpressionAccess().getExpressionUnaryExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SignExpression__SignOpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignExpressionAccess().getSignOpAlternatives_0_0()); }
		(rule__SignExpression__SignOpAlternatives_0_0)
		{ after(grammarAccess.getSignExpressionAccess().getSignOpAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SignExpression__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignExpressionAccess().getExpressionUnaryExpressionParserRuleCall_1_0()); }
		ruleUnaryExpression
		{ after(grammarAccess.getSignExpressionAccess().getExpressionUnaryExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewExpression__ContractAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNewExpressionAccess().getContractContractOrLibraryCrossReference_1_0()); }
		(
			{ before(grammarAccess.getNewExpressionAccess().getContractContractOrLibraryIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getNewExpressionAccess().getContractContractOrLibraryIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getNewExpressionAccess().getContractContractOrLibraryCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewExpression__ArgsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNewExpressionAccess().getArgsFunctionCallListArgumentsParserRuleCall_2_0()); }
		ruleFunctionCallListArguments
		{ after(grammarAccess.getNewExpressionAccess().getArgsFunctionCallListArgumentsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostIncDecExpression__PostOpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostIncDecExpressionAccess().getPostOpIncDecOpEnumEnumRuleCall_1_1_0()); }
		ruleIncDecOpEnum
		{ after(grammarAccess.getPostIncDecExpressionAccess().getPostOpIncDecOpEnumEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__MembersAssignment_4_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getMembersTupleSeparatorParserRuleCall_4_2_1_0_0()); }
		ruleTupleSeparator
		{ after(grammarAccess.getPrimaryExpressionAccess().getMembersTupleSeparatorParserRuleCall_4_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__MembersAssignment_4_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getMembersExpressionParserRuleCall_4_2_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getMembersExpressionParserRuleCall_4_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__MembersAssignment_5_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getMembersExpressionParserRuleCall_5_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getMembersExpressionParserRuleCall_5_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__MembersAssignment_5_2_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getMembersTupleSeparatorParserRuleCall_5_2_2_0_0()); }
		ruleTupleSeparator
		{ after(grammarAccess.getPrimaryExpressionAccess().getMembersTupleSeparatorParserRuleCall_5_2_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__MembersAssignment_5_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getMembersExpressionParserRuleCall_5_2_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getMembersExpressionParserRuleCall_5_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GasleftFunction__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGasleftFunctionAccess().getNameGasleftKeyword_0_0()); }
		(
			{ before(grammarAccess.getGasleftFunctionAccess().getNameGasleftKeyword_0_0()); }
			'gasleft'
			{ after(grammarAccess.getGasleftFunctionAccess().getNameGasleftKeyword_0_0()); }
		)
		{ after(grammarAccess.getGasleftFunctionAccess().getNameGasleftKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanConst__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanConstAccess().getValueBooleanLiteralEnumEnumRuleCall_0()); }
		ruleBooleanLiteralEnum
		{ after(grammarAccess.getBooleanConstAccess().getValueBooleanLiteralEnumEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberDimensionless__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberDimensionlessAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberDimensionlessAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ether__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEtherAccess().getValueINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getEtherAccess().getValueINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ether__EtherAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEtherAccess().getEtherEtherSubDenominationEnumEnumRuleCall_1_0()); }
		ruleEtherSubDenominationEnum
		{ after(grammarAccess.getEtherAccess().getEtherEtherSubDenominationEnumEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeAccess().getValueINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getTimeAccess().getValueINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__TimeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeAccess().getTimeTimeSubdenominationEnumEnumRuleCall_1_0()); }
		ruleTimeSubdenominationEnum
		{ after(grammarAccess.getTimeAccess().getTimeTimeSubdenominationEnumEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HexLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHexLiteralAccess().getValueHEXTerminalRuleCall_0()); }
		RULE_HEX
		{ after(grammarAccess.getHexLiteralAccess().getValueHEXTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecimalLiteralAccess().getValueDECIMALTerminalRuleCall_0()); }
		RULE_DECIMAL
		{ after(grammarAccess.getDecimalLiteralAccess().getValueDECIMALTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCast__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeCastAccess().getValueElementaryTypeNameEnumEnumRuleCall_0_0()); }
		ruleElementaryTypeNameEnum
		{ after(grammarAccess.getTypeCastAccess().getValueElementaryTypeNameEnumEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCast__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeCastAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getTypeCastAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialVariables__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecialVariablesAccess().getTypeSpecialVariablesTypeEnumParserRuleCall_0_0()); }
		ruleSpecialVariablesTypeEnum
		{ after(grammarAccess.getSpecialVariablesAccess().getTypeSpecialVariablesTypeEnumParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialVariables__FieldAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecialVariablesAccess().getFieldIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getSpecialVariablesAccess().getFieldIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialVariables__QualifiersAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecialVariablesAccess().getQualifiersQualifierParserRuleCall_3_0()); }
		ruleQualifier
		{ after(grammarAccess.getSpecialVariablesAccess().getQualifiersQualifierParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialVariablesTypeEnum__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecialVariablesTypeEnumAccess().getNameAlternatives_0()); }
		(rule__SpecialVariablesTypeEnum__NameAlternatives_0)
		{ after(grammarAccess.getSpecialVariablesTypeEnumAccess().getNameAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_HEX : '0x' ('0'..'9'|'A'..'F'|'a'..'f')+;

RULE_DECIMAL : RULE_INT '.' RULE_INT;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

RULE_BLOCK : 'block.' ('coinbase'|'difficulty'|'gaslimit'|'number'|'timestamp');

RULE_MSG : 'msg.' ('data'|'gas'|'sender'|'sig'|'value');

RULE_TX : 'tx.' ('gasprice'|'origin');
