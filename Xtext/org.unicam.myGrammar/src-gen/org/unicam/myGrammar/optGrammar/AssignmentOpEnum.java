/**
 * generated by Xtext 2.20.0
 */
package org.unicam.myGrammar.optGrammar;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Assignment Op Enum</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see org.unicam.myGrammar.optGrammar.OptGrammarPackage#getAssignmentOpEnum()
 * @model
 * @generated
 */
public enum AssignmentOpEnum implements Enumerator
{
  /**
   * The '<em><b>ASSIGN</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ASSIGN_VALUE
   * @generated
   * @ordered
   */
  ASSIGN(0, "ASSIGN", "="),

  /**
   * The '<em><b>ASSIGN OR</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ASSIGN_OR_VALUE
   * @generated
   * @ordered
   */
  ASSIGN_OR(1, "ASSIGN_OR", "|="),

  /**
   * The '<em><b>ASSIGN XOR</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ASSIGN_XOR_VALUE
   * @generated
   * @ordered
   */
  ASSIGN_XOR(2, "ASSIGN_XOR", "^="),

  /**
   * The '<em><b>ASSIGN AND</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ASSIGN_AND_VALUE
   * @generated
   * @ordered
   */
  ASSIGN_AND(3, "ASSIGN_AND", "&="),

  /**
   * The '<em><b>ASSIGN SHIFT LEFT</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ASSIGN_SHIFT_LEFT_VALUE
   * @generated
   * @ordered
   */
  ASSIGN_SHIFT_LEFT(4, "ASSIGN_SHIFT_LEFT", "<<="),

  /**
   * The '<em><b>ASSIGN SHIFT RIGHT</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ASSIGN_SHIFT_RIGHT_VALUE
   * @generated
   * @ordered
   */
  ASSIGN_SHIFT_RIGHT(5, "ASSIGN_SHIFT_RIGHT", ">>="),

  /**
   * The '<em><b>ASSIGN SHIFT RIGHT ARIMETIC</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ASSIGN_SHIFT_RIGHT_ARIMETIC_VALUE
   * @generated
   * @ordered
   */
  ASSIGN_SHIFT_RIGHT_ARIMETIC(6, "ASSIGN_SHIFT_RIGHT_ARIMETIC", ">>>="),

  /**
   * The '<em><b>ASSIGN ADD</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ASSIGN_ADD_VALUE
   * @generated
   * @ordered
   */
  ASSIGN_ADD(7, "ASSIGN_ADD", "+="),

  /**
   * The '<em><b>ASSIGN SUB</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ASSIGN_SUB_VALUE
   * @generated
   * @ordered
   */
  ASSIGN_SUB(8, "ASSIGN_SUB", "-="),

  /**
   * The '<em><b>ASSIGN MULT</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ASSIGN_MULT_VALUE
   * @generated
   * @ordered
   */
  ASSIGN_MULT(9, "ASSIGN_MULT", "*="),

  /**
   * The '<em><b>ASSIGN DIV</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ASSIGN_DIV_VALUE
   * @generated
   * @ordered
   */
  ASSIGN_DIV(10, "ASSIGN_DIV", "/="),

  /**
   * The '<em><b>ASSIGN MOD</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ASSIGN_MOD_VALUE
   * @generated
   * @ordered
   */
  ASSIGN_MOD(11, "ASSIGN_MOD", "%=");

  /**
   * The '<em><b>ASSIGN</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ASSIGN
   * @model literal="="
   * @generated
   * @ordered
   */
  public static final int ASSIGN_VALUE = 0;

  /**
   * The '<em><b>ASSIGN OR</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ASSIGN_OR
   * @model literal="|="
   * @generated
   * @ordered
   */
  public static final int ASSIGN_OR_VALUE = 1;

  /**
   * The '<em><b>ASSIGN XOR</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ASSIGN_XOR
   * @model literal="^="
   * @generated
   * @ordered
   */
  public static final int ASSIGN_XOR_VALUE = 2;

  /**
   * The '<em><b>ASSIGN AND</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ASSIGN_AND
   * @model literal="&amp;="
   * @generated
   * @ordered
   */
  public static final int ASSIGN_AND_VALUE = 3;

  /**
   * The '<em><b>ASSIGN SHIFT LEFT</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ASSIGN_SHIFT_LEFT
   * @model literal="&lt;&lt;="
   * @generated
   * @ordered
   */
  public static final int ASSIGN_SHIFT_LEFT_VALUE = 4;

  /**
   * The '<em><b>ASSIGN SHIFT RIGHT</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ASSIGN_SHIFT_RIGHT
   * @model literal="&gt;&gt;="
   * @generated
   * @ordered
   */
  public static final int ASSIGN_SHIFT_RIGHT_VALUE = 5;

  /**
   * The '<em><b>ASSIGN SHIFT RIGHT ARIMETIC</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ASSIGN_SHIFT_RIGHT_ARIMETIC
   * @model literal="&gt;&gt;&gt;="
   * @generated
   * @ordered
   */
  public static final int ASSIGN_SHIFT_RIGHT_ARIMETIC_VALUE = 6;

  /**
   * The '<em><b>ASSIGN ADD</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ASSIGN_ADD
   * @model literal="+="
   * @generated
   * @ordered
   */
  public static final int ASSIGN_ADD_VALUE = 7;

  /**
   * The '<em><b>ASSIGN SUB</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ASSIGN_SUB
   * @model literal="-="
   * @generated
   * @ordered
   */
  public static final int ASSIGN_SUB_VALUE = 8;

  /**
   * The '<em><b>ASSIGN MULT</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ASSIGN_MULT
   * @model literal="*="
   * @generated
   * @ordered
   */
  public static final int ASSIGN_MULT_VALUE = 9;

  /**
   * The '<em><b>ASSIGN DIV</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ASSIGN_DIV
   * @model literal="/="
   * @generated
   * @ordered
   */
  public static final int ASSIGN_DIV_VALUE = 10;

  /**
   * The '<em><b>ASSIGN MOD</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ASSIGN_MOD
   * @model literal="%="
   * @generated
   * @ordered
   */
  public static final int ASSIGN_MOD_VALUE = 11;

  /**
   * An array of all the '<em><b>Assignment Op Enum</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final AssignmentOpEnum[] VALUES_ARRAY =
    new AssignmentOpEnum[]
    {
      ASSIGN,
      ASSIGN_OR,
      ASSIGN_XOR,
      ASSIGN_AND,
      ASSIGN_SHIFT_LEFT,
      ASSIGN_SHIFT_RIGHT,
      ASSIGN_SHIFT_RIGHT_ARIMETIC,
      ASSIGN_ADD,
      ASSIGN_SUB,
      ASSIGN_MULT,
      ASSIGN_DIV,
      ASSIGN_MOD,
    };

  /**
   * A public read-only list of all the '<em><b>Assignment Op Enum</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<AssignmentOpEnum> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Assignment Op Enum</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static AssignmentOpEnum get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      AssignmentOpEnum result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Assignment Op Enum</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static AssignmentOpEnum getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      AssignmentOpEnum result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Assignment Op Enum</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static AssignmentOpEnum get(int value)
  {
    switch (value)
    {
      case ASSIGN_VALUE: return ASSIGN;
      case ASSIGN_OR_VALUE: return ASSIGN_OR;
      case ASSIGN_XOR_VALUE: return ASSIGN_XOR;
      case ASSIGN_AND_VALUE: return ASSIGN_AND;
      case ASSIGN_SHIFT_LEFT_VALUE: return ASSIGN_SHIFT_LEFT;
      case ASSIGN_SHIFT_RIGHT_VALUE: return ASSIGN_SHIFT_RIGHT;
      case ASSIGN_SHIFT_RIGHT_ARIMETIC_VALUE: return ASSIGN_SHIFT_RIGHT_ARIMETIC;
      case ASSIGN_ADD_VALUE: return ASSIGN_ADD;
      case ASSIGN_SUB_VALUE: return ASSIGN_SUB;
      case ASSIGN_MULT_VALUE: return ASSIGN_MULT;
      case ASSIGN_DIV_VALUE: return ASSIGN_DIV;
      case ASSIGN_MOD_VALUE: return ASSIGN_MOD;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private AssignmentOpEnum(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //AssignmentOpEnum
