/**
 * generated by Xtext 2.19.0
 */
package org.unicam.myGrammar.optGrammar.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.unicam.myGrammar.optGrammar.ArrayDeclaration;
import org.unicam.myGrammar.optGrammar.Declaration;
import org.unicam.myGrammar.optGrammar.FilledArray;
import org.unicam.myGrammar.optGrammar.IntLiteral;
import org.unicam.myGrammar.optGrammar.LocationSpecifierEnum;
import org.unicam.myGrammar.optGrammar.NamedType;
import org.unicam.myGrammar.optGrammar.OptGrammarPackage;
import org.unicam.myGrammar.optGrammar.StructDeclaration;
import org.unicam.myGrammar.optGrammar.VisibilityEnum;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Array Declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.unicam.myGrammar.optGrammar.impl.ArrayDeclarationImpl#getBlocks <em>Blocks</em>}</li>
 *   <li>{@link org.unicam.myGrammar.optGrammar.impl.ArrayDeclarationImpl#getVar <em>Var</em>}</li>
 *   <li>{@link org.unicam.myGrammar.optGrammar.impl.ArrayDeclarationImpl#getAccess <em>Access</em>}</li>
 *   <li>{@link org.unicam.myGrammar.optGrammar.impl.ArrayDeclarationImpl#getLocation <em>Location</em>}</li>
 *   <li>{@link org.unicam.myGrammar.optGrammar.impl.ArrayDeclarationImpl#isConstant <em>Constant</em>}</li>
 *   <li>{@link org.unicam.myGrammar.optGrammar.impl.ArrayDeclarationImpl#getVisibility <em>Visibility</em>}</li>
 *   <li>{@link org.unicam.myGrammar.optGrammar.impl.ArrayDeclarationImpl#getType <em>Type</em>}</li>
 *   <li>{@link org.unicam.myGrammar.optGrammar.impl.ArrayDeclarationImpl#getStrucType <em>Struc Type</em>}</li>
 *   <li>{@link org.unicam.myGrammar.optGrammar.impl.ArrayDeclarationImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.unicam.myGrammar.optGrammar.impl.ArrayDeclarationImpl#getSizes <em>Sizes</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ArrayDeclarationImpl extends ArrayDefinitionDeclarationImpl implements ArrayDeclaration
{
  /**
   * The cached value of the '{@link #getBlocks() <em>Blocks</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBlocks()
   * @generated
   * @ordered
   */
  protected FilledArray blocks;

  /**
   * The cached value of the '{@link #getVar() <em>Var</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVar()
   * @generated
   * @ordered
   */
  protected Declaration var;

  /**
   * The cached value of the '{@link #getAccess() <em>Access</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAccess()
   * @generated
   * @ordered
   */
  protected EObject access;

  /**
   * The cached value of the '{@link #getLocation() <em>Location</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocation()
   * @generated
   * @ordered
   */
  protected LocationSpecifierEnum location;

  /**
   * The default value of the '{@link #isConstant() <em>Constant</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isConstant()
   * @generated
   * @ordered
   */
  protected static final boolean CONSTANT_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isConstant() <em>Constant</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isConstant()
   * @generated
   * @ordered
   */
  protected boolean constant = CONSTANT_EDEFAULT;

  /**
   * The cached value of the '{@link #getVisibility() <em>Visibility</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibility()
   * @generated
   * @ordered
   */
  protected VisibilityEnum visibility;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected NamedType type;

  /**
   * The cached value of the '{@link #getStrucType() <em>Struc Type</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStrucType()
   * @generated
   * @ordered
   */
  protected StructDeclaration strucType;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getSizes() <em>Sizes</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSizes()
   * @generated
   * @ordered
   */
  protected EList<IntLiteral> sizes;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ArrayDeclarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OptGrammarPackage.Literals.ARRAY_DECLARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FilledArray getBlocks()
  {
    return blocks;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBlocks(FilledArray newBlocks, NotificationChain msgs)
  {
    FilledArray oldBlocks = blocks;
    blocks = newBlocks;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OptGrammarPackage.ARRAY_DECLARATION__BLOCKS, oldBlocks, newBlocks);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBlocks(FilledArray newBlocks)
  {
    if (newBlocks != blocks)
    {
      NotificationChain msgs = null;
      if (blocks != null)
        msgs = ((InternalEObject)blocks).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OptGrammarPackage.ARRAY_DECLARATION__BLOCKS, null, msgs);
      if (newBlocks != null)
        msgs = ((InternalEObject)newBlocks).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OptGrammarPackage.ARRAY_DECLARATION__BLOCKS, null, msgs);
      msgs = basicSetBlocks(newBlocks, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OptGrammarPackage.ARRAY_DECLARATION__BLOCKS, newBlocks, newBlocks));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Declaration getVar()
  {
    if (var != null && var.eIsProxy())
    {
      InternalEObject oldVar = (InternalEObject)var;
      var = (Declaration)eResolveProxy(oldVar);
      if (var != oldVar)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, OptGrammarPackage.ARRAY_DECLARATION__VAR, oldVar, var));
      }
    }
    return var;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Declaration basicGetVar()
  {
    return var;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVar(Declaration newVar)
  {
    Declaration oldVar = var;
    var = newVar;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OptGrammarPackage.ARRAY_DECLARATION__VAR, oldVar, var));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject getAccess()
  {
    return access;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAccess(EObject newAccess, NotificationChain msgs)
  {
    EObject oldAccess = access;
    access = newAccess;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OptGrammarPackage.ARRAY_DECLARATION__ACCESS, oldAccess, newAccess);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAccess(EObject newAccess)
  {
    if (newAccess != access)
    {
      NotificationChain msgs = null;
      if (access != null)
        msgs = ((InternalEObject)access).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OptGrammarPackage.ARRAY_DECLARATION__ACCESS, null, msgs);
      if (newAccess != null)
        msgs = ((InternalEObject)newAccess).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OptGrammarPackage.ARRAY_DECLARATION__ACCESS, null, msgs);
      msgs = basicSetAccess(newAccess, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OptGrammarPackage.ARRAY_DECLARATION__ACCESS, newAccess, newAccess));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LocationSpecifierEnum getLocation()
  {
    return location;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLocation(LocationSpecifierEnum newLocation, NotificationChain msgs)
  {
    LocationSpecifierEnum oldLocation = location;
    location = newLocation;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OptGrammarPackage.ARRAY_DECLARATION__LOCATION, oldLocation, newLocation);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLocation(LocationSpecifierEnum newLocation)
  {
    if (newLocation != location)
    {
      NotificationChain msgs = null;
      if (location != null)
        msgs = ((InternalEObject)location).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OptGrammarPackage.ARRAY_DECLARATION__LOCATION, null, msgs);
      if (newLocation != null)
        msgs = ((InternalEObject)newLocation).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OptGrammarPackage.ARRAY_DECLARATION__LOCATION, null, msgs);
      msgs = basicSetLocation(newLocation, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OptGrammarPackage.ARRAY_DECLARATION__LOCATION, newLocation, newLocation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isConstant()
  {
    return constant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setConstant(boolean newConstant)
  {
    boolean oldConstant = constant;
    constant = newConstant;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OptGrammarPackage.ARRAY_DECLARATION__CONSTANT, oldConstant, constant));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VisibilityEnum getVisibility()
  {
    return visibility;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVisibility(VisibilityEnum newVisibility, NotificationChain msgs)
  {
    VisibilityEnum oldVisibility = visibility;
    visibility = newVisibility;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OptGrammarPackage.ARRAY_DECLARATION__VISIBILITY, oldVisibility, newVisibility);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVisibility(VisibilityEnum newVisibility)
  {
    if (newVisibility != visibility)
    {
      NotificationChain msgs = null;
      if (visibility != null)
        msgs = ((InternalEObject)visibility).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OptGrammarPackage.ARRAY_DECLARATION__VISIBILITY, null, msgs);
      if (newVisibility != null)
        msgs = ((InternalEObject)newVisibility).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OptGrammarPackage.ARRAY_DECLARATION__VISIBILITY, null, msgs);
      msgs = basicSetVisibility(newVisibility, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OptGrammarPackage.ARRAY_DECLARATION__VISIBILITY, newVisibility, newVisibility));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NamedType getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetType(NamedType newType, NotificationChain msgs)
  {
    NamedType oldType = type;
    type = newType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OptGrammarPackage.ARRAY_DECLARATION__TYPE, oldType, newType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(NamedType newType)
  {
    if (newType != type)
    {
      NotificationChain msgs = null;
      if (type != null)
        msgs = ((InternalEObject)type).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OptGrammarPackage.ARRAY_DECLARATION__TYPE, null, msgs);
      if (newType != null)
        msgs = ((InternalEObject)newType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OptGrammarPackage.ARRAY_DECLARATION__TYPE, null, msgs);
      msgs = basicSetType(newType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OptGrammarPackage.ARRAY_DECLARATION__TYPE, newType, newType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StructDeclaration getStrucType()
  {
    if (strucType != null && strucType.eIsProxy())
    {
      InternalEObject oldStrucType = (InternalEObject)strucType;
      strucType = (StructDeclaration)eResolveProxy(oldStrucType);
      if (strucType != oldStrucType)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, OptGrammarPackage.ARRAY_DECLARATION__STRUC_TYPE, oldStrucType, strucType));
      }
    }
    return strucType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StructDeclaration basicGetStrucType()
  {
    return strucType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStrucType(StructDeclaration newStrucType)
  {
    StructDeclaration oldStrucType = strucType;
    strucType = newStrucType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OptGrammarPackage.ARRAY_DECLARATION__STRUC_TYPE, oldStrucType, strucType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OptGrammarPackage.ARRAY_DECLARATION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<IntLiteral> getSizes()
  {
    if (sizes == null)
    {
      sizes = new EObjectContainmentEList<IntLiteral>(IntLiteral.class, this, OptGrammarPackage.ARRAY_DECLARATION__SIZES);
    }
    return sizes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OptGrammarPackage.ARRAY_DECLARATION__BLOCKS:
        return basicSetBlocks(null, msgs);
      case OptGrammarPackage.ARRAY_DECLARATION__ACCESS:
        return basicSetAccess(null, msgs);
      case OptGrammarPackage.ARRAY_DECLARATION__LOCATION:
        return basicSetLocation(null, msgs);
      case OptGrammarPackage.ARRAY_DECLARATION__VISIBILITY:
        return basicSetVisibility(null, msgs);
      case OptGrammarPackage.ARRAY_DECLARATION__TYPE:
        return basicSetType(null, msgs);
      case OptGrammarPackage.ARRAY_DECLARATION__SIZES:
        return ((InternalEList<?>)getSizes()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OptGrammarPackage.ARRAY_DECLARATION__BLOCKS:
        return getBlocks();
      case OptGrammarPackage.ARRAY_DECLARATION__VAR:
        if (resolve) return getVar();
        return basicGetVar();
      case OptGrammarPackage.ARRAY_DECLARATION__ACCESS:
        return getAccess();
      case OptGrammarPackage.ARRAY_DECLARATION__LOCATION:
        return getLocation();
      case OptGrammarPackage.ARRAY_DECLARATION__CONSTANT:
        return isConstant();
      case OptGrammarPackage.ARRAY_DECLARATION__VISIBILITY:
        return getVisibility();
      case OptGrammarPackage.ARRAY_DECLARATION__TYPE:
        return getType();
      case OptGrammarPackage.ARRAY_DECLARATION__STRUC_TYPE:
        if (resolve) return getStrucType();
        return basicGetStrucType();
      case OptGrammarPackage.ARRAY_DECLARATION__NAME:
        return getName();
      case OptGrammarPackage.ARRAY_DECLARATION__SIZES:
        return getSizes();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OptGrammarPackage.ARRAY_DECLARATION__BLOCKS:
        setBlocks((FilledArray)newValue);
        return;
      case OptGrammarPackage.ARRAY_DECLARATION__VAR:
        setVar((Declaration)newValue);
        return;
      case OptGrammarPackage.ARRAY_DECLARATION__ACCESS:
        setAccess((EObject)newValue);
        return;
      case OptGrammarPackage.ARRAY_DECLARATION__LOCATION:
        setLocation((LocationSpecifierEnum)newValue);
        return;
      case OptGrammarPackage.ARRAY_DECLARATION__CONSTANT:
        setConstant((Boolean)newValue);
        return;
      case OptGrammarPackage.ARRAY_DECLARATION__VISIBILITY:
        setVisibility((VisibilityEnum)newValue);
        return;
      case OptGrammarPackage.ARRAY_DECLARATION__TYPE:
        setType((NamedType)newValue);
        return;
      case OptGrammarPackage.ARRAY_DECLARATION__STRUC_TYPE:
        setStrucType((StructDeclaration)newValue);
        return;
      case OptGrammarPackage.ARRAY_DECLARATION__NAME:
        setName((String)newValue);
        return;
      case OptGrammarPackage.ARRAY_DECLARATION__SIZES:
        getSizes().clear();
        getSizes().addAll((Collection<? extends IntLiteral>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OptGrammarPackage.ARRAY_DECLARATION__BLOCKS:
        setBlocks((FilledArray)null);
        return;
      case OptGrammarPackage.ARRAY_DECLARATION__VAR:
        setVar((Declaration)null);
        return;
      case OptGrammarPackage.ARRAY_DECLARATION__ACCESS:
        setAccess((EObject)null);
        return;
      case OptGrammarPackage.ARRAY_DECLARATION__LOCATION:
        setLocation((LocationSpecifierEnum)null);
        return;
      case OptGrammarPackage.ARRAY_DECLARATION__CONSTANT:
        setConstant(CONSTANT_EDEFAULT);
        return;
      case OptGrammarPackage.ARRAY_DECLARATION__VISIBILITY:
        setVisibility((VisibilityEnum)null);
        return;
      case OptGrammarPackage.ARRAY_DECLARATION__TYPE:
        setType((NamedType)null);
        return;
      case OptGrammarPackage.ARRAY_DECLARATION__STRUC_TYPE:
        setStrucType((StructDeclaration)null);
        return;
      case OptGrammarPackage.ARRAY_DECLARATION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case OptGrammarPackage.ARRAY_DECLARATION__SIZES:
        getSizes().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OptGrammarPackage.ARRAY_DECLARATION__BLOCKS:
        return blocks != null;
      case OptGrammarPackage.ARRAY_DECLARATION__VAR:
        return var != null;
      case OptGrammarPackage.ARRAY_DECLARATION__ACCESS:
        return access != null;
      case OptGrammarPackage.ARRAY_DECLARATION__LOCATION:
        return location != null;
      case OptGrammarPackage.ARRAY_DECLARATION__CONSTANT:
        return constant != CONSTANT_EDEFAULT;
      case OptGrammarPackage.ARRAY_DECLARATION__VISIBILITY:
        return visibility != null;
      case OptGrammarPackage.ARRAY_DECLARATION__TYPE:
        return type != null;
      case OptGrammarPackage.ARRAY_DECLARATION__STRUC_TYPE:
        return strucType != null;
      case OptGrammarPackage.ARRAY_DECLARATION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case OptGrammarPackage.ARRAY_DECLARATION__SIZES:
        return sizes != null && !sizes.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (constant: ");
    result.append(constant);
    result.append(", name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //ArrayDeclarationImpl
