/**
 * generated by Xtext 2.19.0
 */
package org.unicam.myGrammar.optGrammar.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.unicam.myGrammar.optGrammar.Contract;
import org.unicam.myGrammar.optGrammar.ImportDirective;
import org.unicam.myGrammar.optGrammar.Library;
import org.unicam.myGrammar.optGrammar.OptGrammarPackage;
import org.unicam.myGrammar.optGrammar.Solidity;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Solidity</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.unicam.myGrammar.optGrammar.impl.SolidityImpl#getImportDirective <em>Import Directive</em>}</li>
 *   <li>{@link org.unicam.myGrammar.optGrammar.impl.SolidityImpl#getContract <em>Contract</em>}</li>
 *   <li>{@link org.unicam.myGrammar.optGrammar.impl.SolidityImpl#getLibrary <em>Library</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SolidityImpl extends MinimalEObjectImpl.Container implements Solidity
{
  /**
   * The cached value of the '{@link #getImportDirective() <em>Import Directive</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImportDirective()
   * @generated
   * @ordered
   */
  protected EList<ImportDirective> importDirective;

  /**
   * The cached value of the '{@link #getContract() <em>Contract</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContract()
   * @generated
   * @ordered
   */
  protected EList<Contract> contract;

  /**
   * The cached value of the '{@link #getLibrary() <em>Library</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLibrary()
   * @generated
   * @ordered
   */
  protected EList<Library> library;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SolidityImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OptGrammarPackage.eINSTANCE.getSolidity();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ImportDirective> getImportDirective()
  {
    if (importDirective == null)
    {
      importDirective = new EObjectContainmentEList<ImportDirective>(ImportDirective.class, this, OptGrammarPackage.SOLIDITY__IMPORT_DIRECTIVE);
    }
    return importDirective;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Contract> getContract()
  {
    if (contract == null)
    {
      contract = new EObjectContainmentEList<Contract>(Contract.class, this, OptGrammarPackage.SOLIDITY__CONTRACT);
    }
    return contract;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Library> getLibrary()
  {
    if (library == null)
    {
      library = new EObjectContainmentEList<Library>(Library.class, this, OptGrammarPackage.SOLIDITY__LIBRARY);
    }
    return library;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OptGrammarPackage.SOLIDITY__IMPORT_DIRECTIVE:
        return ((InternalEList<?>)getImportDirective()).basicRemove(otherEnd, msgs);
      case OptGrammarPackage.SOLIDITY__CONTRACT:
        return ((InternalEList<?>)getContract()).basicRemove(otherEnd, msgs);
      case OptGrammarPackage.SOLIDITY__LIBRARY:
        return ((InternalEList<?>)getLibrary()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OptGrammarPackage.SOLIDITY__IMPORT_DIRECTIVE:
        return getImportDirective();
      case OptGrammarPackage.SOLIDITY__CONTRACT:
        return getContract();
      case OptGrammarPackage.SOLIDITY__LIBRARY:
        return getLibrary();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OptGrammarPackage.SOLIDITY__IMPORT_DIRECTIVE:
        getImportDirective().clear();
        getImportDirective().addAll((Collection<? extends ImportDirective>)newValue);
        return;
      case OptGrammarPackage.SOLIDITY__CONTRACT:
        getContract().clear();
        getContract().addAll((Collection<? extends Contract>)newValue);
        return;
      case OptGrammarPackage.SOLIDITY__LIBRARY:
        getLibrary().clear();
        getLibrary().addAll((Collection<? extends Library>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OptGrammarPackage.SOLIDITY__IMPORT_DIRECTIVE:
        getImportDirective().clear();
        return;
      case OptGrammarPackage.SOLIDITY__CONTRACT:
        getContract().clear();
        return;
      case OptGrammarPackage.SOLIDITY__LIBRARY:
        getLibrary().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OptGrammarPackage.SOLIDITY__IMPORT_DIRECTIVE:
        return importDirective != null && !importDirective.isEmpty();
      case OptGrammarPackage.SOLIDITY__CONTRACT:
        return contract != null && !contract.isEmpty();
      case OptGrammarPackage.SOLIDITY__LIBRARY:
        return library != null && !library.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //SolidityImpl
