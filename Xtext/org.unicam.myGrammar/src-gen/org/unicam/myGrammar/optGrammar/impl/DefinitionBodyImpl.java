/**
 * generated by Xtext 2.19.0
 */
package org.unicam.myGrammar.optGrammar.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.unicam.myGrammar.optGrammar.DefinitionBody;
import org.unicam.myGrammar.optGrammar.EnumDefinition;
import org.unicam.myGrammar.optGrammar.Event;
import org.unicam.myGrammar.optGrammar.FunctionDefinition;
import org.unicam.myGrammar.optGrammar.Modifier;
import org.unicam.myGrammar.optGrammar.OptGrammarPackage;
import org.unicam.myGrammar.optGrammar.Statement;
import org.unicam.myGrammar.optGrammar.StructDefinition;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Definition Body</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.unicam.myGrammar.optGrammar.impl.DefinitionBodyImpl#getFunctions <em>Functions</em>}</li>
 *   <li>{@link org.unicam.myGrammar.optGrammar.impl.DefinitionBodyImpl#getStructs <em>Structs</em>}</li>
 *   <li>{@link org.unicam.myGrammar.optGrammar.impl.DefinitionBodyImpl#getEnums <em>Enums</em>}</li>
 *   <li>{@link org.unicam.myGrammar.optGrammar.impl.DefinitionBodyImpl#getVariables <em>Variables</em>}</li>
 *   <li>{@link org.unicam.myGrammar.optGrammar.impl.DefinitionBodyImpl#getModifiers <em>Modifiers</em>}</li>
 *   <li>{@link org.unicam.myGrammar.optGrammar.impl.DefinitionBodyImpl#getEvents <em>Events</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DefinitionBodyImpl extends MinimalEObjectImpl.Container implements DefinitionBody
{
  /**
   * The cached value of the '{@link #getFunctions() <em>Functions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunctions()
   * @generated
   * @ordered
   */
  protected EList<FunctionDefinition> functions;

  /**
   * The cached value of the '{@link #getStructs() <em>Structs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStructs()
   * @generated
   * @ordered
   */
  protected EList<StructDefinition> structs;

  /**
   * The cached value of the '{@link #getEnums() <em>Enums</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnums()
   * @generated
   * @ordered
   */
  protected EList<EnumDefinition> enums;

  /**
   * The cached value of the '{@link #getVariables() <em>Variables</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariables()
   * @generated
   * @ordered
   */
  protected EList<Statement> variables;

  /**
   * The cached value of the '{@link #getModifiers() <em>Modifiers</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModifiers()
   * @generated
   * @ordered
   */
  protected EList<Modifier> modifiers;

  /**
   * The cached value of the '{@link #getEvents() <em>Events</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvents()
   * @generated
   * @ordered
   */
  protected EList<Event> events;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DefinitionBodyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OptGrammarPackage.Literals.DEFINITION_BODY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<FunctionDefinition> getFunctions()
  {
    if (functions == null)
    {
      functions = new EObjectContainmentEList<FunctionDefinition>(FunctionDefinition.class, this, OptGrammarPackage.DEFINITION_BODY__FUNCTIONS);
    }
    return functions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<StructDefinition> getStructs()
  {
    if (structs == null)
    {
      structs = new EObjectContainmentEList<StructDefinition>(StructDefinition.class, this, OptGrammarPackage.DEFINITION_BODY__STRUCTS);
    }
    return structs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<EnumDefinition> getEnums()
  {
    if (enums == null)
    {
      enums = new EObjectContainmentEList<EnumDefinition>(EnumDefinition.class, this, OptGrammarPackage.DEFINITION_BODY__ENUMS);
    }
    return enums;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Statement> getVariables()
  {
    if (variables == null)
    {
      variables = new EObjectContainmentEList<Statement>(Statement.class, this, OptGrammarPackage.DEFINITION_BODY__VARIABLES);
    }
    return variables;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Modifier> getModifiers()
  {
    if (modifiers == null)
    {
      modifiers = new EObjectContainmentEList<Modifier>(Modifier.class, this, OptGrammarPackage.DEFINITION_BODY__MODIFIERS);
    }
    return modifiers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Event> getEvents()
  {
    if (events == null)
    {
      events = new EObjectContainmentEList<Event>(Event.class, this, OptGrammarPackage.DEFINITION_BODY__EVENTS);
    }
    return events;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OptGrammarPackage.DEFINITION_BODY__FUNCTIONS:
        return ((InternalEList<?>)getFunctions()).basicRemove(otherEnd, msgs);
      case OptGrammarPackage.DEFINITION_BODY__STRUCTS:
        return ((InternalEList<?>)getStructs()).basicRemove(otherEnd, msgs);
      case OptGrammarPackage.DEFINITION_BODY__ENUMS:
        return ((InternalEList<?>)getEnums()).basicRemove(otherEnd, msgs);
      case OptGrammarPackage.DEFINITION_BODY__VARIABLES:
        return ((InternalEList<?>)getVariables()).basicRemove(otherEnd, msgs);
      case OptGrammarPackage.DEFINITION_BODY__MODIFIERS:
        return ((InternalEList<?>)getModifiers()).basicRemove(otherEnd, msgs);
      case OptGrammarPackage.DEFINITION_BODY__EVENTS:
        return ((InternalEList<?>)getEvents()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OptGrammarPackage.DEFINITION_BODY__FUNCTIONS:
        return getFunctions();
      case OptGrammarPackage.DEFINITION_BODY__STRUCTS:
        return getStructs();
      case OptGrammarPackage.DEFINITION_BODY__ENUMS:
        return getEnums();
      case OptGrammarPackage.DEFINITION_BODY__VARIABLES:
        return getVariables();
      case OptGrammarPackage.DEFINITION_BODY__MODIFIERS:
        return getModifiers();
      case OptGrammarPackage.DEFINITION_BODY__EVENTS:
        return getEvents();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OptGrammarPackage.DEFINITION_BODY__FUNCTIONS:
        getFunctions().clear();
        getFunctions().addAll((Collection<? extends FunctionDefinition>)newValue);
        return;
      case OptGrammarPackage.DEFINITION_BODY__STRUCTS:
        getStructs().clear();
        getStructs().addAll((Collection<? extends StructDefinition>)newValue);
        return;
      case OptGrammarPackage.DEFINITION_BODY__ENUMS:
        getEnums().clear();
        getEnums().addAll((Collection<? extends EnumDefinition>)newValue);
        return;
      case OptGrammarPackage.DEFINITION_BODY__VARIABLES:
        getVariables().clear();
        getVariables().addAll((Collection<? extends Statement>)newValue);
        return;
      case OptGrammarPackage.DEFINITION_BODY__MODIFIERS:
        getModifiers().clear();
        getModifiers().addAll((Collection<? extends Modifier>)newValue);
        return;
      case OptGrammarPackage.DEFINITION_BODY__EVENTS:
        getEvents().clear();
        getEvents().addAll((Collection<? extends Event>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OptGrammarPackage.DEFINITION_BODY__FUNCTIONS:
        getFunctions().clear();
        return;
      case OptGrammarPackage.DEFINITION_BODY__STRUCTS:
        getStructs().clear();
        return;
      case OptGrammarPackage.DEFINITION_BODY__ENUMS:
        getEnums().clear();
        return;
      case OptGrammarPackage.DEFINITION_BODY__VARIABLES:
        getVariables().clear();
        return;
      case OptGrammarPackage.DEFINITION_BODY__MODIFIERS:
        getModifiers().clear();
        return;
      case OptGrammarPackage.DEFINITION_BODY__EVENTS:
        getEvents().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OptGrammarPackage.DEFINITION_BODY__FUNCTIONS:
        return functions != null && !functions.isEmpty();
      case OptGrammarPackage.DEFINITION_BODY__STRUCTS:
        return structs != null && !structs.isEmpty();
      case OptGrammarPackage.DEFINITION_BODY__ENUMS:
        return enums != null && !enums.isEmpty();
      case OptGrammarPackage.DEFINITION_BODY__VARIABLES:
        return variables != null && !variables.isEmpty();
      case OptGrammarPackage.DEFINITION_BODY__MODIFIERS:
        return modifiers != null && !modifiers.isEmpty();
      case OptGrammarPackage.DEFINITION_BODY__EVENTS:
        return events != null && !events.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //DefinitionBodyImpl
