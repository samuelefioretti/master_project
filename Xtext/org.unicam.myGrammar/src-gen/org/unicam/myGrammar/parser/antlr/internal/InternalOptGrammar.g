/*
 * generated by Xtext 2.19.0
 */
grammar InternalOptGrammar;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.unicam.myGrammar.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.unicam.myGrammar.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.unicam.myGrammar.services.OptGrammarGrammarAccess;

}

@parser::members {

 	private OptGrammarGrammarAccess grammarAccess;

    public InternalOptGrammarParser(TokenStream input, OptGrammarGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected OptGrammarGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getOperationsContractParserRuleCall_0());
			}
			lv_operations_0_0=ruleContract
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"operations",
					lv_operations_0_0,
					"org.unicam.myGrammar.OptGrammar.Contract");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleContract
entryRuleContract returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContractRule()); }
	iv_ruleContract=ruleContract
	{ $current=$iv_ruleContract.current; }
	EOF;

// Rule Contract
ruleContract returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='contract'
		{
			newLeafNode(otherlv_0, grammarAccess.getContractAccess().getContractKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getContractAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContractRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getContractAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getContractAccess().getBlocksDeclarationParserRuleCall_3_0_0_0());
						}
						lv_blocks_3_0=ruleDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getContractRule());
							}
							add(
								$current,
								"blocks",
								lv_blocks_3_0,
								"org.unicam.myGrammar.OptGrammar.Declaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_4=';'
				{
					newLeafNode(otherlv_4, grammarAccess.getContractAccess().getSemicolonKeyword_3_0_1());
				}
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getContractAccess().getBlocksFunctionDefinitionParserRuleCall_3_1_0());
					}
					lv_blocks_5_0=ruleFunctionDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContractRule());
						}
						add(
							$current,
							"blocks",
							lv_blocks_5_0,
							"org.unicam.myGrammar.OptGrammar.FunctionDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getContractAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	iv_ruleDeclaration=ruleDeclaration
	{ $current=$iv_ruleDeclaration.current; }
	EOF;

// Rule Declaration
ruleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getFunctionDeclarationParserRuleCall_0());
		}
		this_FunctionDeclaration_0=ruleFunctionDeclaration
		{
			$current = $this_FunctionDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getStructDeclarationParserRuleCall_1());
		}
		this_StructDeclaration_1=ruleStructDeclaration
		{
			$current = $this_StructDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFunctionDeclaration
entryRuleFunctionDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionDeclarationRule()); }
	iv_ruleFunctionDeclaration=ruleFunctionDeclaration
	{ $current=$iv_ruleFunctionDeclaration.current; }
	EOF;

// Rule FunctionDeclaration
ruleFunctionDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getEnumDefinitionParserRuleCall_0());
		}
		this_EnumDefinition_0=ruleEnumDefinition
		{
			$current = $this_EnumDefinition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getFunctionParameterDeclarationParserRuleCall_1());
		}
		this_FunctionParameterDeclaration_1=ruleFunctionParameterDeclaration
		{
			$current = $this_FunctionParameterDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStructDeclaration
entryRuleStructDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStructDeclarationRule()); }
	iv_ruleStructDeclaration=ruleStructDeclaration
	{ $current=$iv_ruleStructDeclaration.current; }
	EOF;

// Rule StructDeclaration
ruleStructDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStructDeclarationAccess().getVisibilityVisibilityEnumParserRuleCall_0_0());
				}
				lv_visibility_0_0=ruleVisibilityEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
					}
					set(
						$current,
						"visibility",
						lv_visibility_0_0,
						"org.unicam.myGrammar.OptGrammar.VisibilityEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1='struct'
		{
			newLeafNode(otherlv_1, grammarAccess.getStructDeclarationAccess().getStructKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getStructDeclarationAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStructDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getStructDeclarationAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStructDeclarationAccess().getMembersDeclarationParserRuleCall_4_0_0());
					}
					lv_members_4_0=ruleDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
						}
						add(
							$current,
							"members",
							lv_members_4_0,
							"org.unicam.myGrammar.OptGrammar.Declaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getStructDeclarationAccess().getSemicolonKeyword_4_1());
			}
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getStructDeclarationAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleEnumDefinition
entryRuleEnumDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumDefinitionRule()); }
	iv_ruleEnumDefinition=ruleEnumDefinition
	{ $current=$iv_ruleEnumDefinition.current; }
	EOF;

// Rule EnumDefinition
ruleEnumDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumDefinitionAccess().getVisibilityVisibilityEnumParserRuleCall_0_0());
				}
				lv_visibility_0_0=ruleVisibilityEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumDefinitionRule());
					}
					set(
						$current,
						"visibility",
						lv_visibility_0_0,
						"org.unicam.myGrammar.OptGrammar.VisibilityEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1='enum'
		{
			newLeafNode(otherlv_1, grammarAccess.getEnumDefinitionAccess().getEnumKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getEnumDefinitionAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getEnumDefinitionAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumDefinitionAccess().getMembersEnumValueParserRuleCall_4_0());
				}
				lv_members_4_0=ruleEnumValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumDefinitionRule());
					}
					add(
						$current,
						"members",
						lv_members_4_0,
						"org.unicam.myGrammar.OptGrammar.EnumValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getEnumDefinitionAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumDefinitionAccess().getMembersEnumValueParserRuleCall_5_1_0());
					}
					lv_members_6_0=ruleEnumValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumDefinitionRule());
						}
						add(
							$current,
							"members",
							lv_members_6_0,
							"org.unicam.myGrammar.OptGrammar.EnumValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getEnumDefinitionAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleEnumValue
entryRuleEnumValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumValueRule()); }
	iv_ruleEnumValue=ruleEnumValue
	{ $current=$iv_ruleEnumValue.current; }
	EOF;

// Rule EnumValue
ruleEnumValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getEnumValueAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEnumValueRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleFunctionParameterDeclaration
entryRuleFunctionParameterDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionParameterDeclarationRule()); }
	iv_ruleFunctionParameterDeclaration=ruleFunctionParameterDeclaration
	{ $current=$iv_ruleFunctionParameterDeclaration.current; }
	EOF;

// Rule FunctionParameterDeclaration
ruleFunctionParameterDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFunctionParameterDeclarationAccess().getArrayDefinitionDeclarationParserRuleCall_0());
		}
		this_ArrayDefinitionDeclaration_0=ruleArrayDefinitionDeclaration
		{
			$current = $this_ArrayDefinitionDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionParameterDeclarationAccess().getMappingDeclarationParserRuleCall_1());
		}
		this_MappingDeclaration_1=ruleMappingDeclaration
		{
			$current = $this_MappingDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionParameterDeclarationAccess().getPrimaryTypeDefinitionDeclarationParserRuleCall_2());
		}
		this_PrimaryTypeDefinitionDeclaration_2=rulePrimaryTypeDefinitionDeclaration
		{
			$current = $this_PrimaryTypeDefinitionDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionParameterDeclarationAccess().getConcreteStructureDefinitionDeclarationParserRuleCall_3());
		}
		this_ConcreteStructureDefinitionDeclaration_3=ruleConcreteStructureDefinitionDeclaration
		{
			$current = $this_ConcreteStructureDefinitionDeclaration_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleArrayDefinitionDeclaration
entryRuleArrayDefinitionDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayDefinitionDeclarationRule()); }
	iv_ruleArrayDefinitionDeclaration=ruleArrayDefinitionDeclaration
	{ $current=$iv_ruleArrayDefinitionDeclaration.current; }
	EOF;

// Rule ArrayDefinitionDeclaration
ruleArrayDefinitionDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getArrayDefinitionDeclarationAccess().getArrayDeclarationParserRuleCall_0());
		}
		this_ArrayDeclaration_0=ruleArrayDeclaration
		{
			$current = $this_ArrayDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getArrayDefinitionDeclarationAccess().getEqualsSignKeyword_1_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getArrayDefinitionDeclarationAccess().getBlocksFilledArrayParserRuleCall_1_1_0_0());
						}
						lv_blocks_2_0=ruleFilledArray
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArrayDefinitionDeclarationRule());
							}
							set(
								$current,
								"blocks",
								lv_blocks_2_0,
								"org.unicam.myGrammar.OptGrammar.FilledArray");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getArrayDefinitionDeclarationRule());
							}
						}
						otherlv_3=RULE_ID
						{
							newLeafNode(otherlv_3, grammarAccess.getArrayDefinitionDeclarationAccess().getVarDeclarationCrossReference_1_1_1_0());
						}
					)
				)
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getArrayDefinitionDeclarationAccess().getAccessMappingAccessParserRuleCall_1_1_2_0_0());
							}
							lv_access_4_1=ruleMappingAccess
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getArrayDefinitionDeclarationRule());
								}
								set(
									$current,
									"access",
									lv_access_4_1,
									"org.unicam.myGrammar.OptGrammar.MappingAccess");
								afterParserOrEnumRuleCall();
							}
							    |
							{
								newCompositeNode(grammarAccess.getArrayDefinitionDeclarationAccess().getAccessArrayAccessParserRuleCall_1_1_2_0_1());
							}
							lv_access_4_2=ruleArrayAccess
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getArrayDefinitionDeclarationRule());
								}
								set(
									$current,
									"access",
									lv_access_4_2,
									"org.unicam.myGrammar.OptGrammar.ArrayAccess");
								afterParserOrEnumRuleCall();
							}
							    |
							{
								newCompositeNode(grammarAccess.getArrayDefinitionDeclarationAccess().getAccessFieldAccessParserRuleCall_1_1_2_0_2());
							}
							lv_access_4_3=ruleFieldAccess
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getArrayDefinitionDeclarationRule());
								}
								set(
									$current,
									"access",
									lv_access_4_3,
									"org.unicam.myGrammar.OptGrammar.FieldAccess");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleFilledArray
entryRuleFilledArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFilledArrayRule()); }
	iv_ruleFilledArray=ruleFilledArray
	{ $current=$iv_ruleFilledArray.current; }
	EOF;

// Rule FilledArray
ruleFilledArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getFilledArrayAccess().getArraysValueSetsParserRuleCall_0());
			}
			lv_arrays_0_0=ruleValueSets
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getFilledArrayRule());
				}
				add(
					$current,
					"arrays",
					lv_arrays_0_0,
					"org.unicam.myGrammar.OptGrammar.ValueSets");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleValueSets
entryRuleValueSets returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueSetsRule()); }
	iv_ruleValueSets=ruleValueSets
	{ $current=$iv_ruleValueSets.current; }
	EOF;

// Rule ValueSets
ruleValueSets returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getValueSetsAccess().getValueSetsAction_0(),
					$current);
			}
		)
		(
			otherlv_1='[]'
			{
				newLeafNode(otherlv_1, grammarAccess.getValueSetsAccess().getLeftSquareBracketRightSquareBracketKeyword_1_0());
			}
			    |
			(
				otherlv_2='['
				{
					newLeafNode(otherlv_2, grammarAccess.getValueSetsAccess().getLeftSquareBracketKeyword_1_1_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getValueSetsAccess().getValuesLogicalOperationsParserRuleCall_1_1_1_0_0());
							}
							lv_values_3_0=ruleLogicalOperations
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getValueSetsRule());
								}
								add(
									$current,
									"values",
									lv_values_3_0,
									"org.unicam.myGrammar.OptGrammar.LogicalOperations");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_4=','
						{
							newLeafNode(otherlv_4, grammarAccess.getValueSetsAccess().getCommaKeyword_1_1_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getValueSetsAccess().getValuesLogicalOperationsParserRuleCall_1_1_1_1_1_0());
								}
								lv_values_5_0=ruleLogicalOperations
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getValueSetsRule());
									}
									add(
										$current,
										"values",
										lv_values_5_0,
										"org.unicam.myGrammar.OptGrammar.LogicalOperations");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)?
				otherlv_6=']'
				{
					newLeafNode(otherlv_6, grammarAccess.getValueSetsAccess().getRightSquareBracketKeyword_1_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleArrayDeclaration
entryRuleArrayDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayDeclarationRule()); }
	iv_ruleArrayDeclaration=ruleArrayDeclaration
	{ $current=$iv_ruleArrayDeclaration.current; }
	EOF;

// Rule ArrayDeclaration
ruleArrayDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getArrayDeclarationAccess().getLocationLocationSpecifierEnumParserRuleCall_0_0());
				}
				lv_location_0_0=ruleLocationSpecifierEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArrayDeclarationRule());
					}
					set(
						$current,
						"location",
						lv_location_0_0,
						"org.unicam.myGrammar.OptGrammar.LocationSpecifierEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_constant_1_0='constant'
				{
					newLeafNode(lv_constant_1_0, grammarAccess.getArrayDeclarationAccess().getConstantConstantKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArrayDeclarationRule());
					}
					setWithLastConsumed($current, "constant", true, "constant");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getArrayDeclarationAccess().getVisibilityVisibilityEnumParserRuleCall_2_0());
				}
				lv_visibility_2_0=ruleVisibilityEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArrayDeclarationRule());
					}
					set(
						$current,
						"visibility",
						lv_visibility_2_0,
						"org.unicam.myGrammar.OptGrammar.VisibilityEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getArrayDeclarationAccess().getTypeNamedTypeParserRuleCall_3_0_0());
					}
					lv_type_3_0=ruleNamedType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArrayDeclarationRule());
						}
						set(
							$current,
							"type",
							lv_type_3_0,
							"org.unicam.myGrammar.OptGrammar.NamedType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getArrayDeclarationRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getArrayDeclarationAccess().getStrucTypeStructDeclarationCrossReference_3_1_0());
					}
				)
			)
		)
		(
			(
				lv_name_5_0=RULE_ID
				{
					newLeafNode(lv_name_5_0, grammarAccess.getArrayDeclarationAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArrayDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_6='['
			{
				newLeafNode(otherlv_6, grammarAccess.getArrayDeclarationAccess().getLeftSquareBracketKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArrayDeclarationAccess().getSizesIntLiteralParserRuleCall_5_1_0());
					}
					lv_sizes_7_0=ruleIntLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArrayDeclarationRule());
						}
						add(
							$current,
							"sizes",
							lv_sizes_7_0,
							"org.unicam.myGrammar.OptGrammar.IntLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_8=']'
			{
				newLeafNode(otherlv_8, grammarAccess.getArrayDeclarationAccess().getRightSquareBracketKeyword_5_2());
			}
		)+
	)
;

// Entry rule entryRuleNamedType
entryRuleNamedType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNamedTypeRule()); }
	iv_ruleNamedType=ruleNamedType
	{ $current=$iv_ruleNamedType.current; }
	EOF;

// Rule NamedType
ruleNamedType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNamedTypeAccess().getSimpleTypeDeclarationParserRuleCall_0());
		}
		this_SimpleTypeDeclaration_0=ruleSimpleTypeDeclaration
		{
			$current = $this_SimpleTypeDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNamedTypeAccess().getElementaryTypeNameEnumParserRuleCall_1());
		}
		this_ElementaryTypeNameEnum_1=ruleElementaryTypeNameEnum
		{
			$current = $this_ElementaryTypeNameEnum_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimpleTypeDeclaration
entryRuleSimpleTypeDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleTypeDeclarationRule()); }
	iv_ruleSimpleTypeDeclaration=ruleSimpleTypeDeclaration
	{ $current=$iv_ruleSimpleTypeDeclaration.current; }
	EOF;

// Rule SimpleTypeDeclaration
ruleSimpleTypeDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_1='string'
				{
					newLeafNode(lv_type_0_1, grammarAccess.getSimpleTypeDeclarationAccess().getTypeStringKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimpleTypeDeclarationRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_1, null);
				}
				    |
				lv_type_0_2='bool'
				{
					newLeafNode(lv_type_0_2, grammarAccess.getSimpleTypeDeclarationAccess().getTypeBoolKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimpleTypeDeclarationRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_2, null);
				}
			)
		)
	)
;

// Entry rule entryRuleMappingAccess
entryRuleMappingAccess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMappingAccessRule()); }
	iv_ruleMappingAccess=ruleMappingAccess
	{ $current=$iv_ruleMappingAccess.current; }
	EOF;

// Rule MappingAccess
ruleMappingAccess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMappingAccessRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getMappingAccessAccess().getMapMappingDeclarationCrossReference_0_0());
				}
			)
		)
		otherlv_1='<('
		{
			newLeafNode(otherlv_1, grammarAccess.getMappingAccessAccess().getLessThanSignLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMappingAccessAccess().getIndexLogicalOperationsParserRuleCall_2_0());
				}
				lv_index_2_0=ruleLogicalOperations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMappingAccessRule());
					}
					set(
						$current,
						"index",
						lv_index_2_0,
						"org.unicam.myGrammar.OptGrammar.LogicalOperations");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')>'
		{
			newLeafNode(otherlv_3, grammarAccess.getMappingAccessAccess().getRightParenthesisGreaterThanSignKeyword_3());
		}
	)
;

// Entry rule entryRuleArrayAccess
entryRuleArrayAccess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayAccessRule()); }
	iv_ruleArrayAccess=ruleArrayAccess
	{ $current=$iv_ruleArrayAccess.current; }
	EOF;

// Rule ArrayAccess
ruleArrayAccess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArrayAccessRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getArrayAccessAccess().getVariableArrayDefinitionDeclarationCrossReference_0_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getArrayAccessAccess().getIndexesArrayIndexParserRuleCall_1_0());
				}
				lv_indexes_1_0=ruleArrayIndex
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArrayAccessRule());
					}
					add(
						$current,
						"indexes",
						lv_indexes_1_0,
						"org.unicam.myGrammar.OptGrammar.ArrayIndex");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			otherlv_2='.'
			{
				newLeafNode(otherlv_2, grammarAccess.getArrayAccessAccess().getFullStopKeyword_2_0());
			}
			(
				(
					lv_field_3_0=RULE_ID
					{
						newLeafNode(lv_field_3_0, grammarAccess.getArrayAccessAccess().getFieldIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getArrayAccessRule());
						}
						setWithLastConsumed(
							$current,
							"field",
							lv_field_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleArrayIndex
entryRuleArrayIndex returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayIndexRule()); }
	iv_ruleArrayIndex=ruleArrayIndex
	{ $current=$iv_ruleArrayIndex.current; }
	EOF;

// Rule ArrayIndex
ruleArrayIndex returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getArrayIndexAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArrayIndexAccess().getValueLogicalOperationsParserRuleCall_1_0());
				}
				lv_value_1_0=ruleLogicalOperations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArrayIndexRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"org.unicam.myGrammar.OptGrammar.LogicalOperations");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getArrayIndexAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleFieldAccess
entryRuleFieldAccess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldAccessRule()); }
	iv_ruleFieldAccess=ruleFieldAccess
	{ $current=$iv_ruleFieldAccess.current; }
	EOF;

// Rule FieldAccess
ruleFieldAccess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldAccessRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getFieldAccessAccess().getRefConcreteStructDeclarationCrossReference_0_0());
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getFieldAccessAccess().getFullStopKeyword_1());
		}
		(
			(
				lv_field_2_0=RULE_ID
				{
					newLeafNode(lv_field_2_0, grammarAccess.getFieldAccessAccess().getFieldIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldAccessRule());
					}
					setWithLastConsumed(
						$current,
						"field",
						lv_field_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleMappingDeclaration
entryRuleMappingDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMappingDeclarationRule()); }
	iv_ruleMappingDeclaration=ruleMappingDeclaration
	{ $current=$iv_ruleMappingDeclaration.current; }
	EOF;

// Rule MappingDeclaration
ruleMappingDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMappingDeclarationAccess().getLocationMapLocationLiteralParserRuleCall_0_0());
				}
				lv_location_0_0=ruleMapLocationLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMappingDeclarationRule());
					}
					set(
						$current,
						"location",
						lv_location_0_0,
						"org.unicam.myGrammar.OptGrammar.MapLocationLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMappingDeclarationAccess().getVisibilityVisibilityEnumParserRuleCall_1_0());
				}
				lv_visibility_1_0=ruleVisibilityEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMappingDeclarationRule());
					}
					set(
						$current,
						"visibility",
						lv_visibility_1_0,
						"org.unicam.myGrammar.OptGrammar.VisibilityEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMappingDeclarationAccess().getUnnamedMappingDeclarationUnnamedMappingDeclarationParserRuleCall_2_0());
				}
				lv_unnamedMappingDeclaration_2_0=ruleUnnamedMappingDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMappingDeclarationRule());
					}
					set(
						$current,
						"unnamedMappingDeclaration",
						lv_unnamedMappingDeclaration_2_0,
						"org.unicam.myGrammar.OptGrammar.UnnamedMappingDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getMappingDeclarationAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMappingDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleUnnamedMappingDeclaration
entryRuleUnnamedMappingDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnnamedMappingDeclarationRule()); }
	iv_ruleUnnamedMappingDeclaration=ruleUnnamedMappingDeclaration
	{ $current=$iv_ruleUnnamedMappingDeclaration.current; }
	EOF;

// Rule UnnamedMappingDeclaration
ruleUnnamedMappingDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='mapping'
		{
			newLeafNode(otherlv_0, grammarAccess.getUnnamedMappingDeclarationAccess().getMappingKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getUnnamedMappingDeclarationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnnamedMappingDeclarationAccess().getTypeNamedTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleNamedType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnnamedMappingDeclarationRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.unicam.myGrammar.OptGrammar.NamedType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='=>'
		{
			newLeafNode(otherlv_3, grammarAccess.getUnnamedMappingDeclarationAccess().getEqualsSignGreaterThanSignKeyword_3());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnnamedMappingDeclarationRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getUnnamedMappingDeclarationAccess().getSecondRefDeclarationCrossReference_4_0_0());
					}
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getUnnamedMappingDeclarationAccess().getSecondNamedTypeParserRuleCall_4_1_0_0());
						}
						lv_second_5_1=ruleNamedType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUnnamedMappingDeclarationRule());
							}
							set(
								$current,
								"second",
								lv_second_5_1,
								"org.unicam.myGrammar.OptGrammar.NamedType");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getUnnamedMappingDeclarationAccess().getSecondUnnamedMappingDeclarationParserRuleCall_4_1_0_1());
						}
						lv_second_5_2=ruleUnnamedMappingDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUnnamedMappingDeclarationRule());
							}
							set(
								$current,
								"second",
								lv_second_5_2,
								"org.unicam.myGrammar.OptGrammar.UnnamedMappingDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		(
			(
				lv_array_6_0='[]'
				{
					newLeafNode(lv_array_6_0, grammarAccess.getUnnamedMappingDeclarationAccess().getArrayLeftSquareBracketRightSquareBracketKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUnnamedMappingDeclarationRule());
					}
					setWithLastConsumed($current, "array", true, "[]");
				}
			)
		)?
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getUnnamedMappingDeclarationAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRulePrimaryTypeDefinitionDeclaration
entryRulePrimaryTypeDefinitionDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryTypeDefinitionDeclarationRule()); }
	iv_rulePrimaryTypeDefinitionDeclaration=rulePrimaryTypeDefinitionDeclaration
	{ $current=$iv_rulePrimaryTypeDefinitionDeclaration.current; }
	EOF;

// Rule PrimaryTypeDefinitionDeclaration
rulePrimaryTypeDefinitionDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPrimaryTypeDefinitionDeclarationAccess().getPrimaryTypeDeclarationParserRuleCall_0_0());
			}
			this_PrimaryTypeDeclaration_0=rulePrimaryTypeDeclaration
			{
				$current = $this_PrimaryTypeDeclaration_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimaryTypeDefinitionDeclarationRule());
						}
					}
					otherlv_1=RULE_ID
					{
						newLeafNode(otherlv_1, grammarAccess.getPrimaryTypeDefinitionDeclarationAccess().getRefPrimaryTypeDeclarationCrossReference_0_1_0());
					}
				)
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryTypeDefinitionDeclarationAccess().getOperatorOperationAssegnationLiteralParserRuleCall_1_0_0());
					}
					lv_operator_2_0=ruleOperationAssegnationLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryTypeDefinitionDeclarationRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"org.unicam.myGrammar.OptGrammar.OperationAssegnationLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryTypeDefinitionDeclarationAccess().getValueLogicalOperationsParserRuleCall_1_1_0_0());
						}
						lv_value_3_1=ruleLogicalOperations
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryTypeDefinitionDeclarationRule());
							}
							set(
								$current,
								"value",
								lv_value_3_1,
								"org.unicam.myGrammar.OptGrammar.LogicalOperations");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getPrimaryTypeDefinitionDeclarationAccess().getValueSingleDefinitionParserRuleCall_1_1_0_1());
						}
						lv_value_3_2=ruleSingleDefinition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryTypeDefinitionDeclarationRule());
							}
							set(
								$current,
								"value",
								lv_value_3_2,
								"org.unicam.myGrammar.OptGrammar.SingleDefinition");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRulePrimaryTypeDeclaration
entryRulePrimaryTypeDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryTypeDeclarationRule()); }
	iv_rulePrimaryTypeDeclaration=rulePrimaryTypeDeclaration
	{ $current=$iv_rulePrimaryTypeDeclaration.current; }
	EOF;

// Rule PrimaryTypeDeclaration
rulePrimaryTypeDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimaryTypeDeclarationAccess().getArrayableDeclarationParserRuleCall_0());
		}
		this_ArrayableDeclaration_0=ruleArrayableDeclaration
		{
			$current = $this_ArrayableDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryTypeDeclarationAccess().getNonArrayableDeclarationParserRuleCall_1());
		}
		this_NonArrayableDeclaration_1=ruleNonArrayableDeclaration
		{
			$current = $this_NonArrayableDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOperationAssegnationLiteral
entryRuleOperationAssegnationLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationAssegnationLiteralRule()); }
	iv_ruleOperationAssegnationLiteral=ruleOperationAssegnationLiteral
	{ $current=$iv_ruleOperationAssegnationLiteral.current; }
	EOF;

// Rule OperationAssegnationLiteral
ruleOperationAssegnationLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_1='='
				{
					newLeafNode(lv_value_0_1, grammarAccess.getOperationAssegnationLiteralAccess().getValueEqualsSignKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationAssegnationLiteralRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_1, null);
				}
				    |
				lv_value_0_2='*='
				{
					newLeafNode(lv_value_0_2, grammarAccess.getOperationAssegnationLiteralAccess().getValueAsteriskEqualsSignKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationAssegnationLiteralRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_2, null);
				}
				    |
				lv_value_0_3='+='
				{
					newLeafNode(lv_value_0_3, grammarAccess.getOperationAssegnationLiteralAccess().getValuePlusSignEqualsSignKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationAssegnationLiteralRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_3, null);
				}
				    |
				lv_value_0_4='-='
				{
					newLeafNode(lv_value_0_4, grammarAccess.getOperationAssegnationLiteralAccess().getValueHyphenMinusEqualsSignKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationAssegnationLiteralRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_4, null);
				}
				    |
				lv_value_0_5='/='
				{
					newLeafNode(lv_value_0_5, grammarAccess.getOperationAssegnationLiteralAccess().getValueSolidusEqualsSignKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationAssegnationLiteralRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_5, null);
				}
			)
		)
	)
;

// Entry rule entryRuleSingleDefinition
entryRuleSingleDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleDefinitionRule()); }
	iv_ruleSingleDefinition=ruleSingleDefinition
	{ $current=$iv_ruleSingleDefinition.current; }
	EOF;

// Rule SingleDefinition
ruleSingleDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						lv_first_0_1='++'
						{
							newLeafNode(lv_first_0_1, grammarAccess.getSingleDefinitionAccess().getFirstPlusSignPlusSignKeyword_0_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSingleDefinitionRule());
							}
							setWithLastConsumed($current, "first", lv_first_0_1, null);
						}
						    |
						lv_first_0_2='--'
						{
							newLeafNode(lv_first_0_2, grammarAccess.getSingleDefinitionAccess().getFirstHyphenMinusHyphenMinusKeyword_0_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSingleDefinitionRule());
							}
							setWithLastConsumed($current, "first", lv_first_0_2, null);
						}
					)
				)
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSingleDefinitionRule());
						}
					}
					otherlv_1=RULE_ID
					{
						newLeafNode(otherlv_1, grammarAccess.getSingleDefinitionAccess().getNamePrimaryTypeDeclarationCrossReference_0_1_0());
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSingleDefinitionRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getSingleDefinitionAccess().getNamePrimaryTypeDeclarationCrossReference_1_0_0());
					}
				)
			)
			(
				(
					(
						lv_second_3_1='++'
						{
							newLeafNode(lv_second_3_1, grammarAccess.getSingleDefinitionAccess().getSecondPlusSignPlusSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSingleDefinitionRule());
							}
							setWithLastConsumed($current, "second", lv_second_3_1, null);
						}
						    |
						lv_second_3_2='--'
						{
							newLeafNode(lv_second_3_2, grammarAccess.getSingleDefinitionAccess().getSecondHyphenMinusHyphenMinusKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSingleDefinitionRule());
							}
							setWithLastConsumed($current, "second", lv_second_3_2, null);
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleNonArrayableDeclaration
entryRuleNonArrayableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNonArrayableDeclarationRule()); }
	iv_ruleNonArrayableDeclaration=ruleNonArrayableDeclaration
	{ $current=$iv_ruleNonArrayableDeclaration.current; }
	EOF;

// Rule NonArrayableDeclaration
ruleNonArrayableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getNonArrayableDeclarationAccess().getLocationLocationSpecifierEnumParserRuleCall_0_0());
				}
				lv_location_0_0=ruleLocationSpecifierEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNonArrayableDeclarationRule());
					}
					set(
						$current,
						"location",
						lv_location_0_0,
						"org.unicam.myGrammar.OptGrammar.LocationSpecifierEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_constant_1_0='constant'
				{
					newLeafNode(lv_constant_1_0, grammarAccess.getNonArrayableDeclarationAccess().getConstantConstantKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNonArrayableDeclarationRule());
					}
					setWithLastConsumed($current, "constant", true, "constant");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getNonArrayableDeclarationAccess().getVisibilityVisibilityEnumParserRuleCall_2_0());
				}
				lv_visibility_2_0=ruleVisibilityEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNonArrayableDeclarationRule());
					}
					set(
						$current,
						"visibility",
						lv_visibility_2_0,
						"org.unicam.myGrammar.OptGrammar.VisibilityEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getNonArrayableDeclarationAccess().getTypeSimpleTypeDeclarationParserRuleCall_3_0());
				}
				lv_type_3_0=ruleSimpleTypeDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNonArrayableDeclarationRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.unicam.myGrammar.OptGrammar.SimpleTypeDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getNonArrayableDeclarationAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNonArrayableDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleArrayableDeclaration
entryRuleArrayableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayableDeclarationRule()); }
	iv_ruleArrayableDeclaration=ruleArrayableDeclaration
	{ $current=$iv_ruleArrayableDeclaration.current; }
	EOF;

// Rule ArrayableDeclaration
ruleArrayableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_constant_0_0='constant'
				{
					newLeafNode(lv_constant_0_0, grammarAccess.getArrayableDeclarationAccess().getConstantConstantKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArrayableDeclarationRule());
					}
					setWithLastConsumed($current, "constant", true, "constant");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getArrayableDeclarationAccess().getVisibilityVisibilityEnumParserRuleCall_1_0());
				}
				lv_visibility_1_0=ruleVisibilityEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArrayableDeclarationRule());
					}
					set(
						$current,
						"visibility",
						lv_visibility_1_0,
						"org.unicam.myGrammar.OptGrammar.VisibilityEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getArrayableDeclarationAccess().getTypeElementaryTypeNameEnumParserRuleCall_2_0());
				}
				lv_type_2_0=ruleElementaryTypeNameEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArrayableDeclarationRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.unicam.myGrammar.OptGrammar.ElementaryTypeNameEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getArrayableDeclarationAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArrayableDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleConcreteStructureDefinitionDeclaration
entryRuleConcreteStructureDefinitionDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcreteStructureDefinitionDeclarationRule()); }
	iv_ruleConcreteStructureDefinitionDeclaration=ruleConcreteStructureDefinitionDeclaration
	{ $current=$iv_ruleConcreteStructureDefinitionDeclaration.current; }
	EOF;

// Rule ConcreteStructureDefinitionDeclaration
ruleConcreteStructureDefinitionDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='struct'
		{
			newLeafNode(otherlv_0, grammarAccess.getConcreteStructureDefinitionDeclarationAccess().getStructKeyword_0());
		}
		(
			{
				newCompositeNode(grammarAccess.getConcreteStructureDefinitionDeclarationAccess().getConcreteStructDeclarationParserRuleCall_1_0());
			}
			this_ConcreteStructDeclaration_1=ruleConcreteStructDeclaration
			{
				$current = $this_ConcreteStructDeclaration_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConcreteStructureDefinitionDeclarationRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getConcreteStructureDefinitionDeclarationAccess().getRefConcreteStructDeclarationCrossReference_1_1_0());
					}
				)
			)
		)
		(
			otherlv_3='='
			{
				newLeafNode(otherlv_3, grammarAccess.getConcreteStructureDefinitionDeclarationAccess().getEqualsSignKeyword_2_0());
			}
			(
				(
					otherlv_4='{'
					{
						newLeafNode(otherlv_4, grammarAccess.getConcreteStructureDefinitionDeclarationAccess().getLeftCurlyBracketKeyword_2_1_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getConcreteStructureDefinitionDeclarationAccess().getCouplesStructureFieldValueParserRuleCall_2_1_0_1_0());
							}
							lv_couples_5_0=ruleStructureFieldValue
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getConcreteStructureDefinitionDeclarationRule());
								}
								add(
									$current,
									"couples",
									lv_couples_5_0,
									"org.unicam.myGrammar.OptGrammar.StructureFieldValue");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_6=','
						{
							newLeafNode(otherlv_6, grammarAccess.getConcreteStructureDefinitionDeclarationAccess().getCommaKeyword_2_1_0_2_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getConcreteStructureDefinitionDeclarationAccess().getCouplesStructureFieldValueParserRuleCall_2_1_0_2_1_0());
								}
								lv_couples_7_0=ruleStructureFieldValue
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getConcreteStructureDefinitionDeclarationRule());
									}
									add(
										$current,
										"couples",
										lv_couples_7_0,
										"org.unicam.myGrammar.OptGrammar.StructureFieldValue");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
					otherlv_8='}'
					{
						newLeafNode(otherlv_8, grammarAccess.getConcreteStructureDefinitionDeclarationAccess().getRightCurlyBracketKeyword_2_1_0_3());
					}
				)
				    |
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConcreteStructureDefinitionDeclarationRule());
							}
						}
						otherlv_9=RULE_ID
						{
							newLeafNode(otherlv_9, grammarAccess.getConcreteStructureDefinitionDeclarationAccess().getExistenceRefConcreteStructDeclarationCrossReference_2_1_1_0());
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getConcreteStructureDefinitionDeclarationAccess().getArrayAccessRefArrayAccessParserRuleCall_2_1_2_0());
						}
						lv_arrayAccessRef_10_0=ruleArrayAccess
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConcreteStructureDefinitionDeclarationRule());
							}
							set(
								$current,
								"arrayAccessRef",
								lv_arrayAccessRef_10_0,
								"org.unicam.myGrammar.OptGrammar.ArrayAccess");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleConcreteStructDeclaration
entryRuleConcreteStructDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcreteStructDeclarationRule()); }
	iv_ruleConcreteStructDeclaration=ruleConcreteStructDeclaration
	{ $current=$iv_ruleConcreteStructDeclaration.current; }
	EOF;

// Rule ConcreteStructDeclaration
ruleConcreteStructDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConcreteStructDeclarationAccess().getLocationLocationSpecifierEnumParserRuleCall_0_0());
				}
				lv_location_0_0=ruleLocationSpecifierEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConcreteStructDeclarationRule());
					}
					set(
						$current,
						"location",
						lv_location_0_0,
						"org.unicam.myGrammar.OptGrammar.LocationSpecifierEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_constant_1_0='constant'
				{
					newLeafNode(lv_constant_1_0, grammarAccess.getConcreteStructDeclarationAccess().getConstantConstantKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConcreteStructDeclarationRule());
					}
					setWithLastConsumed($current, "constant", true, "constant");
				}
			)
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConcreteStructDeclarationRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getConcreteStructDeclarationAccess().getTypeStructDeclarationCrossReference_2_0());
				}
			)
		)
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getConcreteStructDeclarationAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConcreteStructDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleStructureFieldValue
entryRuleStructureFieldValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStructureFieldValueRule()); }
	iv_ruleStructureFieldValue=ruleStructureFieldValue
	{ $current=$iv_ruleStructureFieldValue.current; }
	EOF;

// Rule StructureFieldValue
ruleStructureFieldValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_field_0_0=RULE_ID
				{
					newLeafNode(lv_field_0_0, grammarAccess.getStructureFieldValueAccess().getFieldIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStructureFieldValueRule());
					}
					setWithLastConsumed(
						$current,
						"field",
						lv_field_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getStructureFieldValueAccess().getColonKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStructureFieldValueAccess().getValuesLogicalOperationsParserRuleCall_2_0_0());
					}
					lv_values_2_1=ruleLogicalOperations
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStructureFieldValueRule());
						}
						set(
							$current,
							"values",
							lv_values_2_1,
							"org.unicam.myGrammar.OptGrammar.LogicalOperations");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getStructureFieldValueAccess().getValuesFilledArrayParserRuleCall_2_0_1());
					}
					lv_values_2_2=ruleFilledArray
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStructureFieldValueRule());
						}
						set(
							$current,
							"values",
							lv_values_2_2,
							"org.unicam.myGrammar.OptGrammar.FilledArray");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleFunctionDefinition
entryRuleFunctionDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionDefinitionRule()); }
	iv_ruleFunctionDefinition=ruleFunctionDefinition
	{ $current=$iv_ruleFunctionDefinition.current; }
	EOF;

// Rule FunctionDefinition
ruleFunctionDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_payable_0_0='payable'
				{
					newLeafNode(lv_payable_0_0, grammarAccess.getFunctionDefinitionAccess().getPayablePayableKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionDefinitionRule());
					}
					setWithLastConsumed($current, "payable", true, "payable");
				}
			)
		)?
		otherlv_1='function'
		{
			newLeafNode(otherlv_1, grammarAccess.getFunctionDefinitionAccess().getFunctionKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getFunctionDefinitionAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getFunctionDefinitionAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getParametersFunctionParameterDeclarationParserRuleCall_4_0_0());
					}
					lv_parameters_4_0=ruleFunctionParameterDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_4_0,
							"org.unicam.myGrammar.OptGrammar.FunctionParameterDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getFunctionDefinitionAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getParametersFunctionParameterDeclarationParserRuleCall_4_1_1_0());
						}
						lv_parameters_6_0=ruleFunctionParameterDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_6_0,
								"org.unicam.myGrammar.OptGrammar.FunctionParameterDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getFunctionDefinitionAccess().getRightParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getOptionalElementsFunctionDefinitionOptionalElementParserRuleCall_6_0());
				}
				lv_optionalElements_8_0=ruleFunctionDefinitionOptionalElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
					}
					add(
						$current,
						"optionalElements",
						lv_optionalElements_8_0,
						"org.unicam.myGrammar.OptGrammar.FunctionDefinitionOptionalElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_9='returns'
			{
				newLeafNode(otherlv_9, grammarAccess.getFunctionDefinitionAccess().getReturnsKeyword_7_0());
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getFunctionDefinitionAccess().getLeftParenthesisKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getReturnTypeNamedTypeParserRuleCall_7_2_0());
					}
					lv_returnType_11_0=ruleNamedType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
						}
						set(
							$current,
							"returnType",
							lv_returnType_11_0,
							"org.unicam.myGrammar.OptGrammar.NamedType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_12=')'
			{
				newLeafNode(otherlv_12, grammarAccess.getFunctionDefinitionAccess().getRightParenthesisKeyword_7_3());
			}
		)?
		otherlv_13='{'
		{
			newLeafNode(otherlv_13, grammarAccess.getFunctionDefinitionAccess().getLeftCurlyBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getBlocksInternalBlockParserRuleCall_9_0());
				}
				lv_blocks_14_0=ruleInternalBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
					}
					add(
						$current,
						"blocks",
						lv_blocks_14_0,
						"org.unicam.myGrammar.OptGrammar.InternalBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getReturnValReturnStatementParserRuleCall_10_0());
				}
				lv_returnVal_15_0=ruleReturnStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
					}
					set(
						$current,
						"returnVal",
						lv_returnVal_15_0,
						"org.unicam.myGrammar.OptGrammar.ReturnStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getFunctionDefinitionAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleInternalBlock
entryRuleInternalBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInternalBlockRule()); }
	iv_ruleInternalBlock=ruleInternalBlock
	{ $current=$iv_ruleInternalBlock.current; }
	EOF;

// Rule InternalBlock
ruleInternalBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getInternalBlockAccess().getDefArrayDefinitionParserRuleCall_0_0_0_0());
						}
						lv_def_0_1=ruleArrayDefinition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInternalBlockRule());
							}
							set(
								$current,
								"def",
								lv_def_0_1,
								"org.unicam.myGrammar.OptGrammar.ArrayDefinition");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getInternalBlockAccess().getDefMappingDefinitionParserRuleCall_0_0_0_1());
						}
						lv_def_0_2=ruleMappingDefinition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInternalBlockRule());
							}
							set(
								$current,
								"def",
								lv_def_0_2,
								"org.unicam.myGrammar.OptGrammar.MappingDefinition");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getInternalBlockAccess().getDefSingleDefinitionParserRuleCall_0_0_0_2());
						}
						lv_def_0_3=ruleSingleDefinition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInternalBlockRule());
							}
							set(
								$current,
								"def",
								lv_def_0_3,
								"org.unicam.myGrammar.OptGrammar.SingleDefinition");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getInternalBlockAccess().getDefFieldDefinitionParserRuleCall_0_0_0_3());
						}
						lv_def_0_4=ruleFieldDefinition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInternalBlockRule());
							}
							set(
								$current,
								"def",
								lv_def_0_4,
								"org.unicam.myGrammar.OptGrammar.FieldDefinition");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getInternalBlockAccess().getSemicolonKeyword_0_1());
			}
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getInternalBlockAccess().getDecFunctionDeclarationParserRuleCall_1_0_0());
					}
					lv_dec_2_0=ruleFunctionDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInternalBlockRule());
						}
						set(
							$current,
							"dec",
							lv_dec_2_0,
							"org.unicam.myGrammar.OptGrammar.FunctionDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getInternalBlockAccess().getSemicolonKeyword_1_1());
			}
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInternalBlockAccess().getLoopLoopStructuresParserRuleCall_2_0());
				}
				lv_loop_4_0=ruleLoopStructures
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInternalBlockRule());
					}
					set(
						$current,
						"loop",
						lv_loop_4_0,
						"org.unicam.myGrammar.OptGrammar.LoopStructures");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getInternalBlockAccess().getCallFunctionCallParserRuleCall_3_0_0());
					}
					lv_call_5_0=ruleFunctionCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInternalBlockRule());
						}
						set(
							$current,
							"call",
							lv_call_5_0,
							"org.unicam.myGrammar.OptGrammar.FunctionCall");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=';'
			{
				newLeafNode(otherlv_6, grammarAccess.getInternalBlockAccess().getSemicolonKeyword_3_1());
			}
		)
	)
;

// Entry rule entryRuleArrayDefinition
entryRuleArrayDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayDefinitionRule()); }
	iv_ruleArrayDefinition=ruleArrayDefinition
	{ $current=$iv_ruleArrayDefinition.current; }
	EOF;

// Rule ArrayDefinition
ruleArrayDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArrayDefinitionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getArrayDefinitionAccess().getRefArrayDefinitionDeclarationCrossReference_0_0());
				}
			)
		)
		(
			(
				otherlv_1='='
				{
					newLeafNode(otherlv_1, grammarAccess.getArrayDefinitionAccess().getEqualsSignKeyword_1_0_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getArrayDefinitionAccess().getBlocksFilledArrayParserRuleCall_1_0_1_0_0());
							}
							lv_blocks_2_0=ruleFilledArray
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getArrayDefinitionRule());
								}
								set(
									$current,
									"blocks",
									lv_blocks_2_0,
									"org.unicam.myGrammar.OptGrammar.FilledArray");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getArrayDefinitionRule());
								}
							}
							otherlv_3=RULE_ID
							{
								newLeafNode(otherlv_3, grammarAccess.getArrayDefinitionAccess().getArrayRefArrayDefinitionDeclarationCrossReference_1_0_1_1_0());
							}
						)
					)
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getArrayDefinitionAccess().getIndexesArrayIndexParserRuleCall_1_1_0_0());
						}
						lv_indexes_4_0=ruleArrayIndex
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArrayDefinitionRule());
							}
							add(
								$current,
								"indexes",
								lv_indexes_4_0,
								"org.unicam.myGrammar.OptGrammar.ArrayIndex");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				(
					otherlv_5='.'
					{
						newLeafNode(otherlv_5, grammarAccess.getArrayDefinitionAccess().getFullStopKeyword_1_1_1_0());
					}
					(
						(
							lv_field_6_0=RULE_ID
							{
								newLeafNode(lv_field_6_0, grammarAccess.getArrayDefinitionAccess().getFieldIDTerminalRuleCall_1_1_1_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getArrayDefinitionRule());
								}
								setWithLastConsumed(
									$current,
									"field",
									lv_field_6_0,
									"org.eclipse.xtext.common.Terminals.ID");
							}
						)
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getArrayDefinitionAccess().getOperatorOperationAssegnationLiteralParserRuleCall_1_1_2_0());
						}
						lv_operator_7_0=ruleOperationAssegnationLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArrayDefinitionRule());
							}
							set(
								$current,
								"operator",
								lv_operator_7_0,
								"org.unicam.myGrammar.OptGrammar.OperationAssegnationLiteral");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getArrayDefinitionAccess().getValueLogicalOperationsParserRuleCall_1_1_3_0_0());
							}
							lv_value_8_1=ruleLogicalOperations
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getArrayDefinitionRule());
								}
								set(
									$current,
									"value",
									lv_value_8_1,
									"org.unicam.myGrammar.OptGrammar.LogicalOperations");
								afterParserOrEnumRuleCall();
							}
							    |
							{
								newCompositeNode(grammarAccess.getArrayDefinitionAccess().getValueFilledArrayParserRuleCall_1_1_3_0_1());
							}
							lv_value_8_2=ruleFilledArray
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getArrayDefinitionRule());
								}
								set(
									$current,
									"value",
									lv_value_8_2,
									"org.unicam.myGrammar.OptGrammar.FilledArray");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
		)
	)
;

// Entry rule entryRuleFieldDefinition
entryRuleFieldDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldDefinitionRule()); }
	iv_ruleFieldDefinition=ruleFieldDefinition
	{ $current=$iv_ruleFieldDefinition.current; }
	EOF;

// Rule FieldDefinition
ruleFieldDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFieldDefinitionAccess().getFieldAccessParserRuleCall_0());
		}
		this_FieldAccess_0=ruleFieldAccess
		{
			$current = $this_FieldAccess_0.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getFieldDefinitionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFieldDefinitionAccess().getValueLogicalOperationsParserRuleCall_2_0_0());
					}
					lv_value_2_1=ruleLogicalOperations
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFieldDefinitionRule());
						}
						set(
							$current,
							"value",
							lv_value_2_1,
							"org.unicam.myGrammar.OptGrammar.LogicalOperations");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getFieldDefinitionAccess().getValueSingleDefinitionParserRuleCall_2_0_1());
					}
					lv_value_2_2=ruleSingleDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFieldDefinitionRule());
						}
						set(
							$current,
							"value",
							lv_value_2_2,
							"org.unicam.myGrammar.OptGrammar.SingleDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleMappingDefinition
entryRuleMappingDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMappingDefinitionRule()); }
	iv_ruleMappingDefinition=ruleMappingDefinition
	{ $current=$iv_ruleMappingDefinition.current; }
	EOF;

// Rule MappingDefinition
ruleMappingDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMappingDefinitionAccess().getMappingAccessParserRuleCall_0());
		}
		this_MappingAccess_0=ruleMappingAccess
		{
			$current = $this_MappingAccess_0.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getMappingDefinitionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMappingDefinitionAccess().getSecLogicalOperationsParserRuleCall_2_0_0());
					}
					lv_sec_2_1=ruleLogicalOperations
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMappingDefinitionRule());
						}
						set(
							$current,
							"sec",
							lv_sec_2_1,
							"org.unicam.myGrammar.OptGrammar.LogicalOperations");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getMappingDefinitionAccess().getSecFilledArrayParserRuleCall_2_0_1());
					}
					lv_sec_2_2=ruleFilledArray
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMappingDefinitionRule());
						}
						set(
							$current,
							"sec",
							lv_sec_2_2,
							"org.unicam.myGrammar.OptGrammar.FilledArray");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleFunctionCallListArguments
entryRuleFunctionCallListArguments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionCallListArgumentsRule()); }
	iv_ruleFunctionCallListArguments=ruleFunctionCallListArguments
	{ $current=$iv_ruleFunctionCallListArguments.current; }
	EOF;

// Rule FunctionCallListArguments
ruleFunctionCallListArguments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionCallListArgumentsAccess().getLeftParenthesisKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFunctionCallListArgumentsAccess().getFunctionCallListArgumentsAction_1(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionCallListArgumentsAccess().getArgumentsLogicalOperationsParserRuleCall_2_0_0());
					}
					lv_arguments_2_0=ruleLogicalOperations
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionCallListArgumentsRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_2_0,
							"org.unicam.myGrammar.OptGrammar.LogicalOperations");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getFunctionCallListArgumentsAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionCallListArgumentsAccess().getArgumentsLogicalOperationsParserRuleCall_2_1_1_0());
						}
						lv_arguments_4_0=ruleLogicalOperations
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionCallListArgumentsRule());
							}
							add(
								$current,
								"arguments",
								lv_arguments_4_0,
								"org.unicam.myGrammar.OptGrammar.LogicalOperations");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getFunctionCallListArgumentsAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleFunctionCallArguments
entryRuleFunctionCallArguments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionCallArgumentsRule()); }
	iv_ruleFunctionCallArguments=ruleFunctionCallArguments
	{ $current=$iv_ruleFunctionCallArguments.current; }
	EOF;

// Rule FunctionCallArguments
ruleFunctionCallArguments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getFunctionCallArgumentsAccess().getLeftParenthesisKeyword_0_0());
			}
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getFunctionCallArgumentsAccess().getLeftCurlyBracketKeyword_0_1());
			}
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getFunctionCallArgumentsAccess().getFunctionCallArgumentsAction_0_2(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionCallArgumentsAccess().getArgsFunctionCallArgParserRuleCall_0_3_0_0());
						}
						lv_args_3_0=ruleFunctionCallArg
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionCallArgumentsRule());
							}
							add(
								$current,
								"args",
								lv_args_3_0,
								"org.unicam.myGrammar.OptGrammar.FunctionCallArg");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4=','
					{
						newLeafNode(otherlv_4, grammarAccess.getFunctionCallArgumentsAccess().getCommaKeyword_0_3_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getFunctionCallArgumentsAccess().getArgsFunctionCallArgParserRuleCall_0_3_1_1_0());
							}
							lv_args_5_0=ruleFunctionCallArg
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getFunctionCallArgumentsRule());
								}
								add(
									$current,
									"args",
									lv_args_5_0,
									"org.unicam.myGrammar.OptGrammar.FunctionCallArg");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getFunctionCallArgumentsAccess().getRightCurlyBracketKeyword_0_4());
			}
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getFunctionCallArgumentsAccess().getRightParenthesisKeyword_0_5());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getFunctionCallArgumentsAccess().getFunctionCallListArgumentsParserRuleCall_1());
		}
		this_FunctionCallListArguments_8=ruleFunctionCallListArguments
		{
			$current = $this_FunctionCallListArguments_8.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFunctionCallArg
entryRuleFunctionCallArg returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionCallArgRule()); }
	iv_ruleFunctionCallArg=ruleFunctionCallArg
	{ $current=$iv_ruleFunctionCallArg.current; }
	EOF;

// Rule FunctionCallArg
ruleFunctionCallArg returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getFunctionCallArgAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionCallArgRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFunctionCallArgAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionCallArgAccess().getExprLogicalOperationsParserRuleCall_2_0());
				}
				lv_expr_2_0=ruleLogicalOperations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionCallArgRule());
					}
					set(
						$current,
						"expr",
						lv_expr_2_0,
						"org.unicam.myGrammar.OptGrammar.LogicalOperations");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFunctionDefinitionOptionalElement
entryRuleFunctionDefinitionOptionalElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionDefinitionOptionalElementRule()); }
	iv_ruleFunctionDefinitionOptionalElement=ruleFunctionDefinitionOptionalElement
	{ $current=$iv_ruleFunctionDefinitionOptionalElement.current; }
	EOF;

// Rule FunctionDefinitionOptionalElement
ruleFunctionDefinitionOptionalElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFunctionDefinitionOptionalElementAccess().getConstParserRuleCall_0());
		}
		this_Const_0=ruleConst
		{
			$current = $this_Const_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionDefinitionOptionalElementAccess().getVisibilitySpecifierParserRuleCall_1());
		}
		this_VisibilitySpecifier_1=ruleVisibilitySpecifier
		{
			$current = $this_VisibilitySpecifier_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConst
entryRuleConst returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstRule()); }
	iv_ruleConst=ruleConst
	{ $current=$iv_ruleConst.current; }
	EOF;

// Rule Const
ruleConst returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='constant'
		{
			newLeafNode(otherlv_0, grammarAccess.getConstAccess().getConstantKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConstAccess().getConstAction_1(),
					$current);
			}
		)
	)
;

// Entry rule entryRuleVisibilitySpecifier
entryRuleVisibilitySpecifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVisibilitySpecifierRule()); }
	iv_ruleVisibilitySpecifier=ruleVisibilitySpecifier
	{ $current=$iv_ruleVisibilitySpecifier.current; }
	EOF;

// Rule VisibilitySpecifier
ruleVisibilitySpecifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getVisibilitySpecifierAccess().getVisibilityVisibilityEnumParserRuleCall_0());
			}
			lv_visibility_0_0=ruleVisibilityEnum
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getVisibilitySpecifierRule());
				}
				set(
					$current,
					"visibility",
					lv_visibility_0_0,
					"org.unicam.myGrammar.OptGrammar.VisibilityEnum");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getVariableRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleVariableDeclarationOptionalElement
entryRuleVariableDeclarationOptionalElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableDeclarationOptionalElementRule()); }
	iv_ruleVariableDeclarationOptionalElement=ruleVariableDeclarationOptionalElement
	{ $current=$iv_ruleVariableDeclarationOptionalElement.current; }
	EOF;

// Rule VariableDeclarationOptionalElement
ruleVariableDeclarationOptionalElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getVariableDeclarationOptionalElementAccess().getVisibilitySpecifierParserRuleCall_0());
		}
		this_VisibilitySpecifier_0=ruleVisibilitySpecifier
		{
			$current = $this_VisibilitySpecifier_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getVariableDeclarationOptionalElementAccess().getIndexedSpeciferParserRuleCall_1());
		}
		this_IndexedSpecifer_1=ruleIndexedSpecifer
		{
			$current = $this_IndexedSpecifer_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getVariableDeclarationOptionalElementAccess().getConstantSpecifierParserRuleCall_2());
		}
		this_ConstantSpecifier_2=ruleConstantSpecifier
		{
			$current = $this_ConstantSpecifier_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getVariableDeclarationOptionalElementAccess().getLocationSpecifierParserRuleCall_3());
		}
		this_LocationSpecifier_3=ruleLocationSpecifier
		{
			$current = $this_LocationSpecifier_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIndexedSpecifer
entryRuleIndexedSpecifer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndexedSpeciferRule()); }
	iv_ruleIndexedSpecifer=ruleIndexedSpecifer
	{ $current=$iv_ruleIndexedSpecifer.current; }
	EOF;

// Rule IndexedSpecifer
ruleIndexedSpecifer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='indexed'
		{
			newLeafNode(otherlv_0, grammarAccess.getIndexedSpeciferAccess().getIndexedKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIndexedSpeciferAccess().getIndexedSpeciferAction_1(),
					$current);
			}
		)
	)
;

// Entry rule entryRuleConstantSpecifier
entryRuleConstantSpecifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstantSpecifierRule()); }
	iv_ruleConstantSpecifier=ruleConstantSpecifier
	{ $current=$iv_ruleConstantSpecifier.current; }
	EOF;

// Rule ConstantSpecifier
ruleConstantSpecifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='constant'
		{
			newLeafNode(otherlv_0, grammarAccess.getConstantSpecifierAccess().getConstantKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConstantSpecifierAccess().getConstantSpecifierAction_1(),
					$current);
			}
		)
	)
;

// Entry rule entryRuleLocationSpecifier
entryRuleLocationSpecifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocationSpecifierRule()); }
	iv_ruleLocationSpecifier=ruleLocationSpecifier
	{ $current=$iv_ruleLocationSpecifier.current; }
	EOF;

// Rule LocationSpecifier
ruleLocationSpecifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getLocationSpecifierAccess().getLocationLocationSpecifierEnumParserRuleCall_0());
			}
			lv_location_0_0=ruleLocationSpecifierEnum
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getLocationSpecifierRule());
				}
				set(
					$current,
					"location",
					lv_location_0_0,
					"org.unicam.myGrammar.OptGrammar.LocationSpecifierEnum");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeAccess().getStandardTypeParserRuleCall_0());
		}
		this_StandardType_0=ruleStandardType
		{
			$current = $this_StandardType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeAccess().getIsVarTypeVarTypeParserRuleCall_1_0());
				}
				lv_isVarType_1_0=ruleVarType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeRule());
					}
					set(
						$current,
						"isVarType",
						true,
						"org.unicam.myGrammar.OptGrammar.VarType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStandardType
entryRuleStandardType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStandardTypeRule()); }
	iv_ruleStandardType=ruleStandardType
	{ $current=$iv_ruleStandardType.current; }
	EOF;

// Rule StandardType
ruleStandardType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getStandardTypeAccess().getElementaryTypeParserRuleCall_0_0());
			}
			this_ElementaryType_0=ruleElementaryType
			{
				$current = $this_ElementaryType_0.current;
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStandardTypeAccess().getDimensionArrayDimensionsParserRuleCall_0_1_0());
					}
					lv_dimension_1_0=ruleArrayDimensions
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStandardTypeRule());
						}
						set(
							$current,
							"dimension",
							lv_dimension_1_0,
							"org.unicam.myGrammar.OptGrammar.ArrayDimensions");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		    |
		{
			newCompositeNode(grammarAccess.getStandardTypeAccess().getMappingDeclarationParserRuleCall_1());
		}
		this_MappingDeclaration_2=ruleMappingDeclaration
		{
			$current = $this_MappingDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStandardTypeAccess().getQualifiedIdentifierParserRuleCall_2());
		}
		this_QualifiedIdentifier_3=ruleQualifiedIdentifier
		{
			$current = $this_QualifiedIdentifier_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStandardTypeWithoutQualifiedIdentifier
entryRuleStandardTypeWithoutQualifiedIdentifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStandardTypeWithoutQualifiedIdentifierRule()); }
	iv_ruleStandardTypeWithoutQualifiedIdentifier=ruleStandardTypeWithoutQualifiedIdentifier
	{ $current=$iv_ruleStandardTypeWithoutQualifiedIdentifier.current; }
	EOF;

// Rule StandardTypeWithoutQualifiedIdentifier
ruleStandardTypeWithoutQualifiedIdentifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getElementaryTypeParserRuleCall_0_0());
			}
			this_ElementaryType_0=ruleElementaryType
			{
				$current = $this_ElementaryType_0.current;
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getDimensionArrayDimensionsParserRuleCall_0_1_0());
					}
					lv_dimension_1_0=ruleArrayDimensions
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStandardTypeWithoutQualifiedIdentifierRule());
						}
						set(
							$current,
							"dimension",
							lv_dimension_1_0,
							"org.unicam.myGrammar.OptGrammar.ArrayDimensions");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		    |
		{
			newCompositeNode(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getMappingDeclarationParserRuleCall_1());
		}
		this_MappingDeclaration_2=ruleMappingDeclaration
		{
			$current = $this_MappingDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleElementaryType
entryRuleElementaryType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementaryTypeRule()); }
	iv_ruleElementaryType=ruleElementaryType
	{ $current=$iv_ruleElementaryType.current; }
	EOF;

// Rule ElementaryType
ruleElementaryType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getElementaryTypeAccess().getNameElementaryTypeNameEnumParserRuleCall_0());
			}
			lv_name_0_0=ruleElementaryTypeNameEnum
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getElementaryTypeRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"org.unicam.myGrammar.OptGrammar.ElementaryTypeNameEnum");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleArrayDimensions
entryRuleArrayDimensions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayDimensionsRule()); }
	iv_ruleArrayDimensions=ruleArrayDimensions
	{ $current=$iv_ruleArrayDimensions.current; }
	EOF;

// Rule ArrayDimensions
ruleArrayDimensions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getArrayDimensionsAccess().getLeftSquareBracketKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getArrayDimensionsAccess().getArrayDimensionsAction_1(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getArrayDimensionsAccess().getValueLogicalOperationsParserRuleCall_2_0());
				}
				lv_value_2_0=ruleLogicalOperations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArrayDimensionsRule());
					}
					add(
						$current,
						"value",
						lv_value_2_0,
						"org.unicam.myGrammar.OptGrammar.LogicalOperations");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getArrayDimensionsAccess().getRightSquareBracketKeyword_3());
		}
		(
			otherlv_4='['
			{
				newLeafNode(otherlv_4, grammarAccess.getArrayDimensionsAccess().getLeftSquareBracketKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArrayDimensionsAccess().getValueLogicalOperationsParserRuleCall_4_1_0());
					}
					lv_value_5_0=ruleLogicalOperations
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArrayDimensionsRule());
						}
						add(
							$current,
							"value",
							lv_value_5_0,
							"org.unicam.myGrammar.OptGrammar.LogicalOperations");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_6=']'
			{
				newLeafNode(otherlv_6, grammarAccess.getArrayDimensionsAccess().getRightSquareBracketKeyword_4_2());
			}
		)*
	)
;

// Entry rule entryRuleVarType
entryRuleVarType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVarTypeRule()); }
	iv_ruleVarType=ruleVarType
	{ $current=$iv_ruleVarType.current.getText(); }
	EOF;

// Rule VarType
ruleVarType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='var'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getVarTypeAccess().getVarKeyword());
	}
;

// Entry rule entryRuleTuple
entryRuleTuple returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTupleRule()); }
	iv_ruleTuple=ruleTuple
	{ $current=$iv_ruleTuple.current; }
	EOF;

// Rule Tuple
ruleTuple returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getTupleAccess().getLeftParenthesisKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTupleAccess().getTupleAction_1(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTupleAccess().getMembersLogicalOperationsParserRuleCall_2_0_0());
					}
					lv_members_2_0=ruleLogicalOperations
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTupleRule());
						}
						add(
							$current,
							"members",
							lv_members_2_0,
							"org.unicam.myGrammar.OptGrammar.LogicalOperations");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getTupleAccess().getMembersTupleSeparatorParserRuleCall_2_1_0_0());
						}
						lv_members_3_0=ruleTupleSeparator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTupleRule());
							}
							add(
								$current,
								"members",
								lv_members_3_0,
								"org.unicam.myGrammar.OptGrammar.TupleSeparator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getTupleAccess().getMembersLogicalOperationsParserRuleCall_2_1_1_0());
						}
						lv_members_4_0=ruleLogicalOperations
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTupleRule());
							}
							add(
								$current,
								"members",
								lv_members_4_0,
								"org.unicam.myGrammar.OptGrammar.LogicalOperations");
							afterParserOrEnumRuleCall();
						}
					)
				)?
			)+
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getTupleAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleTupleSeparator
entryRuleTupleSeparator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTupleSeparatorRule()); }
	iv_ruleTupleSeparator=ruleTupleSeparator
	{ $current=$iv_ruleTupleSeparator.current; }
	EOF;

// Rule TupleSeparator
ruleTupleSeparator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=','
		{
			newLeafNode(otherlv_0, grammarAccess.getTupleSeparatorAccess().getCommaKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTupleSeparatorAccess().getTupleSeparatorAction_1(),
					$current);
			}
		)
	)
;

// Entry rule entryRuleSimpleStatement
entryRuleSimpleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleStatementRule()); }
	iv_ruleSimpleStatement=ruleSimpleStatement
	{ $current=$iv_ruleSimpleStatement.current; }
	EOF;

// Rule SimpleStatement
ruleSimpleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleStatementAccess().getStandardTypeWithoutQualifiedIdentifierParserRuleCall_0_0_0());
				}
				this_StandardTypeWithoutQualifiedIdentifier_0=ruleStandardTypeWithoutQualifiedIdentifier
				{
					$current = $this_StandardTypeWithoutQualifiedIdentifier_0.current;
					afterParserOrEnumRuleCall();
				}
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getSimpleStatementAccess().getStandardVariableDeclarationTypeAction_0_0_1_0(),
								$current);
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getSimpleStatementAccess().getPtionalElementsVariableDeclarationOptionalElementParserRuleCall_0_0_1_1_0());
							}
							lv_ptionalElements_2_0=ruleVariableDeclarationOptionalElement
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSimpleStatementRule());
								}
								add(
									$current,
									"ptionalElements",
									lv_ptionalElements_2_0,
									"org.unicam.myGrammar.OptGrammar.VariableDeclarationOptionalElement");
								afterParserOrEnumRuleCall();
							}
						)
					)*
					(
						(
							{
								newCompositeNode(grammarAccess.getSimpleStatementAccess().getVariableVariableParserRuleCall_0_0_1_2_0());
							}
							lv_variable_3_0=ruleVariable
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSimpleStatementRule());
								}
								set(
									$current,
									"variable",
									lv_variable_3_0,
									"org.unicam.myGrammar.OptGrammar.Variable");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_4='='
						{
							newLeafNode(otherlv_4, grammarAccess.getSimpleStatementAccess().getEqualsSignKeyword_0_0_1_3_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getSimpleStatementAccess().getExpressionLogicalOperationsParserRuleCall_0_0_1_3_1_0());
								}
								lv_expression_5_0=ruleLogicalOperations
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSimpleStatementRule());
									}
									set(
										$current,
										"expression",
										lv_expression_5_0,
										"org.unicam.myGrammar.OptGrammar.LogicalOperations");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)?
				)
			)
			    |
			(
				{
					newCompositeNode(grammarAccess.getSimpleStatementAccess().getVarTypeParserRuleCall_0_1_0());
				}
				ruleVarType
				{
					afterParserOrEnumRuleCall();
				}
				(
					(
						(
							{
								$current = forceCreateModelElement(
									grammarAccess.getSimpleStatementAccess().getVarVariableTypeDeclarationAction_0_1_1_0_0(),
									$current);
							}
						)
						(
							(
								{
									newCompositeNode(grammarAccess.getSimpleStatementAccess().getVariableVariableParserRuleCall_0_1_1_0_1_0());
								}
								lv_variable_8_0=ruleVariable
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSimpleStatementRule());
									}
									set(
										$current,
										"variable",
										lv_variable_8_0,
										"org.unicam.myGrammar.OptGrammar.Variable");
									afterParserOrEnumRuleCall();
								}
							)
						)
						(
							otherlv_9='='
							{
								newLeafNode(otherlv_9, grammarAccess.getSimpleStatementAccess().getEqualsSignKeyword_0_1_1_0_2_0());
							}
							(
								(
									{
										newCompositeNode(grammarAccess.getSimpleStatementAccess().getExpressionLogicalOperationsParserRuleCall_0_1_1_0_2_1_0());
									}
									lv_expression_10_0=ruleLogicalOperations
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getSimpleStatementRule());
										}
										set(
											$current,
											"expression",
											lv_expression_10_0,
											"org.unicam.myGrammar.OptGrammar.LogicalOperations");
										afterParserOrEnumRuleCall();
									}
								)
							)
						)
					)
					    |
					(
						(
							{
								$current = forceCreateModelElement(
									grammarAccess.getSimpleStatementAccess().getVarVariableTupleVariableDeclarationAction_0_1_1_1_0(),
									$current);
							}
						)
						(
							(
								{
									newCompositeNode(grammarAccess.getSimpleStatementAccess().getTupleTupleParserRuleCall_0_1_1_1_1_0());
								}
								lv_tuple_12_0=ruleTuple
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSimpleStatementRule());
									}
									set(
										$current,
										"tuple",
										lv_tuple_12_0,
										"org.unicam.myGrammar.OptGrammar.Tuple");
									afterParserOrEnumRuleCall();
								}
							)
						)
						(
							otherlv_13='='
							{
								newLeafNode(otherlv_13, grammarAccess.getSimpleStatementAccess().getEqualsSignKeyword_0_1_1_1_2_0());
							}
							(
								(
									{
										newCompositeNode(grammarAccess.getSimpleStatementAccess().getExpressionLogicalOperationsParserRuleCall_0_1_1_1_2_1_0());
									}
									lv_expression_14_0=ruleLogicalOperations
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getSimpleStatementRule());
										}
										set(
											$current,
											"expression",
											lv_expression_14_0,
											"org.unicam.myGrammar.OptGrammar.LogicalOperations");
										afterParserOrEnumRuleCall();
									}
								)
							)
						)
					)
				)
			)
			    |
			{
				newCompositeNode(grammarAccess.getSimpleStatementAccess().getExpressionStatementParserRuleCall_0_2());
			}
			this_ExpressionStatement_15=ruleExpressionStatement
			{
				$current = $this_ExpressionStatement_15.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			(
				lv_semicolon_16_0=';'
				{
					newLeafNode(lv_semicolon_16_0, grammarAccess.getSimpleStatementAccess().getSemicolonSemicolonKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimpleStatementRule());
					}
					setWithLastConsumed($current, "semicolon", true, ";");
				}
			)
		)
	)
;

// Entry rule entryRuleSimpleStatement2
entryRuleSimpleStatement2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleStatement2Rule()); }
	iv_ruleSimpleStatement2=ruleSimpleStatement2
	{ $current=$iv_ruleSimpleStatement2.current; }
	EOF;

// Rule SimpleStatement2
ruleSimpleStatement2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getSimpleStatement2Access().getStandardTypeWithoutQualifiedIdentifierParserRuleCall_0_0());
			}
			this_StandardTypeWithoutQualifiedIdentifier_0=ruleStandardTypeWithoutQualifiedIdentifier
			{
				$current = $this_StandardTypeWithoutQualifiedIdentifier_0.current;
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getSimpleStatement2Access().getStandardVariableDeclarationTypeAction_0_1_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getSimpleStatement2Access().getOptionalElementsVariableDeclarationOptionalElementParserRuleCall_0_1_1_0());
						}
						lv_optionalElements_2_0=ruleVariableDeclarationOptionalElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimpleStatement2Rule());
							}
							add(
								$current,
								"optionalElements",
								lv_optionalElements_2_0,
								"org.unicam.myGrammar.OptGrammar.VariableDeclarationOptionalElement");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				(
					(
						{
							newCompositeNode(grammarAccess.getSimpleStatement2Access().getVariableVariableParserRuleCall_0_1_2_0());
						}
						lv_variable_3_0=ruleVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimpleStatement2Rule());
							}
							set(
								$current,
								"variable",
								lv_variable_3_0,
								"org.unicam.myGrammar.OptGrammar.Variable");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4='='
					{
						newLeafNode(otherlv_4, grammarAccess.getSimpleStatement2Access().getEqualsSignKeyword_0_1_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSimpleStatement2Access().getExpressionLogicalOperationsParserRuleCall_0_1_3_1_0());
							}
							lv_expression_5_0=ruleLogicalOperations
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSimpleStatement2Rule());
								}
								set(
									$current,
									"expression",
									lv_expression_5_0,
									"org.unicam.myGrammar.OptGrammar.LogicalOperations");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
			)
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getSimpleStatement2Access().getVarTypeParserRuleCall_1_0());
			}
			ruleVarType
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					(
						{
							$current = forceCreateModelElement(
								grammarAccess.getSimpleStatement2Access().getVarVariableTypeDeclarationAction_1_1_0_0(),
								$current);
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getSimpleStatement2Access().getVariableVariableParserRuleCall_1_1_0_1_0());
							}
							lv_variable_8_0=ruleVariable
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSimpleStatement2Rule());
								}
								set(
									$current,
									"variable",
									lv_variable_8_0,
									"org.unicam.myGrammar.OptGrammar.Variable");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_9='='
						{
							newLeafNode(otherlv_9, grammarAccess.getSimpleStatement2Access().getEqualsSignKeyword_1_1_0_2_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getSimpleStatement2Access().getExpressionLogicalOperationsParserRuleCall_1_1_0_2_1_0());
								}
								lv_expression_10_0=ruleLogicalOperations
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSimpleStatement2Rule());
									}
									set(
										$current,
										"expression",
										lv_expression_10_0,
										"org.unicam.myGrammar.OptGrammar.LogicalOperations");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
				)
				    |
				(
					(
						{
							$current = forceCreateModelElement(
								grammarAccess.getSimpleStatement2Access().getVarVariableTupleVariableDeclarationAction_1_1_1_0(),
								$current);
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getSimpleStatement2Access().getTupleTupleParserRuleCall_1_1_1_1_0());
							}
							lv_tuple_12_0=ruleTuple
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSimpleStatement2Rule());
								}
								set(
									$current,
									"tuple",
									lv_tuple_12_0,
									"org.unicam.myGrammar.OptGrammar.Tuple");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_13='='
						{
							newLeafNode(otherlv_13, grammarAccess.getSimpleStatement2Access().getEqualsSignKeyword_1_1_1_2_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getSimpleStatement2Access().getExpressionLogicalOperationsParserRuleCall_1_1_1_2_1_0());
								}
								lv_expression_14_0=ruleLogicalOperations
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSimpleStatement2Rule());
									}
									set(
										$current,
										"expression",
										lv_expression_14_0,
										"org.unicam.myGrammar.OptGrammar.LogicalOperations");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getSimpleStatement2Access().getExpressionStatementParserRuleCall_2());
		}
		this_ExpressionStatement_15=ruleExpressionStatement
		{
			$current = $this_ExpressionStatement_15.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExpressionStatement
entryRuleExpressionStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionStatementRule()); }
	iv_ruleExpressionStatement=ruleExpressionStatement
	{ $current=$iv_ruleExpressionStatement.current; }
	EOF;

// Rule ExpressionStatement
ruleExpressionStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getExpressionStatementAccess().getExpressionLogicalOperationsParserRuleCall_0());
			}
			lv_expression_0_0=ruleLogicalOperations
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getExpressionStatementRule());
				}
				set(
					$current,
					"expression",
					lv_expression_0_0,
					"org.unicam.myGrammar.OptGrammar.LogicalOperations");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleQualifiedIdentifier
entryRuleQualifiedIdentifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedIdentifierRule()); }
	iv_ruleQualifiedIdentifier=ruleQualifiedIdentifier
	{ $current=$iv_ruleQualifiedIdentifier.current; }
	EOF;

// Rule QualifiedIdentifier
ruleQualifiedIdentifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_identifier_0_0=RULE_ID
				{
					newLeafNode(lv_identifier_0_0, grammarAccess.getQualifiedIdentifierAccess().getIdentifierIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQualifiedIdentifierRule());
					}
					setWithLastConsumed(
						$current,
						"identifier",
						lv_identifier_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getQualifiedIdentifierAccess().getQualifiersQualifierParserRuleCall_1_0());
				}
				lv_qualifiers_1_0=ruleQualifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQualifiedIdentifierRule());
					}
					add(
						$current,
						"qualifiers",
						lv_qualifiers_1_0,
						"org.unicam.myGrammar.OptGrammar.Qualifier");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleQualifier
entryRuleQualifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQualifierRule()); }
	iv_ruleQualifier=ruleQualifier
	{ $current=$iv_ruleQualifier.current; }
	EOF;

// Rule Qualifier
ruleQualifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifierAccess().getFieldParserRuleCall_0());
		}
		this_Field_0=ruleField
		{
			$current = $this_Field_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQualifierAccess().getIndexParserRuleCall_1());
		}
		this_Index_1=ruleIndex
		{
			$current = $this_Index_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQualifierAccess().getArgumentsParserRuleCall_2());
		}
		this_Arguments_2=ruleArguments
		{
			$current = $this_Arguments_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleField
entryRuleField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	iv_ruleField=ruleField
	{ $current=$iv_ruleField.current; }
	EOF;

// Rule Field
ruleField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='.'
		{
			newLeafNode(otherlv_0, grammarAccess.getFieldAccess().getFullStopKeyword_0());
		}
		(
			(
				lv_field_1_0=RULE_ID
				{
					newLeafNode(lv_field_1_0, grammarAccess.getFieldAccess().getFieldIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldRule());
					}
					setWithLastConsumed(
						$current,
						"field",
						lv_field_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleIndex
entryRuleIndex returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndexRule()); }
	iv_ruleIndex=ruleIndex
	{ $current=$iv_ruleIndex.current; }
	EOF;

// Rule Index
ruleIndex returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIndexAccess().getIndexAction_1(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIndexAccess().getValueLogicalOperationsParserRuleCall_2_0());
				}
				lv_value_2_0=ruleLogicalOperations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIndexRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.unicam.myGrammar.OptGrammar.LogicalOperations");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getIndexAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleArguments
entryRuleArguments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentsRule()); }
	iv_ruleArguments=ruleArguments
	{ $current=$iv_ruleArguments.current; }
	EOF;

// Rule Arguments
ruleArguments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getArgumentsAccess().getArgumentsFunctionCallArgumentsParserRuleCall_0());
			}
			lv_arguments_0_0=ruleFunctionCallArguments
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getArgumentsRule());
				}
				set(
					$current,
					"arguments",
					lv_arguments_0_0,
					"org.unicam.myGrammar.OptGrammar.FunctionCallArguments");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleReturnParameterDeclaration
entryRuleReturnParameterDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnParameterDeclarationRule()); }
	iv_ruleReturnParameterDeclaration=ruleReturnParameterDeclaration
	{ $current=$iv_ruleReturnParameterDeclaration.current; }
	EOF;

// Rule ReturnParameterDeclaration
ruleReturnParameterDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnParameterDeclarationAccess().getTypeRefTypeParserRuleCall_0_0());
				}
				lv_typeRef_0_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnParameterDeclarationRule());
					}
					set(
						$current,
						"typeRef",
						lv_typeRef_0_0,
						"org.unicam.myGrammar.OptGrammar.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnParameterDeclarationAccess().getVariableVariableParserRuleCall_1_0());
				}
				lv_variable_1_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnParameterDeclarationRule());
					}
					set(
						$current,
						"variable",
						lv_variable_1_0,
						"org.unicam.myGrammar.OptGrammar.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleLoopStructures
entryRuleLoopStructures returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoopStructuresRule()); }
	iv_ruleLoopStructures=ruleLoopStructures
	{ $current=$iv_ruleLoopStructures.current; }
	EOF;

// Rule LoopStructures
ruleLoopStructures returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLoopStructuresAccess().getIfStatementParserRuleCall_0());
		}
		this_IfStatement_0=ruleIfStatement
		{
			$current = $this_IfStatement_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLoopStructuresAccess().getWhileStatementParserRuleCall_1());
		}
		this_WhileStatement_1=ruleWhileStatement
		{
			$current = $this_WhileStatement_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLoopStructuresAccess().getForStatementParserRuleCall_2());
		}
		this_ForStatement_2=ruleForStatement
		{
			$current = $this_ForStatement_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStatementAccess().getLoopStructuresParserRuleCall_0());
		}
		this_LoopStructures_0=ruleLoopStructures
		{
			$current = $this_LoopStructures_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getBodyParserRuleCall_1());
		}
		this_Body_1=ruleBody
		{
			$current = $this_Body_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getPlaceHolderStatementParserRuleCall_2());
		}
		this_PlaceHolderStatement_2=rulePlaceHolderStatement
		{
			$current = $this_PlaceHolderStatement_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			{
				newCompositeNode(grammarAccess.getStatementAccess().getContinueStatementParserRuleCall_3_0());
			}
			this_ContinueStatement_3=ruleContinueStatement
			{
				$current = $this_ContinueStatement_3.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getStatementAccess().getBreakStatementParserRuleCall_3_1());
			}
			this_BreakStatement_4=ruleBreakStatement
			{
				$current = $this_BreakStatement_4.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_3_2());
			}
			this_ReturnStatement_5=ruleReturnStatement
			{
				$current = $this_ReturnStatement_5.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getStatementAccess().getThrowStatementParserRuleCall_3_3());
			}
			this_ThrowStatement_6=ruleThrowStatement
			{
				$current = $this_ThrowStatement_6.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getStatementAccess().getDeleteStatementParserRuleCall_3_4());
			}
			this_DeleteStatement_7=ruleDeleteStatement
			{
				$current = $this_DeleteStatement_7.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getStatementAccess().getSimpleStatementParserRuleCall_3_5());
			}
			this_SimpleStatement_8=ruleSimpleStatement
			{
				$current = $this_SimpleStatement_8.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleDeleteStatement
entryRuleDeleteStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeleteStatementRule()); }
	iv_ruleDeleteStatement=ruleDeleteStatement
	{ $current=$iv_ruleDeleteStatement.current; }
	EOF;

// Rule DeleteStatement
ruleDeleteStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='delete'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeleteStatementAccess().getDeleteKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeleteStatementAccess().getVariableQualifiedIdentifierParserRuleCall_1_0());
				}
				lv_variable_1_0=ruleQualifiedIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeleteStatementRule());
					}
					set(
						$current,
						"variable",
						lv_variable_1_0,
						"org.unicam.myGrammar.OptGrammar.QualifiedIdentifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getDeleteStatementAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleIfStatement
entryRuleIfStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStatementRule()); }
	iv_ruleIfStatement=ruleIfStatement
	{ $current=$iv_ruleIfStatement.current; }
	EOF;

// Rule IfStatement
ruleIfStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfStatementAccess().getIfKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getConditionLogicalOperationsParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleLogicalOperations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"org.unicam.myGrammar.OptGrammar.LogicalOperations");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getTrueBodyStatementParserRuleCall_4_0());
				}
				lv_trueBody_4_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"trueBody",
						lv_trueBody_4_0,
						"org.unicam.myGrammar.OptGrammar.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				('else')=>
				otherlv_5='else'
				{
					newLeafNode(otherlv_5, grammarAccess.getIfStatementAccess().getElseKeyword_5_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStatementAccess().getFalseBodyStatementParserRuleCall_5_1_0());
					}
					lv_falseBody_6_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStatementRule());
						}
						set(
							$current,
							"falseBody",
							lv_falseBody_6_0,
							"org.unicam.myGrammar.OptGrammar.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleWhileStatement
entryRuleWhileStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhileStatementRule()); }
	iv_ruleWhileStatement=ruleWhileStatement
	{ $current=$iv_ruleWhileStatement.current; }
	EOF;

// Rule WhileStatement
ruleWhileStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='while'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhileStatementAccess().getWhileKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileStatementAccess().getConditionLogicalOperationsParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleLogicalOperations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileStatementRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"org.unicam.myGrammar.OptGrammar.LogicalOperations");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileStatementAccess().getBodyStatementParserRuleCall_4_0());
				}
				lv_body_4_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileStatementRule());
					}
					set(
						$current,
						"body",
						lv_body_4_0,
						"org.unicam.myGrammar.OptGrammar.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleForStatement
entryRuleForStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForStatementRule()); }
	iv_ruleForStatement=ruleForStatement
	{ $current=$iv_ruleForStatement.current; }
	EOF;

// Rule ForStatement
ruleForStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getForStatementAccess().getForKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStatementAccess().getInitExpressionSimpleStatement2ParserRuleCall_2_0());
				}
				lv_initExpression_2_0=ruleSimpleStatement2
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStatementRule());
					}
					set(
						$current,
						"initExpression",
						lv_initExpression_2_0,
						"org.unicam.myGrammar.OptGrammar.SimpleStatement2");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(';')=>
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getForStatementAccess().getSemicolonKeyword_3());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getForStatementAccess().getConditionExpressionLogicalOperationsParserRuleCall_4_0());
				}
				lv_conditionExpression_4_0=ruleLogicalOperations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStatementRule());
					}
					set(
						$current,
						"conditionExpression",
						lv_conditionExpression_4_0,
						"org.unicam.myGrammar.OptGrammar.LogicalOperations");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getForStatementAccess().getSemicolonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStatementAccess().getLoopExpressionExpressionStatementParserRuleCall_6_0());
				}
				lv_loopExpression_6_0=ruleExpressionStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStatementRule());
					}
					set(
						$current,
						"loopExpression",
						lv_loopExpression_6_0,
						"org.unicam.myGrammar.OptGrammar.ExpressionStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getForStatementAccess().getRightParenthesisKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStatementAccess().getBodyStatementParserRuleCall_8_0());
				}
				lv_body_8_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStatementRule());
					}
					set(
						$current,
						"body",
						lv_body_8_0,
						"org.unicam.myGrammar.OptGrammar.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBody
entryRuleBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBodyRule()); }
	iv_ruleBody=ruleBody
	{ $current=$iv_ruleBody.current; }
	EOF;

// Rule Body
ruleBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBodyAccess().getBodyAction_1(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBodyAccess().getStatementsStatementParserRuleCall_2_0_0());
					}
					lv_statements_2_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBodyRule());
						}
						add(
							$current,
							"statements",
							lv_statements_2_0,
							"org.unicam.myGrammar.OptGrammar.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBodyAccess().getStatementsStatementParserRuleCall_2_1_0());
					}
					lv_statements_3_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBodyRule());
						}
						add(
							$current,
							"statements",
							lv_statements_3_0,
							"org.unicam.myGrammar.OptGrammar.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleContinueStatement
entryRuleContinueStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContinueStatementRule()); }
	iv_ruleContinueStatement=ruleContinueStatement
	{ $current=$iv_ruleContinueStatement.current; }
	EOF;

// Rule ContinueStatement
ruleContinueStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='continue'
		{
			newLeafNode(otherlv_0, grammarAccess.getContinueStatementAccess().getContinueKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getContinueStatementAccess().getContinueAction_1(),
					$current);
			}
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getContinueStatementAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleBreakStatement
entryRuleBreakStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBreakStatementRule()); }
	iv_ruleBreakStatement=ruleBreakStatement
	{ $current=$iv_ruleBreakStatement.current; }
	EOF;

// Rule BreakStatement
ruleBreakStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='break'
		{
			newLeafNode(otherlv_0, grammarAccess.getBreakStatementAccess().getBreakKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBreakStatementAccess().getBreakStatementAction_1(),
					$current);
			}
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getBreakStatementAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleReturnStatement
entryRuleReturnStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnStatementRule()); }
	iv_ruleReturnStatement=ruleReturnStatement
	{ $current=$iv_ruleReturnStatement.current; }
	EOF;

// Rule ReturnStatement
ruleReturnStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='return'
		{
			newLeafNode(otherlv_0, grammarAccess.getReturnStatementAccess().getReturnKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getReturnStatementAccess().getReturnStatementAction_1(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnStatementAccess().getExpressionLogicalOperationsParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleLogicalOperations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnStatementRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.unicam.myGrammar.OptGrammar.LogicalOperations");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getReturnStatementAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleThrowStatement
entryRuleThrowStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThrowStatementRule()); }
	iv_ruleThrowStatement=ruleThrowStatement
	{ $current=$iv_ruleThrowStatement.current; }
	EOF;

// Rule ThrowStatement
ruleThrowStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='throw'
		{
			newLeafNode(otherlv_0, grammarAccess.getThrowStatementAccess().getThrowKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getThrowStatementAccess().getThrowStatementAction_1(),
					$current);
			}
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getThrowStatementAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRulePlaceHolderStatement
entryRulePlaceHolderStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlaceHolderStatementRule()); }
	iv_rulePlaceHolderStatement=rulePlaceHolderStatement
	{ $current=$iv_rulePlaceHolderStatement.current; }
	EOF;

// Rule PlaceHolderStatement
rulePlaceHolderStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='_'
		{
			newLeafNode(otherlv_0, grammarAccess.getPlaceHolderStatementAccess().get_Keyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPlaceHolderStatementAccess().getPlaceHolderStatementAction_1(),
					$current);
			}
		)
		(
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getPlaceHolderStatementAccess().getSemicolonKeyword_2());
			}
		)?
	)
;

// Entry rule entryRuleLogicalOperations
entryRuleLogicalOperations returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalOperationsRule()); }
	iv_ruleLogicalOperations=ruleLogicalOperations
	{ $current=$iv_ruleLogicalOperations.current; }
	EOF;

// Rule LogicalOperations
ruleLogicalOperations returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalOperationsAccess().getFirstLiteralParserRuleCall_0_0_0());
					}
					lv_first_0_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalOperationsRule());
						}
						set(
							$current,
							"first",
							lv_first_0_0,
							"org.unicam.myGrammar.OptGrammar.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalOperationsAccess().getOperationsConditionOperationParserRuleCall_0_1_0());
					}
					lv_operations_1_0=ruleConditionOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalOperationsRule());
						}
						add(
							$current,
							"operations",
							lv_operations_1_0,
							"org.unicam.myGrammar.OptGrammar.ConditionOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)
		    |
		(
			(
				(
					lv_negate_2_0='NOT'
					{
						newLeafNode(lv_negate_2_0, grammarAccess.getLogicalOperationsAccess().getNegateNOTKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLogicalOperationsRule());
						}
						setWithLastConsumed($current, "negate", true, "NOT");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalOperationsAccess().getFirstLiteralParserRuleCall_1_1_0());
					}
					lv_first_3_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalOperationsRule());
						}
						set(
							$current,
							"first",
							lv_first_3_0,
							"org.unicam.myGrammar.OptGrammar.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalOperationsAccess().getOperationsConditionOperationParserRuleCall_1_2_0());
					}
					lv_operations_4_0=ruleConditionOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalOperationsRule());
						}
						add(
							$current,
							"operations",
							lv_operations_4_0,
							"org.unicam.myGrammar.OptGrammar.ConditionOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)
		    |
		(
			(
				(
					lv_ternary_5_0='TERNARY'
					{
						newLeafNode(lv_ternary_5_0, grammarAccess.getLogicalOperationsAccess().getTernaryTERNARYKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLogicalOperationsRule());
						}
						setWithLastConsumed($current, "ternary", true, "TERNARY");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalOperationsAccess().getFirstLiteralParserRuleCall_2_1_0());
					}
					lv_first_6_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalOperationsRule());
						}
						set(
							$current,
							"first",
							lv_first_6_0,
							"org.unicam.myGrammar.OptGrammar.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7='?'
			{
				newLeafNode(otherlv_7, grammarAccess.getLogicalOperationsAccess().getQuestionMarkKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalOperationsAccess().getTrueLiteralParserRuleCall_2_3_0());
					}
					lv_true_8_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalOperationsRule());
						}
						set(
							$current,
							"true",
							lv_true_8_0,
							"org.unicam.myGrammar.OptGrammar.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=':'
			{
				newLeafNode(otherlv_9, grammarAccess.getLogicalOperationsAccess().getColonKeyword_2_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalOperationsAccess().getFalseLiteralParserRuleCall_2_5_0());
					}
					lv_false_10_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalOperationsRule());
						}
						set(
							$current,
							"false",
							lv_false_10_0,
							"org.unicam.myGrammar.OptGrammar.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleConditionOperation
entryRuleConditionOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionOperationRule()); }
	iv_ruleConditionOperation=ruleConditionOperation
	{ $current=$iv_ruleConditionOperation.current; }
	EOF;

// Rule ConditionOperation
ruleConditionOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionOperationAccess().getOperationLogicalOperationLiteralEnumRuleCall_0_0());
				}
				lv_operation_0_0=ruleLogicalOperationLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionOperationRule());
					}
					set(
						$current,
						"operation",
						lv_operation_0_0,
						"org.unicam.myGrammar.OptGrammar.LogicalOperationLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_negateSecond_1_0='NOT'
				{
					newLeafNode(lv_negateSecond_1_0, grammarAccess.getConditionOperationAccess().getNegateSecondNOTKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionOperationRule());
					}
					setWithLastConsumed($current, "negateSecond", lv_negateSecond_1_0, "NOT");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionOperationAccess().getSecondsLiteralParserRuleCall_2_0());
				}
				lv_seconds_2_0=ruleLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionOperationRule());
					}
					set(
						$current,
						"seconds",
						lv_seconds_2_0,
						"org.unicam.myGrammar.OptGrammar.Literal");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getSpecialVariablesParserRuleCall_0());
		}
		this_SpecialVariables_0=ruleSpecialVariables
		{
			$current = $this_SpecialVariables_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getBooleanConstParserRuleCall_1());
		}
		this_BooleanConst_1=ruleBooleanConst
		{
			$current = $this_BooleanConst_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getNumericLiteralParserRuleCall_2());
		}
		this_NumericLiteral_2=ruleNumericLiteral
		{
			$current = $this_NumericLiteral_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_3());
		}
		this_StringLiteral_3=ruleStringLiteral
		{
			$current = $this_StringLiteral_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getGasleftFunctionParserRuleCall_4());
		}
		this_GasleftFunction_4=ruleGasleftFunction
		{
			$current = $this_GasleftFunction_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getBlockhashFunctionParserRuleCall_5());
		}
		this_BlockhashFunction_5=ruleBlockhashFunction
		{
			$current = $this_BlockhashFunction_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getMathematicalFunctionParserRuleCall_6());
		}
		this_MathematicalFunction_6=ruleMathematicalFunction
		{
			$current = $this_MathematicalFunction_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getHashFunctionParserRuleCall_7());
		}
		this_HashFunction_7=ruleHashFunction
		{
			$current = $this_HashFunction_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getEcrecoverFunctionParserRuleCall_8());
		}
		this_EcrecoverFunction_8=ruleEcrecoverFunction
		{
			$current = $this_EcrecoverFunction_8.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleGasleftFunction
entryRuleGasleftFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGasleftFunctionRule()); }
	iv_ruleGasleftFunction=ruleGasleftFunction
	{ $current=$iv_ruleGasleftFunction.current; }
	EOF;

// Rule GasleftFunction
ruleGasleftFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='gasleft'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getGasleftFunctionAccess().getNameGasleftKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGasleftFunctionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "gasleft");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getGasleftFunctionAccess().getLeftParenthesisKeyword_1());
		}
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getGasleftFunctionAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleBlockhashFunction
entryRuleBlockhashFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockhashFunctionRule()); }
	iv_ruleBlockhashFunction=ruleBlockhashFunction
	{ $current=$iv_ruleBlockhashFunction.current; }
	EOF;

// Rule BlockhashFunction
ruleBlockhashFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='blockhash'
		{
			newLeafNode(otherlv_0, grammarAccess.getBlockhashFunctionAccess().getBlockhashKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getBlockhashFunctionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockhashFunctionAccess().getParameterIntParameterParserRuleCall_2_0());
				}
				lv_parameter_2_0=ruleIntParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockhashFunctionRule());
					}
					set(
						$current,
						"parameter",
						lv_parameter_2_0,
						"org.unicam.myGrammar.OptGrammar.IntParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getBlockhashFunctionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleMathematicalFunction
entryRuleMathematicalFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMathematicalFunctionRule()); }
	iv_ruleMathematicalFunction=ruleMathematicalFunction
	{ $current=$iv_ruleMathematicalFunction.current; }
	EOF;

// Rule MathematicalFunction
ruleMathematicalFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_function_0_1='addmod'
					{
						newLeafNode(lv_function_0_1, grammarAccess.getMathematicalFunctionAccess().getFunctionAddmodKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMathematicalFunctionRule());
						}
						setWithLastConsumed($current, "function", lv_function_0_1, null);
					}
					    |
					lv_function_0_2='mulmod'
					{
						newLeafNode(lv_function_0_2, grammarAccess.getMathematicalFunctionAccess().getFunctionMulmodKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMathematicalFunctionRule());
						}
						setWithLastConsumed($current, "function", lv_function_0_2, null);
					}
				)
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getMathematicalFunctionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMathematicalFunctionAccess().getParametersIntParameterParserRuleCall_2_0());
				}
				lv_parameters_2_0=ruleIntParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMathematicalFunctionRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_2_0,
						"org.unicam.myGrammar.OptGrammar.IntParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getMathematicalFunctionAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMathematicalFunctionAccess().getParametersIntParameterParserRuleCall_4_0());
				}
				lv_parameters_4_0=ruleIntParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMathematicalFunctionRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_4_0,
						"org.unicam.myGrammar.OptGrammar.IntParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getMathematicalFunctionAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMathematicalFunctionAccess().getParametersIntParameterParserRuleCall_6_0());
				}
				lv_parameters_6_0=ruleIntParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMathematicalFunctionRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_6_0,
						"org.unicam.myGrammar.OptGrammar.IntParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getMathematicalFunctionAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleEcrecoverFunction
entryRuleEcrecoverFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEcrecoverFunctionRule()); }
	iv_ruleEcrecoverFunction=ruleEcrecoverFunction
	{ $current=$iv_ruleEcrecoverFunction.current; }
	EOF;

// Rule EcrecoverFunction
ruleEcrecoverFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_function_0_0='ecrecover'
				{
					newLeafNode(lv_function_0_0, grammarAccess.getEcrecoverFunctionAccess().getFunctionEcrecoverKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEcrecoverFunctionRule());
					}
					setWithLastConsumed($current, "function", lv_function_0_0, "ecrecover");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getEcrecoverFunctionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEcrecoverFunctionAccess().getParametersIntParameterParserRuleCall_2_0());
				}
				lv_parameters_2_0=ruleIntParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEcrecoverFunctionRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_2_0,
						"org.unicam.myGrammar.OptGrammar.IntParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getEcrecoverFunctionAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEcrecoverFunctionAccess().getParametersIntParameterParserRuleCall_4_0());
				}
				lv_parameters_4_0=ruleIntParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEcrecoverFunctionRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_4_0,
						"org.unicam.myGrammar.OptGrammar.IntParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getEcrecoverFunctionAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEcrecoverFunctionAccess().getParametersIntParameterParserRuleCall_6_0());
				}
				lv_parameters_6_0=ruleIntParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEcrecoverFunctionRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_6_0,
						"org.unicam.myGrammar.OptGrammar.IntParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getEcrecoverFunctionAccess().getCommaKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEcrecoverFunctionAccess().getParametersIntParameterParserRuleCall_8_0());
				}
				lv_parameters_8_0=ruleIntParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEcrecoverFunctionRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_8_0,
						"org.unicam.myGrammar.OptGrammar.IntParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getEcrecoverFunctionAccess().getRightParenthesisKeyword_9());
		}
	)
;

// Entry rule entryRuleHashFunction
entryRuleHashFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHashFunctionRule()); }
	iv_ruleHashFunction=ruleHashFunction
	{ $current=$iv_ruleHashFunction.current; }
	EOF;

// Rule HashFunction
ruleHashFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_name_0_1='keccak256'
					{
						newLeafNode(lv_name_0_1, grammarAccess.getHashFunctionAccess().getNameKeccak256Keyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHashFunctionRule());
						}
						setWithLastConsumed($current, "name", lv_name_0_1, null);
					}
					    |
					lv_name_0_2='sha256'
					{
						newLeafNode(lv_name_0_2, grammarAccess.getHashFunctionAccess().getNameSha256Keyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHashFunctionRule());
						}
						setWithLastConsumed($current, "name", lv_name_0_2, null);
					}
					    |
					lv_name_0_3='ripemd160'
					{
						newLeafNode(lv_name_0_3, grammarAccess.getHashFunctionAccess().getNameRipemd160Keyword_0_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHashFunctionRule());
						}
						setWithLastConsumed($current, "name", lv_name_0_3, null);
					}
				)
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getHashFunctionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHashFunctionAccess().getParametersIntParameterParserRuleCall_2_0());
				}
				lv_parameters_2_0=ruleIntParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHashFunctionRule());
					}
					set(
						$current,
						"parameters",
						lv_parameters_2_0,
						"org.unicam.myGrammar.OptGrammar.IntParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getHashFunctionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleIntParameter
entryRuleIntParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntParameterRule()); }
	iv_ruleIntParameter=ruleIntParameter
	{ $current=$iv_ruleIntParameter.current; }
	EOF;

// Rule IntParameter
ruleIntParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getIntParameterAccess().getParamArithmeticOperationsParserRuleCall_0_0());
				}
				lv_param_0_0=ruleArithmeticOperations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntParameterRule());
					}
					set(
						$current,
						"param",
						lv_param_0_0,
						"org.unicam.myGrammar.OptGrammar.ArithmeticOperations");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getIntParameterAccess().getFunFunctionCallParserRuleCall_1_0());
				}
				lv_fun_1_0=ruleFunctionCall
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntParameterRule());
					}
					set(
						$current,
						"fun",
						lv_fun_1_0,
						"org.unicam.myGrammar.OptGrammar.FunctionCall");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionCallRule()); }
	iv_ruleFunctionCall=ruleFunctionCall
	{ $current=$iv_ruleFunctionCall.current; }
	EOF;

// Rule FunctionCall
ruleFunctionCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionCallRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getFunctionCallAccess().getNameFunctionDefinitionCrossReference_0_0());
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersLogicalOperationsParserRuleCall_2_0_0());
					}
					lv_parameters_2_0=ruleLogicalOperations
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionCallRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_2_0,
							"org.unicam.myGrammar.OptGrammar.LogicalOperations");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getFunctionCallAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersLogicalOperationsParserRuleCall_2_1_1_0());
						}
						lv_parameters_4_0=ruleLogicalOperations
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionCallRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_4_0,
								"org.unicam.myGrammar.OptGrammar.LogicalOperations");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleArithmeticOperations
entryRuleArithmeticOperations returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticOperationsRule()); }
	iv_ruleArithmeticOperations=ruleArithmeticOperations
	{ $current=$iv_ruleArithmeticOperations.current; }
	EOF;

// Rule ArithmeticOperations
ruleArithmeticOperations returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getArithmeticOperationsAccess().getFirstPrimaryArithmeticParserRuleCall_0_0());
				}
				lv_first_0_0=rulePrimaryArithmetic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArithmeticOperationsRule());
					}
					set(
						$current,
						"first",
						lv_first_0_0,
						"org.unicam.myGrammar.OptGrammar.PrimaryArithmetic");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getArithmeticOperationsAccess().getSecondsSecondOperatorsParserRuleCall_1_0());
				}
				lv_seconds_1_0=ruleSecondOperators
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArithmeticOperationsRule());
					}
					add(
						$current,
						"seconds",
						lv_seconds_1_0,
						"org.unicam.myGrammar.OptGrammar.SecondOperators");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRulePrimaryArithmetic
entryRulePrimaryArithmetic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryArithmeticRule()); }
	iv_rulePrimaryArithmetic=rulePrimaryArithmetic
	{ $current=$iv_rulePrimaryArithmetic.current; }
	EOF;

// Rule PrimaryArithmetic
rulePrimaryArithmetic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimaryArithmeticAccess().getNumericLiteralParserRuleCall_0());
		}
		this_NumericLiteral_0=ruleNumericLiteral
		{
			$current = $this_NumericLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getPrimaryArithmeticAccess().getLeftParenthesisKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryArithmeticAccess().getLogicalOperationsParserRuleCall_1_1());
			}
			this_LogicalOperations_2=ruleLogicalOperations
			{
				$current = $this_LogicalOperations_2.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getPrimaryArithmeticAccess().getRightParenthesisKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleSecondOperators
entryRuleSecondOperators returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSecondOperatorsRule()); }
	iv_ruleSecondOperators=ruleSecondOperators
	{ $current=$iv_ruleSecondOperators.current; }
	EOF;

// Rule SecondOperators
ruleSecondOperators returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_operator_0_1='+'
					{
						newLeafNode(lv_operator_0_1, grammarAccess.getSecondOperatorsAccess().getOperatorPlusSignKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSecondOperatorsRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_0_1, null);
					}
					    |
					lv_operator_0_2='-'
					{
						newLeafNode(lv_operator_0_2, grammarAccess.getSecondOperatorsAccess().getOperatorHyphenMinusKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSecondOperatorsRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_0_2, null);
					}
					    |
					lv_operator_0_3='/'
					{
						newLeafNode(lv_operator_0_3, grammarAccess.getSecondOperatorsAccess().getOperatorSolidusKeyword_0_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSecondOperatorsRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_0_3, null);
					}
					    |
					lv_operator_0_4='*'
					{
						newLeafNode(lv_operator_0_4, grammarAccess.getSecondOperatorsAccess().getOperatorAsteriskKeyword_0_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSecondOperatorsRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_0_4, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSecondOperatorsAccess().getValuePrimaryArithmeticParserRuleCall_1_0());
				}
				lv_value_1_0=rulePrimaryArithmetic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSecondOperatorsRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"org.unicam.myGrammar.OptGrammar.PrimaryArithmetic");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBooleanConst
entryRuleBooleanConst returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanConstRule()); }
	iv_ruleBooleanConst=ruleBooleanConst
	{ $current=$iv_ruleBooleanConst.current; }
	EOF;

// Rule BooleanConst
ruleBooleanConst returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getBooleanConstAccess().getValueBooleanLiteralEnumEnumRuleCall_0());
			}
			lv_value_0_0=ruleBooleanLiteralEnum
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getBooleanConstRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"org.unicam.myGrammar.OptGrammar.BooleanLiteralEnum");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleNumericLiteral
entryRuleNumericLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumericLiteralRule()); }
	iv_ruleNumericLiteral=ruleNumericLiteral
	{ $current=$iv_ruleNumericLiteral.current; }
	EOF;

// Rule NumericLiteral
ruleNumericLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getNumericLiteralAccess().getIntValueNumberDimensionlessParserRuleCall_0_0_0());
					}
					lv_intValue_0_0=ruleNumberDimensionless
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNumericLiteralRule());
						}
						set(
							$current,
							"intValue",
							lv_intValue_0_0,
							"org.unicam.myGrammar.OptGrammar.NumberDimensionless");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getNumericLiteralAccess().getHexValueHexLiteralParserRuleCall_0_1_0());
					}
					lv_hexValue_1_0=ruleHexLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNumericLiteralRule());
						}
						set(
							$current,
							"hexValue",
							lv_hexValue_1_0,
							"org.unicam.myGrammar.OptGrammar.HexLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getNumericLiteralAccess().getDecimalValueDecimalLiteralParserRuleCall_0_2_0());
					}
					lv_decimalValue_2_0=ruleDecimalLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNumericLiteralRule());
						}
						set(
							$current,
							"decimalValue",
							lv_decimalValue_2_0,
							"org.unicam.myGrammar.OptGrammar.DecimalLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getNumericLiteralAccess().getNowNowParserRuleCall_0_3_0());
					}
					lv_now_3_0=ruleNow
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNumericLiteralRule());
						}
						set(
							$current,
							"now",
							lv_now_3_0,
							"org.unicam.myGrammar.OptGrammar.Now");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNumericLiteralAccess().getEtherUnitUnitTypesParserRuleCall_1_0());
				}
				lv_etherUnit_4_0=ruleUnitTypes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNumericLiteralRule());
					}
					set(
						$current,
						"etherUnit",
						lv_etherUnit_4_0,
						"org.unicam.myGrammar.OptGrammar.UnitTypes");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleNow
entryRuleNow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNowRule()); }
	iv_ruleNow=ruleNow
	{ $current=$iv_ruleNow.current; }
	EOF;

// Rule Now
ruleNow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNowAccess().getNowAction_0(),
					$current);
			}
		)
		otherlv_1='now'
		{
			newLeafNode(otherlv_1, grammarAccess.getNowAccess().getNowKeyword_1());
		}
	)
;

// Entry rule entryRuleUnitTypes
entryRuleUnitTypes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitTypesRule()); }
	iv_ruleUnitTypes=ruleUnitTypes
	{ $current=$iv_ruleUnitTypes.current; }
	EOF;

// Rule UnitTypes
ruleUnitTypes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getUnitTypesAccess().getTimeTimeParserRuleCall_0_0());
				}
				lv_time_0_0=ruleTime
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnitTypesRule());
					}
					set(
						$current,
						"time",
						lv_time_0_0,
						"org.unicam.myGrammar.OptGrammar.Time");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getUnitTypesAccess().getUnitsEtherParserRuleCall_1_0());
				}
				lv_units_1_0=ruleEther
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnitTypesRule());
					}
					set(
						$current,
						"units",
						lv_units_1_0,
						"org.unicam.myGrammar.OptGrammar.Ether");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNumberDimensionless
entryRuleNumberDimensionless returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberDimensionlessRule()); }
	iv_ruleNumberDimensionless=ruleNumberDimensionless
	{ $current=$iv_ruleNumberDimensionless.current; }
	EOF;

// Rule NumberDimensionless
ruleNumberDimensionless returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getNumberDimensionlessAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNumberDimensionlessRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleEther
entryRuleEther returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEtherRule()); }
	iv_ruleEther=ruleEther
	{ $current=$iv_ruleEther.current; }
	EOF;

// Rule Ether
ruleEther returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0=RULE_INT
				{
					newLeafNode(lv_value_0_0, grammarAccess.getEtherAccess().getValueINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEtherRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEtherAccess().getEtherEtherSubDenominationEnumEnumRuleCall_1_0());
				}
				lv_ether_1_0=ruleEtherSubDenominationEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEtherRule());
					}
					set(
						$current,
						"ether",
						lv_ether_1_0,
						"org.unicam.myGrammar.OptGrammar.EtherSubDenominationEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTime
entryRuleTime returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeRule()); }
	iv_ruleTime=ruleTime
	{ $current=$iv_ruleTime.current; }
	EOF;

// Rule Time
ruleTime returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0=RULE_INT
				{
					newLeafNode(lv_value_0_0, grammarAccess.getTimeAccess().getValueINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTimeAccess().getTimeTimeSubdenominationEnumEnumRuleCall_1_0());
				}
				lv_time_1_0=ruleTimeSubdenominationEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimeRule());
					}
					set(
						$current,
						"time",
						lv_time_1_0,
						"org.unicam.myGrammar.OptGrammar.TimeSubdenominationEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	iv_ruleStringLiteral=ruleStringLiteral
	{ $current=$iv_ruleStringLiteral.current; }
	EOF;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleIntLiteral
entryRuleIntLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntLiteralRule()); }
	iv_ruleIntLiteral=ruleIntLiteral
	{ $current=$iv_ruleIntLiteral.current; }
	EOF;

// Rule IntLiteral
ruleIntLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIntLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleHexLiteral
entryRuleHexLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHexLiteralRule()); }
	iv_ruleHexLiteral=ruleHexLiteral
	{ $current=$iv_ruleHexLiteral.current; }
	EOF;

// Rule HexLiteral
ruleHexLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_HEX
			{
				newLeafNode(lv_value_0_0, grammarAccess.getHexLiteralAccess().getValueHEXTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getHexLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.unicam.myGrammar.OptGrammar.HEX");
			}
		)
	)
;

// Entry rule entryRuleDecimalLiteral
entryRuleDecimalLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDecimalLiteralRule()); }
	iv_ruleDecimalLiteral=ruleDecimalLiteral
	{ $current=$iv_ruleDecimalLiteral.current; }
	EOF;

// Rule DecimalLiteral
ruleDecimalLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_DECIMAL
			{
				newLeafNode(lv_value_0_0, grammarAccess.getDecimalLiteralAccess().getValueDECIMALTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDecimalLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.unicam.myGrammar.OptGrammar.DECIMAL");
			}
		)
	)
;

// Entry rule entryRuleSpecialVariables
entryRuleSpecialVariables returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpecialVariablesRule()); }
	iv_ruleSpecialVariables=ruleSpecialVariables
	{ $current=$iv_ruleSpecialVariables.current; }
	EOF;

// Rule SpecialVariables
ruleSpecialVariables returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecialVariablesAccess().getTypeSpecialVariablesTypeEnumParserRuleCall_0_0());
				}
				lv_type_0_0=ruleSpecialVariablesTypeEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecialVariablesRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"org.unicam.myGrammar.OptGrammar.SpecialVariablesTypeEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getSpecialVariablesAccess().getFullStopKeyword_1());
		}
		(
			(
				lv_field_2_0=RULE_ID
				{
					newLeafNode(lv_field_2_0, grammarAccess.getSpecialVariablesAccess().getFieldIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSpecialVariablesRule());
					}
					setWithLastConsumed(
						$current,
						"field",
						lv_field_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecialVariablesAccess().getQualifiersQualifierParserRuleCall_3_0());
				}
				lv_qualifiers_3_0=ruleQualifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecialVariablesRule());
					}
					add(
						$current,
						"qualifiers",
						lv_qualifiers_3_0,
						"org.unicam.myGrammar.OptGrammar.Qualifier");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleElementaryTypeNameEnum
entryRuleElementaryTypeNameEnum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementaryTypeNameEnumRule()); }
	iv_ruleElementaryTypeNameEnum=ruleElementaryTypeNameEnum
	{ $current=$iv_ruleElementaryTypeNameEnum.current; }
	EOF;

// Rule ElementaryTypeNameEnum
ruleElementaryTypeNameEnum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_1='int'
				{
					newLeafNode(lv_type_0_1, grammarAccess.getElementaryTypeNameEnumAccess().getTypeIntKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_1, null);
				}
				    |
				lv_type_0_2='int16'
				{
					newLeafNode(lv_type_0_2, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt16Keyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_2, null);
				}
				    |
				lv_type_0_3='int24'
				{
					newLeafNode(lv_type_0_3, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt24Keyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_3, null);
				}
				    |
				lv_type_0_4='int32'
				{
					newLeafNode(lv_type_0_4, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt32Keyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_4, null);
				}
				    |
				lv_type_0_5='int40'
				{
					newLeafNode(lv_type_0_5, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt40Keyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_5, null);
				}
				    |
				lv_type_0_6='int48'
				{
					newLeafNode(lv_type_0_6, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt48Keyword_0_5());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_6, null);
				}
				    |
				lv_type_0_7='int56'
				{
					newLeafNode(lv_type_0_7, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt56Keyword_0_6());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_7, null);
				}
				    |
				lv_type_0_8='int64'
				{
					newLeafNode(lv_type_0_8, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt64Keyword_0_7());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_8, null);
				}
				    |
				lv_type_0_9='int72'
				{
					newLeafNode(lv_type_0_9, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt72Keyword_0_8());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_9, null);
				}
				    |
				lv_type_0_10='int80'
				{
					newLeafNode(lv_type_0_10, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt80Keyword_0_9());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_10, null);
				}
				    |
				lv_type_0_11='int88'
				{
					newLeafNode(lv_type_0_11, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt88Keyword_0_10());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_11, null);
				}
				    |
				lv_type_0_12='int96'
				{
					newLeafNode(lv_type_0_12, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt96Keyword_0_11());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_12, null);
				}
				    |
				lv_type_0_13='int104'
				{
					newLeafNode(lv_type_0_13, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt104Keyword_0_12());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_13, null);
				}
				    |
				lv_type_0_14='int112'
				{
					newLeafNode(lv_type_0_14, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt112Keyword_0_13());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_14, null);
				}
				    |
				lv_type_0_15='int120'
				{
					newLeafNode(lv_type_0_15, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt120Keyword_0_14());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_15, null);
				}
				    |
				lv_type_0_16='int128'
				{
					newLeafNode(lv_type_0_16, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt128Keyword_0_15());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_16, null);
				}
				    |
				lv_type_0_17='int136'
				{
					newLeafNode(lv_type_0_17, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt136Keyword_0_16());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_17, null);
				}
				    |
				lv_type_0_18='int144'
				{
					newLeafNode(lv_type_0_18, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt144Keyword_0_17());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_18, null);
				}
				    |
				lv_type_0_19='int152'
				{
					newLeafNode(lv_type_0_19, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt152Keyword_0_18());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_19, null);
				}
				    |
				lv_type_0_20='int160'
				{
					newLeafNode(lv_type_0_20, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt160Keyword_0_19());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_20, null);
				}
				    |
				lv_type_0_21='int168'
				{
					newLeafNode(lv_type_0_21, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt168Keyword_0_20());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_21, null);
				}
				    |
				lv_type_0_22='int178'
				{
					newLeafNode(lv_type_0_22, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt178Keyword_0_21());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_22, null);
				}
				    |
				lv_type_0_23='int184'
				{
					newLeafNode(lv_type_0_23, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt184Keyword_0_22());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_23, null);
				}
				    |
				lv_type_0_24='int192'
				{
					newLeafNode(lv_type_0_24, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt192Keyword_0_23());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_24, null);
				}
				    |
				lv_type_0_25='int200'
				{
					newLeafNode(lv_type_0_25, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt200Keyword_0_24());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_25, null);
				}
				    |
				lv_type_0_26='int208'
				{
					newLeafNode(lv_type_0_26, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt208Keyword_0_25());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_26, null);
				}
				    |
				lv_type_0_27='int216'
				{
					newLeafNode(lv_type_0_27, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt216Keyword_0_26());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_27, null);
				}
				    |
				lv_type_0_28='int224'
				{
					newLeafNode(lv_type_0_28, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt224Keyword_0_27());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_28, null);
				}
				    |
				lv_type_0_29='int232'
				{
					newLeafNode(lv_type_0_29, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt232Keyword_0_28());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_29, null);
				}
				    |
				lv_type_0_30='int240'
				{
					newLeafNode(lv_type_0_30, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt240Keyword_0_29());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_30, null);
				}
				    |
				lv_type_0_31='int248'
				{
					newLeafNode(lv_type_0_31, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt248Keyword_0_30());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_31, null);
				}
				    |
				lv_type_0_32='int256'
				{
					newLeafNode(lv_type_0_32, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt256Keyword_0_31());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_32, null);
				}
				    |
				lv_type_0_33='uint'
				{
					newLeafNode(lv_type_0_33, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUintKeyword_0_32());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_33, null);
				}
				    |
				lv_type_0_34='uint8'
				{
					newLeafNode(lv_type_0_34, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint8Keyword_0_33());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_34, null);
				}
				    |
				lv_type_0_35='uint16'
				{
					newLeafNode(lv_type_0_35, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint16Keyword_0_34());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_35, null);
				}
				    |
				lv_type_0_36='uint24'
				{
					newLeafNode(lv_type_0_36, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint24Keyword_0_35());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_36, null);
				}
				    |
				lv_type_0_37='uint32'
				{
					newLeafNode(lv_type_0_37, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint32Keyword_0_36());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_37, null);
				}
				    |
				lv_type_0_38='uint40'
				{
					newLeafNode(lv_type_0_38, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint40Keyword_0_37());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_38, null);
				}
				    |
				lv_type_0_39='uint48'
				{
					newLeafNode(lv_type_0_39, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint48Keyword_0_38());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_39, null);
				}
				    |
				lv_type_0_40='uint56'
				{
					newLeafNode(lv_type_0_40, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint56Keyword_0_39());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_40, null);
				}
				    |
				lv_type_0_41='uint64'
				{
					newLeafNode(lv_type_0_41, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint64Keyword_0_40());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_41, null);
				}
				    |
				lv_type_0_42='uint72'
				{
					newLeafNode(lv_type_0_42, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint72Keyword_0_41());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_42, null);
				}
				    |
				lv_type_0_43='uint80'
				{
					newLeafNode(lv_type_0_43, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint80Keyword_0_42());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_43, null);
				}
				    |
				lv_type_0_44='uint88'
				{
					newLeafNode(lv_type_0_44, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint88Keyword_0_43());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_44, null);
				}
				    |
				lv_type_0_45='uint96'
				{
					newLeafNode(lv_type_0_45, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint96Keyword_0_44());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_45, null);
				}
				    |
				lv_type_0_46='uint104'
				{
					newLeafNode(lv_type_0_46, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint104Keyword_0_45());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_46, null);
				}
				    |
				lv_type_0_47='uint112'
				{
					newLeafNode(lv_type_0_47, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint112Keyword_0_46());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_47, null);
				}
				    |
				lv_type_0_48='uint120'
				{
					newLeafNode(lv_type_0_48, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint120Keyword_0_47());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_48, null);
				}
				    |
				lv_type_0_49='uint128'
				{
					newLeafNode(lv_type_0_49, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint128Keyword_0_48());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_49, null);
				}
				    |
				lv_type_0_50='uint136'
				{
					newLeafNode(lv_type_0_50, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint136Keyword_0_49());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_50, null);
				}
				    |
				lv_type_0_51='uint144'
				{
					newLeafNode(lv_type_0_51, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint144Keyword_0_50());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_51, null);
				}
				    |
				lv_type_0_52='uint152'
				{
					newLeafNode(lv_type_0_52, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint152Keyword_0_51());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_52, null);
				}
				    |
				lv_type_0_53='uint160'
				{
					newLeafNode(lv_type_0_53, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint160Keyword_0_52());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_53, null);
				}
				    |
				lv_type_0_54='uint168'
				{
					newLeafNode(lv_type_0_54, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint168Keyword_0_53());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_54, null);
				}
				    |
				lv_type_0_55='uint178'
				{
					newLeafNode(lv_type_0_55, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint178Keyword_0_54());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_55, null);
				}
				    |
				lv_type_0_56='uint184'
				{
					newLeafNode(lv_type_0_56, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint184Keyword_0_55());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_56, null);
				}
				    |
				lv_type_0_57='uint192'
				{
					newLeafNode(lv_type_0_57, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint192Keyword_0_56());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_57, null);
				}
				    |
				lv_type_0_58='uint200'
				{
					newLeafNode(lv_type_0_58, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint200Keyword_0_57());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_58, null);
				}
				    |
				lv_type_0_59='uint208'
				{
					newLeafNode(lv_type_0_59, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint208Keyword_0_58());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_59, null);
				}
				    |
				lv_type_0_60='uint216'
				{
					newLeafNode(lv_type_0_60, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint216Keyword_0_59());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_60, null);
				}
				    |
				lv_type_0_61='uint224'
				{
					newLeafNode(lv_type_0_61, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint224Keyword_0_60());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_61, null);
				}
				    |
				lv_type_0_62='uint232'
				{
					newLeafNode(lv_type_0_62, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint232Keyword_0_61());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_62, null);
				}
				    |
				lv_type_0_63='uint240'
				{
					newLeafNode(lv_type_0_63, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint240Keyword_0_62());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_63, null);
				}
				    |
				lv_type_0_64='uint248'
				{
					newLeafNode(lv_type_0_64, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint248Keyword_0_63());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_64, null);
				}
				    |
				lv_type_0_65='uint256'
				{
					newLeafNode(lv_type_0_65, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint256Keyword_0_64());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_65, null);
				}
				    |
				lv_type_0_66='byte'
				{
					newLeafNode(lv_type_0_66, grammarAccess.getElementaryTypeNameEnumAccess().getTypeByteKeyword_0_65());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_66, null);
				}
				    |
				lv_type_0_67='bytes'
				{
					newLeafNode(lv_type_0_67, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytesKeyword_0_66());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_67, null);
				}
				    |
				lv_type_0_68='bytes1'
				{
					newLeafNode(lv_type_0_68, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes1Keyword_0_67());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_68, null);
				}
				    |
				lv_type_0_69='bytes2'
				{
					newLeafNode(lv_type_0_69, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes2Keyword_0_68());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_69, null);
				}
				    |
				lv_type_0_70='bytes3'
				{
					newLeafNode(lv_type_0_70, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes3Keyword_0_69());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_70, null);
				}
				    |
				lv_type_0_71='bytes4'
				{
					newLeafNode(lv_type_0_71, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes4Keyword_0_70());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_71, null);
				}
				    |
				lv_type_0_72='bytes5'
				{
					newLeafNode(lv_type_0_72, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes5Keyword_0_71());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_72, null);
				}
				    |
				lv_type_0_73='bytes6'
				{
					newLeafNode(lv_type_0_73, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes6Keyword_0_72());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_73, null);
				}
				    |
				lv_type_0_74='bytes7'
				{
					newLeafNode(lv_type_0_74, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes7Keyword_0_73());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_74, null);
				}
				    |
				lv_type_0_75='bytes8'
				{
					newLeafNode(lv_type_0_75, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes8Keyword_0_74());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_75, null);
				}
				    |
				lv_type_0_76='bytes9'
				{
					newLeafNode(lv_type_0_76, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes9Keyword_0_75());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_76, null);
				}
				    |
				lv_type_0_77='bytes10'
				{
					newLeafNode(lv_type_0_77, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes10Keyword_0_76());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_77, null);
				}
				    |
				lv_type_0_78='bytes11'
				{
					newLeafNode(lv_type_0_78, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes11Keyword_0_77());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_78, null);
				}
				    |
				lv_type_0_79='bytes12'
				{
					newLeafNode(lv_type_0_79, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes12Keyword_0_78());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_79, null);
				}
				    |
				lv_type_0_80='bytes13'
				{
					newLeafNode(lv_type_0_80, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes13Keyword_0_79());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_80, null);
				}
				    |
				lv_type_0_81='bytes14'
				{
					newLeafNode(lv_type_0_81, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes14Keyword_0_80());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_81, null);
				}
				    |
				lv_type_0_82='bytes15'
				{
					newLeafNode(lv_type_0_82, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes15Keyword_0_81());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_82, null);
				}
				    |
				lv_type_0_83='bytes16'
				{
					newLeafNode(lv_type_0_83, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes16Keyword_0_82());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_83, null);
				}
				    |
				lv_type_0_84='bytes17'
				{
					newLeafNode(lv_type_0_84, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes17Keyword_0_83());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_84, null);
				}
				    |
				lv_type_0_85='bytes18'
				{
					newLeafNode(lv_type_0_85, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes18Keyword_0_84());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_85, null);
				}
				    |
				lv_type_0_86='bytes19'
				{
					newLeafNode(lv_type_0_86, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes19Keyword_0_85());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_86, null);
				}
				    |
				lv_type_0_87='bytes20'
				{
					newLeafNode(lv_type_0_87, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes20Keyword_0_86());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_87, null);
				}
				    |
				lv_type_0_88='bytes21'
				{
					newLeafNode(lv_type_0_88, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes21Keyword_0_87());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_88, null);
				}
				    |
				lv_type_0_89='bytes22'
				{
					newLeafNode(lv_type_0_89, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes22Keyword_0_88());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_89, null);
				}
				    |
				lv_type_0_90='bytes23'
				{
					newLeafNode(lv_type_0_90, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes23Keyword_0_89());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_90, null);
				}
				    |
				lv_type_0_91='bytes24'
				{
					newLeafNode(lv_type_0_91, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes24Keyword_0_90());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_91, null);
				}
				    |
				lv_type_0_92='bytes25'
				{
					newLeafNode(lv_type_0_92, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes25Keyword_0_91());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_92, null);
				}
				    |
				lv_type_0_93='bytes26'
				{
					newLeafNode(lv_type_0_93, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes26Keyword_0_92());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_93, null);
				}
				    |
				lv_type_0_94='bytes27'
				{
					newLeafNode(lv_type_0_94, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes27Keyword_0_93());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_94, null);
				}
				    |
				lv_type_0_95='bytes28'
				{
					newLeafNode(lv_type_0_95, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes28Keyword_0_94());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_95, null);
				}
				    |
				lv_type_0_96='bytes29'
				{
					newLeafNode(lv_type_0_96, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes29Keyword_0_95());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_96, null);
				}
				    |
				lv_type_0_97='bytes30'
				{
					newLeafNode(lv_type_0_97, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes30Keyword_0_96());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_97, null);
				}
				    |
				lv_type_0_98='bytes31'
				{
					newLeafNode(lv_type_0_98, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes31Keyword_0_97());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_98, null);
				}
				    |
				lv_type_0_99='bytes32'
				{
					newLeafNode(lv_type_0_99, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes32Keyword_0_98());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_99, null);
				}
				    |
				lv_type_0_100='string'
				{
					newLeafNode(lv_type_0_100, grammarAccess.getElementaryTypeNameEnumAccess().getTypeStringKeyword_0_99());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_100, null);
				}
				    |
				lv_type_0_101='address'
				{
					newLeafNode(lv_type_0_101, grammarAccess.getElementaryTypeNameEnumAccess().getTypeAddressKeyword_0_100());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_101, null);
				}
				    |
				lv_type_0_102='bool'
				{
					newLeafNode(lv_type_0_102, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBoolKeyword_0_101());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_102, null);
				}
				    |
				lv_type_0_103='real'
				{
					newLeafNode(lv_type_0_103, grammarAccess.getElementaryTypeNameEnumAccess().getTypeRealKeyword_0_102());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_103, null);
				}
				    |
				lv_type_0_104='ureal'
				{
					newLeafNode(lv_type_0_104, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUrealKeyword_0_103());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_104, null);
				}
			)
		)
	)
;

// Entry rule entryRuleMapLocationLiteral
entryRuleMapLocationLiteral returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMapLocationLiteralRule()); }
	iv_ruleMapLocationLiteral=ruleMapLocationLiteral
	{ $current=$iv_ruleMapLocationLiteral.current.getText(); }
	EOF;

// Rule MapLocationLiteral
ruleMapLocationLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='storage'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getMapLocationLiteralAccess().getStorageKeyword());
	}
;

// Entry rule entryRuleLocationSpecifierEnum
entryRuleLocationSpecifierEnum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocationSpecifierEnumRule()); }
	iv_ruleLocationSpecifierEnum=ruleLocationSpecifierEnum
	{ $current=$iv_ruleLocationSpecifierEnum.current; }
	EOF;

// Rule LocationSpecifierEnum
ruleLocationSpecifierEnum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_1='memory'
				{
					newLeafNode(lv_type_0_1, grammarAccess.getLocationSpecifierEnumAccess().getTypeMemoryKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLocationSpecifierEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_1, null);
				}
				    |
				{
					newCompositeNode(grammarAccess.getLocationSpecifierEnumAccess().getTypeMapLocationLiteralParserRuleCall_0_1());
				}
				lv_type_0_2=ruleMapLocationLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLocationSpecifierEnumRule());
					}
					set(
						$current,
						"type",
						lv_type_0_2,
						"org.unicam.myGrammar.OptGrammar.MapLocationLiteral");
					afterParserOrEnumRuleCall();
				}
				    |
				lv_type_0_3='calldata'
				{
					newLeafNode(lv_type_0_3, grammarAccess.getLocationSpecifierEnumAccess().getTypeCalldataKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLocationSpecifierEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_3, null);
				}
			)
		)
	)
;

// Entry rule entryRuleVisibilityEnum
entryRuleVisibilityEnum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVisibilityEnumRule()); }
	iv_ruleVisibilityEnum=ruleVisibilityEnum
	{ $current=$iv_ruleVisibilityEnum.current; }
	EOF;

// Rule VisibilityEnum
ruleVisibilityEnum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_1='public'
				{
					newLeafNode(lv_type_0_1, grammarAccess.getVisibilityEnumAccess().getTypePublicKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVisibilityEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_1, null);
				}
				    |
				lv_type_0_2='internal'
				{
					newLeafNode(lv_type_0_2, grammarAccess.getVisibilityEnumAccess().getTypeInternalKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVisibilityEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_2, null);
				}
				    |
				lv_type_0_3='private'
				{
					newLeafNode(lv_type_0_3, grammarAccess.getVisibilityEnumAccess().getTypePrivateKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVisibilityEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_3, null);
				}
				    |
				lv_type_0_4='external'
				{
					newLeafNode(lv_type_0_4, grammarAccess.getVisibilityEnumAccess().getTypeExternalKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVisibilityEnumRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_4, null);
				}
			)
		)
	)
;

// Entry rule entryRuleSpecialVariablesTypeEnum
entryRuleSpecialVariablesTypeEnum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpecialVariablesTypeEnumRule()); }
	iv_ruleSpecialVariablesTypeEnum=ruleSpecialVariablesTypeEnum
	{ $current=$iv_ruleSpecialVariablesTypeEnum.current; }
	EOF;

// Rule SpecialVariablesTypeEnum
ruleSpecialVariablesTypeEnum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_1=RULE_BLOCK
				{
					newLeafNode(lv_name_0_1, grammarAccess.getSpecialVariablesTypeEnumAccess().getNameBLOCKTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSpecialVariablesTypeEnumRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_1,
						"org.unicam.myGrammar.OptGrammar.BLOCK");
				}
				    |
				lv_name_0_2=RULE_MSG
				{
					newLeafNode(lv_name_0_2, grammarAccess.getSpecialVariablesTypeEnumAccess().getNameMSGTerminalRuleCall_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSpecialVariablesTypeEnumRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_2,
						"org.unicam.myGrammar.OptGrammar.MSG");
				}
				    |
				lv_name_0_3=RULE_TX
				{
					newLeafNode(lv_name_0_3, grammarAccess.getSpecialVariablesTypeEnumAccess().getNameTXTerminalRuleCall_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSpecialVariablesTypeEnumRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_3,
						"org.unicam.myGrammar.OptGrammar.TX");
				}
			)
		)
	)
;

// Rule LogicalOperationLiteral
ruleLogicalOperationLiteral returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='!='
			{
				$current = grammarAccess.getLogicalOperationLiteralAccess().getNOTEQUALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getLogicalOperationLiteralAccess().getNOTEQUALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='=='
			{
				$current = grammarAccess.getLogicalOperationLiteralAccess().getEQUALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getLogicalOperationLiteralAccess().getEQUALEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='&&'
			{
				$current = grammarAccess.getLogicalOperationLiteralAccess().getANDEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getLogicalOperationLiteralAccess().getANDEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='||'
			{
				$current = grammarAccess.getLogicalOperationLiteralAccess().getOREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getLogicalOperationLiteralAccess().getOREnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='>='
			{
				$current = grammarAccess.getLogicalOperationLiteralAccess().getGTEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getLogicalOperationLiteralAccess().getGTEEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='<='
			{
				$current = grammarAccess.getLogicalOperationLiteralAccess().getLTEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getLogicalOperationLiteralAccess().getLTEEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='>'
			{
				$current = grammarAccess.getLogicalOperationLiteralAccess().getGTEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getLogicalOperationLiteralAccess().getGTEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='<'
			{
				$current = grammarAccess.getLogicalOperationLiteralAccess().getLTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getLogicalOperationLiteralAccess().getLTEnumLiteralDeclaration_7());
			}
		)
	)
;

// Rule BooleanLiteralEnum
ruleBooleanLiteralEnum returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='true'
			{
				$current = grammarAccess.getBooleanLiteralEnumAccess().getTRUEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBooleanLiteralEnumAccess().getTRUEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='false'
			{
				$current = grammarAccess.getBooleanLiteralEnumAccess().getFALSEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBooleanLiteralEnumAccess().getFALSEEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule EtherSubDenominationEnum
ruleEtherSubDenominationEnum returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='wei'
			{
				$current = grammarAccess.getEtherSubDenominationEnumAccess().getWEIEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEtherSubDenominationEnumAccess().getWEIEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='szabo'
			{
				$current = grammarAccess.getEtherSubDenominationEnumAccess().getSZABOEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEtherSubDenominationEnumAccess().getSZABOEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='finney'
			{
				$current = grammarAccess.getEtherSubDenominationEnumAccess().getFINNEYEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getEtherSubDenominationEnumAccess().getFINNEYEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='ether'
			{
				$current = grammarAccess.getEtherSubDenominationEnumAccess().getETHEREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getEtherSubDenominationEnumAccess().getETHEREnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule TimeSubdenominationEnum
ruleTimeSubdenominationEnum returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='seconds'
			{
				$current = grammarAccess.getTimeSubdenominationEnumAccess().getSECONDSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTimeSubdenominationEnumAccess().getSECONDSEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='minutes'
			{
				$current = grammarAccess.getTimeSubdenominationEnumAccess().getMINUTESEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTimeSubdenominationEnumAccess().getMINUTESEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='hours'
			{
				$current = grammarAccess.getTimeSubdenominationEnumAccess().getHOURSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTimeSubdenominationEnumAccess().getHOURSEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='days'
			{
				$current = grammarAccess.getTimeSubdenominationEnumAccess().getDAYSEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getTimeSubdenominationEnumAccess().getDAYSEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='weeks'
			{
				$current = grammarAccess.getTimeSubdenominationEnumAccess().getWEEKSEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getTimeSubdenominationEnumAccess().getWEEKSEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='years'
			{
				$current = grammarAccess.getTimeSubdenominationEnumAccess().getYEARSEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getTimeSubdenominationEnumAccess().getYEARSEnumLiteralDeclaration_5());
			}
		)
	)
;

RULE_HEX : '0x' ('0'..'9'|'A'..'F'|'a'..'f')+;

RULE_DECIMAL : RULE_INT '.' RULE_INT;

RULE_BLOCK : 'block.' ('coinbase'|'difficulty'|'gaslimit'|'number'|'timestamp');

RULE_MSG : 'msg.' ('data'|'gas'|'sender'|'sig'|'value');

RULE_TX : 'tx.' ('gasprice'|'origin');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
