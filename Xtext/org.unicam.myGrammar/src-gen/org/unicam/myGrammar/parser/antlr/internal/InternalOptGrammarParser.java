package org.unicam.myGrammar.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.unicam.myGrammar.services.OptGrammarGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalOptGrammarParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_INT", "RULE_STRING", "RULE_HEX", "RULE_DECIMAL", "RULE_BLOCK", "RULE_MSG", "RULE_TX", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'contract'", "'{'", "';'", "'}'", "'struct'", "'enum'", "','", "'='", "'[]'", "'['", "']'", "'constant'", "'string'", "'bool'", "'<('", "')>'", "'.'", "'mapping'", "'('", "'=>'", "')'", "'*='", "'+='", "'-='", "'/='", "'++'", "'--'", "':'", "'payable'", "'function'", "'returns'", "'indexed'", "'var'", "'delete'", "'if'", "'else'", "'while'", "'for'", "'continue'", "'break'", "'return'", "'throw'", "'_'", "'NOT'", "'TERNARY'", "'?'", "'gasleft'", "'blockhash'", "'addmod'", "'mulmod'", "'ecrecover'", "'keccak256'", "'sha256'", "'ripemd160'", "'+'", "'-'", "'/'", "'*'", "'now'", "'int'", "'int16'", "'int24'", "'int32'", "'int40'", "'int48'", "'int56'", "'int64'", "'int72'", "'int80'", "'int88'", "'int96'", "'int104'", "'int112'", "'int120'", "'int128'", "'int136'", "'int144'", "'int152'", "'int160'", "'int168'", "'int178'", "'int184'", "'int192'", "'int200'", "'int208'", "'int216'", "'int224'", "'int232'", "'int240'", "'int248'", "'int256'", "'uint'", "'uint8'", "'uint16'", "'uint24'", "'uint32'", "'uint40'", "'uint48'", "'uint56'", "'uint64'", "'uint72'", "'uint80'", "'uint88'", "'uint96'", "'uint104'", "'uint112'", "'uint120'", "'uint128'", "'uint136'", "'uint144'", "'uint152'", "'uint160'", "'uint168'", "'uint178'", "'uint184'", "'uint192'", "'uint200'", "'uint208'", "'uint216'", "'uint224'", "'uint232'", "'uint240'", "'uint248'", "'uint256'", "'byte'", "'bytes'", "'bytes1'", "'bytes2'", "'bytes3'", "'bytes4'", "'bytes5'", "'bytes6'", "'bytes7'", "'bytes8'", "'bytes9'", "'bytes10'", "'bytes11'", "'bytes12'", "'bytes13'", "'bytes14'", "'bytes15'", "'bytes16'", "'bytes17'", "'bytes18'", "'bytes19'", "'bytes20'", "'bytes21'", "'bytes22'", "'bytes23'", "'bytes24'", "'bytes25'", "'bytes26'", "'bytes27'", "'bytes28'", "'bytes29'", "'bytes30'", "'bytes31'", "'bytes32'", "'address'", "'real'", "'ureal'", "'storage'", "'memory'", "'calldata'", "'public'", "'internal'", "'private'", "'external'", "'!='", "'=='", "'&&'", "'||'", "'>='", "'<='", "'>'", "'<'", "'true'", "'false'", "'wei'", "'szabo'", "'finney'", "'ether'", "'seconds'", "'minutes'", "'hours'", "'days'", "'weeks'", "'years'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_ID=4;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_INT=5;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__166=166;
    public static final int T__165=165;
    public static final int T__168=168;
    public static final int T__167=167;
    public static final int T__162=162;
    public static final int T__161=161;
    public static final int T__164=164;
    public static final int T__163=163;
    public static final int T__160=160;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__159=159;
    public static final int T__30=30;
    public static final int T__158=158;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__155=155;
    public static final int T__154=154;
    public static final int T__157=157;
    public static final int RULE_BLOCK=9;
    public static final int T__156=156;
    public static final int T__151=151;
    public static final int T__150=150;
    public static final int T__153=153;
    public static final int T__152=152;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__100=100;
    public static final int T__102=102;
    public static final int T__101=101;
    public static final int T__19=19;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int RULE_DECIMAL=8;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__203=203;
    public static final int T__202=202;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__122=122;
    public static final int T__121=121;
    public static final int T__124=124;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_SL_COMMENT=13;
    public static final int T__119=119;
    public static final int T__118=118;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__114=114;
    public static final int T__117=117;
    public static final int T__116=116;
    public static final int T__111=111;
    public static final int T__110=110;
    public static final int T__113=113;
    public static final int T__112=112;
    public static final int T__108=108;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__104=104;
    public static final int T__103=103;
    public static final int T__106=106;
    public static final int T__105=105;
    public static final int RULE_HEX=7;
    public static final int RULE_ML_COMMENT=12;
    public static final int T__201=201;
    public static final int T__200=200;
    public static final int T__91=91;
    public static final int T__188=188;
    public static final int T__92=92;
    public static final int T__187=187;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__189=189;
    public static final int T__184=184;
    public static final int T__183=183;
    public static final int T__186=186;
    public static final int T__90=90;
    public static final int T__185=185;
    public static final int T__180=180;
    public static final int T__182=182;
    public static final int T__181=181;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__177=177;
    public static final int T__176=176;
    public static final int T__179=179;
    public static final int T__178=178;
    public static final int T__173=173;
    public static final int T__172=172;
    public static final int RULE_MSG=10;
    public static final int T__175=175;
    public static final int T__174=174;
    public static final int T__171=171;
    public static final int T__170=170;
    public static final int T__169=169;
    public static final int RULE_TX=11;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=6;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__199=199;
    public static final int T__81=81;
    public static final int T__198=198;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int T__195=195;
    public static final int T__194=194;
    public static final int RULE_WS=14;
    public static final int T__197=197;
    public static final int T__196=196;
    public static final int T__191=191;
    public static final int T__190=190;
    public static final int T__193=193;
    public static final int T__192=192;
    public static final int RULE_ANY_OTHER=15;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalOptGrammarParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalOptGrammarParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalOptGrammarParser.tokenNames; }
    public String getGrammarFileName() { return "InternalOptGrammar.g"; }



     	private OptGrammarGrammarAccess grammarAccess;

        public InternalOptGrammarParser(TokenStream input, OptGrammarGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected OptGrammarGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalOptGrammar.g:65:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalOptGrammar.g:65:46: (iv_ruleModel= ruleModel EOF )
            // InternalOptGrammar.g:66:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalOptGrammar.g:72:1: ruleModel returns [EObject current=null] : ( (lv_operations_0_0= ruleContract ) )* ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_operations_0_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:78:2: ( ( (lv_operations_0_0= ruleContract ) )* )
            // InternalOptGrammar.g:79:2: ( (lv_operations_0_0= ruleContract ) )*
            {
            // InternalOptGrammar.g:79:2: ( (lv_operations_0_0= ruleContract ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==16) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalOptGrammar.g:80:3: (lv_operations_0_0= ruleContract )
            	    {
            	    // InternalOptGrammar.g:80:3: (lv_operations_0_0= ruleContract )
            	    // InternalOptGrammar.g:81:4: lv_operations_0_0= ruleContract
            	    {
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getModelAccess().getOperationsContractParserRuleCall_0());
            	      			
            	    }
            	    pushFollow(FOLLOW_3);
            	    lv_operations_0_0=ruleContract();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElementForParent(grammarAccess.getModelRule());
            	      				}
            	      				add(
            	      					current,
            	      					"operations",
            	      					lv_operations_0_0,
            	      					"org.unicam.myGrammar.OptGrammar.Contract");
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleContract"
    // InternalOptGrammar.g:101:1: entryRuleContract returns [EObject current=null] : iv_ruleContract= ruleContract EOF ;
    public final EObject entryRuleContract() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleContract = null;


        try {
            // InternalOptGrammar.g:101:49: (iv_ruleContract= ruleContract EOF )
            // InternalOptGrammar.g:102:2: iv_ruleContract= ruleContract EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getContractRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleContract=ruleContract();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleContract; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleContract"


    // $ANTLR start "ruleContract"
    // InternalOptGrammar.g:108:1: ruleContract returns [EObject current=null] : (otherlv_0= 'contract' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( ( ( (lv_blocks_3_0= ruleDeclaration ) ) otherlv_4= ';' ) | ( (lv_blocks_5_0= ruleFunctionDefinition ) ) )* otherlv_6= '}' ) ;
    public final EObject ruleContract() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_blocks_3_0 = null;

        EObject lv_blocks_5_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:114:2: ( (otherlv_0= 'contract' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( ( ( (lv_blocks_3_0= ruleDeclaration ) ) otherlv_4= ';' ) | ( (lv_blocks_5_0= ruleFunctionDefinition ) ) )* otherlv_6= '}' ) )
            // InternalOptGrammar.g:115:2: (otherlv_0= 'contract' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( ( ( (lv_blocks_3_0= ruleDeclaration ) ) otherlv_4= ';' ) | ( (lv_blocks_5_0= ruleFunctionDefinition ) ) )* otherlv_6= '}' )
            {
            // InternalOptGrammar.g:115:2: (otherlv_0= 'contract' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( ( ( (lv_blocks_3_0= ruleDeclaration ) ) otherlv_4= ';' ) | ( (lv_blocks_5_0= ruleFunctionDefinition ) ) )* otherlv_6= '}' )
            // InternalOptGrammar.g:116:3: otherlv_0= 'contract' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( ( ( (lv_blocks_3_0= ruleDeclaration ) ) otherlv_4= ';' ) | ( (lv_blocks_5_0= ruleFunctionDefinition ) ) )* otherlv_6= '}'
            {
            otherlv_0=(Token)match(input,16,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getContractAccess().getContractKeyword_0());
              		
            }
            // InternalOptGrammar.g:120:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalOptGrammar.g:121:4: (lv_name_1_0= RULE_ID )
            {
            // InternalOptGrammar.g:121:4: (lv_name_1_0= RULE_ID )
            // InternalOptGrammar.g:122:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getContractAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getContractRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.common.Terminals.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,17,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getContractAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalOptGrammar.g:142:3: ( ( ( (lv_blocks_3_0= ruleDeclaration ) ) otherlv_4= ';' ) | ( (lv_blocks_5_0= ruleFunctionDefinition ) ) )*
            loop2:
            do {
                int alt2=3;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==RULE_ID||(LA2_0>=20 && LA2_0<=21)||(LA2_0>=27 && LA2_0<=29)||LA2_0==33||(LA2_0>=75 && LA2_0<=183)) ) {
                    alt2=1;
                }
                else if ( ((LA2_0>=44 && LA2_0<=45)) ) {
                    alt2=2;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalOptGrammar.g:143:4: ( ( (lv_blocks_3_0= ruleDeclaration ) ) otherlv_4= ';' )
            	    {
            	    // InternalOptGrammar.g:143:4: ( ( (lv_blocks_3_0= ruleDeclaration ) ) otherlv_4= ';' )
            	    // InternalOptGrammar.g:144:5: ( (lv_blocks_3_0= ruleDeclaration ) ) otherlv_4= ';'
            	    {
            	    // InternalOptGrammar.g:144:5: ( (lv_blocks_3_0= ruleDeclaration ) )
            	    // InternalOptGrammar.g:145:6: (lv_blocks_3_0= ruleDeclaration )
            	    {
            	    // InternalOptGrammar.g:145:6: (lv_blocks_3_0= ruleDeclaration )
            	    // InternalOptGrammar.g:146:7: lv_blocks_3_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getContractAccess().getBlocksDeclarationParserRuleCall_3_0_0_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_7);
            	    lv_blocks_3_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getContractRule());
            	      							}
            	      							add(
            	      								current,
            	      								"blocks",
            	      								lv_blocks_3_0,
            	      								"org.unicam.myGrammar.OptGrammar.Declaration");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,18,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_4, grammarAccess.getContractAccess().getSemicolonKeyword_3_0_1());
            	      				
            	    }

            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalOptGrammar.g:169:4: ( (lv_blocks_5_0= ruleFunctionDefinition ) )
            	    {
            	    // InternalOptGrammar.g:169:4: ( (lv_blocks_5_0= ruleFunctionDefinition ) )
            	    // InternalOptGrammar.g:170:5: (lv_blocks_5_0= ruleFunctionDefinition )
            	    {
            	    // InternalOptGrammar.g:170:5: (lv_blocks_5_0= ruleFunctionDefinition )
            	    // InternalOptGrammar.g:171:6: lv_blocks_5_0= ruleFunctionDefinition
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getContractAccess().getBlocksFunctionDefinitionParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_blocks_5_0=ruleFunctionDefinition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getContractRule());
            	      						}
            	      						add(
            	      							current,
            	      							"blocks",
            	      							lv_blocks_5_0,
            	      							"org.unicam.myGrammar.OptGrammar.FunctionDefinition");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            otherlv_6=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getContractAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleContract"


    // $ANTLR start "entryRuleDeclaration"
    // InternalOptGrammar.g:197:1: entryRuleDeclaration returns [EObject current=null] : iv_ruleDeclaration= ruleDeclaration EOF ;
    public final EObject entryRuleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclaration = null;


        try {
            // InternalOptGrammar.g:197:52: (iv_ruleDeclaration= ruleDeclaration EOF )
            // InternalOptGrammar.g:198:2: iv_ruleDeclaration= ruleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDeclaration=ruleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclaration"


    // $ANTLR start "ruleDeclaration"
    // InternalOptGrammar.g:204:1: ruleDeclaration returns [EObject current=null] : (this_FunctionDeclaration_0= ruleFunctionDeclaration | this_StructDeclaration_1= ruleStructDeclaration ) ;
    public final EObject ruleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_FunctionDeclaration_0 = null;

        EObject this_StructDeclaration_1 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:210:2: ( (this_FunctionDeclaration_0= ruleFunctionDeclaration | this_StructDeclaration_1= ruleStructDeclaration ) )
            // InternalOptGrammar.g:211:2: (this_FunctionDeclaration_0= ruleFunctionDeclaration | this_StructDeclaration_1= ruleStructDeclaration )
            {
            // InternalOptGrammar.g:211:2: (this_FunctionDeclaration_0= ruleFunctionDeclaration | this_StructDeclaration_1= ruleStructDeclaration )
            int alt3=2;
            switch ( input.LA(1) ) {
            case 180:
                {
                int LA3_1 = input.LA(2);

                if ( (LA3_1==RULE_ID||LA3_1==21||(LA3_1>=28 && LA3_1<=29)||LA3_1==33||(LA3_1>=75 && LA3_1<=176)) ) {
                    alt3=1;
                }
                else if ( (LA3_1==20) ) {
                    alt3=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 1, input);

                    throw nvae;
                }
                }
                break;
            case 181:
                {
                int LA3_2 = input.LA(2);

                if ( (LA3_2==20) ) {
                    alt3=2;
                }
                else if ( (LA3_2==RULE_ID||LA3_2==21||(LA3_2>=28 && LA3_2<=29)||LA3_2==33||(LA3_2>=75 && LA3_2<=176)) ) {
                    alt3=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 2, input);

                    throw nvae;
                }
                }
                break;
            case 182:
                {
                int LA3_3 = input.LA(2);

                if ( (LA3_3==RULE_ID||LA3_3==21||(LA3_3>=28 && LA3_3<=29)||LA3_3==33||(LA3_3>=75 && LA3_3<=176)) ) {
                    alt3=1;
                }
                else if ( (LA3_3==20) ) {
                    alt3=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 3, input);

                    throw nvae;
                }
                }
                break;
            case 183:
                {
                int LA3_4 = input.LA(2);

                if ( (LA3_4==RULE_ID||LA3_4==21||(LA3_4>=28 && LA3_4<=29)||LA3_4==33||(LA3_4>=75 && LA3_4<=176)) ) {
                    alt3=1;
                }
                else if ( (LA3_4==20) ) {
                    alt3=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 4, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
            case 21:
            case 27:
            case 28:
            case 29:
            case 33:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 123:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 176:
            case 177:
            case 178:
            case 179:
                {
                alt3=1;
                }
                break;
            case 20:
                {
                int LA3_6 = input.LA(2);

                if ( (LA3_6==RULE_ID) ) {
                    int LA3_8 = input.LA(3);

                    if ( (LA3_8==EOF||LA3_8==RULE_ID||LA3_8==18||LA3_8==23) ) {
                        alt3=1;
                    }
                    else if ( (LA3_8==17) ) {
                        alt3=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 3, 8, input);

                        throw nvae;
                    }
                }
                else if ( (LA3_6==27||(LA3_6>=177 && LA3_6<=179)) ) {
                    alt3=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 6, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }

            switch (alt3) {
                case 1 :
                    // InternalOptGrammar.g:212:3: this_FunctionDeclaration_0= ruleFunctionDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getFunctionDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionDeclaration_0=ruleFunctionDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:221:3: this_StructDeclaration_1= ruleStructDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getStructDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StructDeclaration_1=ruleStructDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StructDeclaration_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclaration"


    // $ANTLR start "entryRuleFunctionDeclaration"
    // InternalOptGrammar.g:233:1: entryRuleFunctionDeclaration returns [EObject current=null] : iv_ruleFunctionDeclaration= ruleFunctionDeclaration EOF ;
    public final EObject entryRuleFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionDeclaration = null;


        try {
            // InternalOptGrammar.g:233:60: (iv_ruleFunctionDeclaration= ruleFunctionDeclaration EOF )
            // InternalOptGrammar.g:234:2: iv_ruleFunctionDeclaration= ruleFunctionDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionDeclaration=ruleFunctionDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionDeclaration"


    // $ANTLR start "ruleFunctionDeclaration"
    // InternalOptGrammar.g:240:1: ruleFunctionDeclaration returns [EObject current=null] : (this_EnumDefinition_0= ruleEnumDefinition | this_FunctionParameterDeclaration_1= ruleFunctionParameterDeclaration ) ;
    public final EObject ruleFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_EnumDefinition_0 = null;

        EObject this_FunctionParameterDeclaration_1 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:246:2: ( (this_EnumDefinition_0= ruleEnumDefinition | this_FunctionParameterDeclaration_1= ruleFunctionParameterDeclaration ) )
            // InternalOptGrammar.g:247:2: (this_EnumDefinition_0= ruleEnumDefinition | this_FunctionParameterDeclaration_1= ruleFunctionParameterDeclaration )
            {
            // InternalOptGrammar.g:247:2: (this_EnumDefinition_0= ruleEnumDefinition | this_FunctionParameterDeclaration_1= ruleFunctionParameterDeclaration )
            int alt4=2;
            switch ( input.LA(1) ) {
            case 180:
                {
                int LA4_1 = input.LA(2);

                if ( (LA4_1==RULE_ID||(LA4_1>=28 && LA4_1<=29)||LA4_1==33||(LA4_1>=75 && LA4_1<=176)) ) {
                    alt4=2;
                }
                else if ( (LA4_1==21) ) {
                    alt4=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 1, input);

                    throw nvae;
                }
                }
                break;
            case 181:
                {
                int LA4_2 = input.LA(2);

                if ( (LA4_2==RULE_ID||(LA4_2>=28 && LA4_2<=29)||LA4_2==33||(LA4_2>=75 && LA4_2<=176)) ) {
                    alt4=2;
                }
                else if ( (LA4_2==21) ) {
                    alt4=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 2, input);

                    throw nvae;
                }
                }
                break;
            case 182:
                {
                int LA4_3 = input.LA(2);

                if ( (LA4_3==RULE_ID||(LA4_3>=28 && LA4_3<=29)||LA4_3==33||(LA4_3>=75 && LA4_3<=176)) ) {
                    alt4=2;
                }
                else if ( (LA4_3==21) ) {
                    alt4=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 3, input);

                    throw nvae;
                }
                }
                break;
            case 183:
                {
                int LA4_4 = input.LA(2);

                if ( (LA4_4==RULE_ID||(LA4_4>=28 && LA4_4<=29)||LA4_4==33||(LA4_4>=75 && LA4_4<=176)) ) {
                    alt4=2;
                }
                else if ( (LA4_4==21) ) {
                    alt4=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 4, input);

                    throw nvae;
                }
                }
                break;
            case 21:
                {
                alt4=1;
                }
                break;
            case RULE_ID:
            case 20:
            case 27:
            case 28:
            case 29:
            case 33:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 123:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 176:
            case 177:
            case 178:
            case 179:
                {
                alt4=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // InternalOptGrammar.g:248:3: this_EnumDefinition_0= ruleEnumDefinition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getEnumDefinitionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EnumDefinition_0=ruleEnumDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EnumDefinition_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:257:3: this_FunctionParameterDeclaration_1= ruleFunctionParameterDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getFunctionParameterDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionParameterDeclaration_1=ruleFunctionParameterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionParameterDeclaration_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionDeclaration"


    // $ANTLR start "entryRuleStructDeclaration"
    // InternalOptGrammar.g:269:1: entryRuleStructDeclaration returns [EObject current=null] : iv_ruleStructDeclaration= ruleStructDeclaration EOF ;
    public final EObject entryRuleStructDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructDeclaration = null;


        try {
            // InternalOptGrammar.g:269:58: (iv_ruleStructDeclaration= ruleStructDeclaration EOF )
            // InternalOptGrammar.g:270:2: iv_ruleStructDeclaration= ruleStructDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStructDeclaration=ruleStructDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructDeclaration"


    // $ANTLR start "ruleStructDeclaration"
    // InternalOptGrammar.g:276:1: ruleStructDeclaration returns [EObject current=null] : ( ( (lv_visibility_0_0= ruleVisibilityEnum ) )? otherlv_1= 'struct' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '{' ( ( (lv_members_4_0= ruleDeclaration ) ) otherlv_5= ';' )* otherlv_6= '}' ) ;
    public final EObject ruleStructDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_visibility_0_0 = null;

        EObject lv_members_4_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:282:2: ( ( ( (lv_visibility_0_0= ruleVisibilityEnum ) )? otherlv_1= 'struct' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '{' ( ( (lv_members_4_0= ruleDeclaration ) ) otherlv_5= ';' )* otherlv_6= '}' ) )
            // InternalOptGrammar.g:283:2: ( ( (lv_visibility_0_0= ruleVisibilityEnum ) )? otherlv_1= 'struct' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '{' ( ( (lv_members_4_0= ruleDeclaration ) ) otherlv_5= ';' )* otherlv_6= '}' )
            {
            // InternalOptGrammar.g:283:2: ( ( (lv_visibility_0_0= ruleVisibilityEnum ) )? otherlv_1= 'struct' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '{' ( ( (lv_members_4_0= ruleDeclaration ) ) otherlv_5= ';' )* otherlv_6= '}' )
            // InternalOptGrammar.g:284:3: ( (lv_visibility_0_0= ruleVisibilityEnum ) )? otherlv_1= 'struct' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '{' ( ( (lv_members_4_0= ruleDeclaration ) ) otherlv_5= ';' )* otherlv_6= '}'
            {
            // InternalOptGrammar.g:284:3: ( (lv_visibility_0_0= ruleVisibilityEnum ) )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( ((LA5_0>=180 && LA5_0<=183)) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // InternalOptGrammar.g:285:4: (lv_visibility_0_0= ruleVisibilityEnum )
                    {
                    // InternalOptGrammar.g:285:4: (lv_visibility_0_0= ruleVisibilityEnum )
                    // InternalOptGrammar.g:286:5: lv_visibility_0_0= ruleVisibilityEnum
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStructDeclarationAccess().getVisibilityVisibilityEnumParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_8);
                    lv_visibility_0_0=ruleVisibilityEnum();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"visibility",
                      						lv_visibility_0_0,
                      						"org.unicam.myGrammar.OptGrammar.VisibilityEnum");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,20,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStructDeclarationAccess().getStructKeyword_1());
              		
            }
            // InternalOptGrammar.g:307:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalOptGrammar.g:308:4: (lv_name_2_0= RULE_ID )
            {
            // InternalOptGrammar.g:308:4: (lv_name_2_0= RULE_ID )
            // InternalOptGrammar.g:309:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getStructDeclarationAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getStructDeclarationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.xtext.common.Terminals.ID");
              				
            }

            }


            }

            otherlv_3=(Token)match(input,17,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getStructDeclarationAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalOptGrammar.g:329:3: ( ( (lv_members_4_0= ruleDeclaration ) ) otherlv_5= ';' )*
            loop6:
            do {
                int alt6=2;
                int LA6_0 = input.LA(1);

                if ( (LA6_0==RULE_ID||(LA6_0>=20 && LA6_0<=21)||(LA6_0>=27 && LA6_0<=29)||LA6_0==33||(LA6_0>=75 && LA6_0<=183)) ) {
                    alt6=1;
                }


                switch (alt6) {
            	case 1 :
            	    // InternalOptGrammar.g:330:4: ( (lv_members_4_0= ruleDeclaration ) ) otherlv_5= ';'
            	    {
            	    // InternalOptGrammar.g:330:4: ( (lv_members_4_0= ruleDeclaration ) )
            	    // InternalOptGrammar.g:331:5: (lv_members_4_0= ruleDeclaration )
            	    {
            	    // InternalOptGrammar.g:331:5: (lv_members_4_0= ruleDeclaration )
            	    // InternalOptGrammar.g:332:6: lv_members_4_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getStructDeclarationAccess().getMembersDeclarationParserRuleCall_4_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_7);
            	    lv_members_4_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"members",
            	      							lv_members_4_0,
            	      							"org.unicam.myGrammar.OptGrammar.Declaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_5=(Token)match(input,18,FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getStructDeclarationAccess().getSemicolonKeyword_4_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);

            otherlv_6=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getStructDeclarationAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructDeclaration"


    // $ANTLR start "entryRuleEnumDefinition"
    // InternalOptGrammar.g:362:1: entryRuleEnumDefinition returns [EObject current=null] : iv_ruleEnumDefinition= ruleEnumDefinition EOF ;
    public final EObject entryRuleEnumDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumDefinition = null;


        try {
            // InternalOptGrammar.g:362:55: (iv_ruleEnumDefinition= ruleEnumDefinition EOF )
            // InternalOptGrammar.g:363:2: iv_ruleEnumDefinition= ruleEnumDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEnumDefinition=ruleEnumDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumDefinition"


    // $ANTLR start "ruleEnumDefinition"
    // InternalOptGrammar.g:369:1: ruleEnumDefinition returns [EObject current=null] : ( ( (lv_visibility_0_0= ruleVisibilityEnum ) )? otherlv_1= 'enum' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '{' ( (lv_members_4_0= ruleEnumValue ) ) (otherlv_5= ',' ( (lv_members_6_0= ruleEnumValue ) ) )* otherlv_7= '}' ) ;
    public final EObject ruleEnumDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_visibility_0_0 = null;

        EObject lv_members_4_0 = null;

        EObject lv_members_6_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:375:2: ( ( ( (lv_visibility_0_0= ruleVisibilityEnum ) )? otherlv_1= 'enum' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '{' ( (lv_members_4_0= ruleEnumValue ) ) (otherlv_5= ',' ( (lv_members_6_0= ruleEnumValue ) ) )* otherlv_7= '}' ) )
            // InternalOptGrammar.g:376:2: ( ( (lv_visibility_0_0= ruleVisibilityEnum ) )? otherlv_1= 'enum' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '{' ( (lv_members_4_0= ruleEnumValue ) ) (otherlv_5= ',' ( (lv_members_6_0= ruleEnumValue ) ) )* otherlv_7= '}' )
            {
            // InternalOptGrammar.g:376:2: ( ( (lv_visibility_0_0= ruleVisibilityEnum ) )? otherlv_1= 'enum' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '{' ( (lv_members_4_0= ruleEnumValue ) ) (otherlv_5= ',' ( (lv_members_6_0= ruleEnumValue ) ) )* otherlv_7= '}' )
            // InternalOptGrammar.g:377:3: ( (lv_visibility_0_0= ruleVisibilityEnum ) )? otherlv_1= 'enum' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '{' ( (lv_members_4_0= ruleEnumValue ) ) (otherlv_5= ',' ( (lv_members_6_0= ruleEnumValue ) ) )* otherlv_7= '}'
            {
            // InternalOptGrammar.g:377:3: ( (lv_visibility_0_0= ruleVisibilityEnum ) )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( ((LA7_0>=180 && LA7_0<=183)) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // InternalOptGrammar.g:378:4: (lv_visibility_0_0= ruleVisibilityEnum )
                    {
                    // InternalOptGrammar.g:378:4: (lv_visibility_0_0= ruleVisibilityEnum )
                    // InternalOptGrammar.g:379:5: lv_visibility_0_0= ruleVisibilityEnum
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEnumDefinitionAccess().getVisibilityVisibilityEnumParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_10);
                    lv_visibility_0_0=ruleVisibilityEnum();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEnumDefinitionRule());
                      					}
                      					set(
                      						current,
                      						"visibility",
                      						lv_visibility_0_0,
                      						"org.unicam.myGrammar.OptGrammar.VisibilityEnum");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,21,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getEnumDefinitionAccess().getEnumKeyword_1());
              		
            }
            // InternalOptGrammar.g:400:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalOptGrammar.g:401:4: (lv_name_2_0= RULE_ID )
            {
            // InternalOptGrammar.g:401:4: (lv_name_2_0= RULE_ID )
            // InternalOptGrammar.g:402:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getEnumDefinitionAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEnumDefinitionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.xtext.common.Terminals.ID");
              				
            }

            }


            }

            otherlv_3=(Token)match(input,17,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getEnumDefinitionAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalOptGrammar.g:422:3: ( (lv_members_4_0= ruleEnumValue ) )
            // InternalOptGrammar.g:423:4: (lv_members_4_0= ruleEnumValue )
            {
            // InternalOptGrammar.g:423:4: (lv_members_4_0= ruleEnumValue )
            // InternalOptGrammar.g:424:5: lv_members_4_0= ruleEnumValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEnumDefinitionAccess().getMembersEnumValueParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_members_4_0=ruleEnumValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEnumDefinitionRule());
              					}
              					add(
              						current,
              						"members",
              						lv_members_4_0,
              						"org.unicam.myGrammar.OptGrammar.EnumValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalOptGrammar.g:441:3: (otherlv_5= ',' ( (lv_members_6_0= ruleEnumValue ) ) )*
            loop8:
            do {
                int alt8=2;
                int LA8_0 = input.LA(1);

                if ( (LA8_0==22) ) {
                    alt8=1;
                }


                switch (alt8) {
            	case 1 :
            	    // InternalOptGrammar.g:442:4: otherlv_5= ',' ( (lv_members_6_0= ruleEnumValue ) )
            	    {
            	    otherlv_5=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getEnumDefinitionAccess().getCommaKeyword_5_0());
            	      			
            	    }
            	    // InternalOptGrammar.g:446:4: ( (lv_members_6_0= ruleEnumValue ) )
            	    // InternalOptGrammar.g:447:5: (lv_members_6_0= ruleEnumValue )
            	    {
            	    // InternalOptGrammar.g:447:5: (lv_members_6_0= ruleEnumValue )
            	    // InternalOptGrammar.g:448:6: lv_members_6_0= ruleEnumValue
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEnumDefinitionAccess().getMembersEnumValueParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_members_6_0=ruleEnumValue();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEnumDefinitionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"members",
            	      							lv_members_6_0,
            	      							"org.unicam.myGrammar.OptGrammar.EnumValue");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop8;
                }
            } while (true);

            otherlv_7=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getEnumDefinitionAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumDefinition"


    // $ANTLR start "entryRuleEnumValue"
    // InternalOptGrammar.g:474:1: entryRuleEnumValue returns [EObject current=null] : iv_ruleEnumValue= ruleEnumValue EOF ;
    public final EObject entryRuleEnumValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumValue = null;


        try {
            // InternalOptGrammar.g:474:50: (iv_ruleEnumValue= ruleEnumValue EOF )
            // InternalOptGrammar.g:475:2: iv_ruleEnumValue= ruleEnumValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEnumValue=ruleEnumValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumValue"


    // $ANTLR start "ruleEnumValue"
    // InternalOptGrammar.g:481:1: ruleEnumValue returns [EObject current=null] : ( (lv_name_0_0= RULE_ID ) ) ;
    public final EObject ruleEnumValue() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:487:2: ( ( (lv_name_0_0= RULE_ID ) ) )
            // InternalOptGrammar.g:488:2: ( (lv_name_0_0= RULE_ID ) )
            {
            // InternalOptGrammar.g:488:2: ( (lv_name_0_0= RULE_ID ) )
            // InternalOptGrammar.g:489:3: (lv_name_0_0= RULE_ID )
            {
            // InternalOptGrammar.g:489:3: (lv_name_0_0= RULE_ID )
            // InternalOptGrammar.g:490:4: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getEnumValueAccess().getNameIDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getEnumValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"name",
              					lv_name_0_0,
              					"org.eclipse.xtext.common.Terminals.ID");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumValue"


    // $ANTLR start "entryRuleFunctionParameterDeclaration"
    // InternalOptGrammar.g:509:1: entryRuleFunctionParameterDeclaration returns [EObject current=null] : iv_ruleFunctionParameterDeclaration= ruleFunctionParameterDeclaration EOF ;
    public final EObject entryRuleFunctionParameterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionParameterDeclaration = null;


        try {
            // InternalOptGrammar.g:509:69: (iv_ruleFunctionParameterDeclaration= ruleFunctionParameterDeclaration EOF )
            // InternalOptGrammar.g:510:2: iv_ruleFunctionParameterDeclaration= ruleFunctionParameterDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionParameterDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionParameterDeclaration=ruleFunctionParameterDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionParameterDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionParameterDeclaration"


    // $ANTLR start "ruleFunctionParameterDeclaration"
    // InternalOptGrammar.g:516:1: ruleFunctionParameterDeclaration returns [EObject current=null] : (this_ArrayDefinitionDeclaration_0= ruleArrayDefinitionDeclaration | this_MappingDeclaration_1= ruleMappingDeclaration | this_PrimaryTypeDefinitionDeclaration_2= rulePrimaryTypeDefinitionDeclaration | this_ConcreteStructureDefinitionDeclaration_3= ruleConcreteStructureDefinitionDeclaration ) ;
    public final EObject ruleFunctionParameterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_ArrayDefinitionDeclaration_0 = null;

        EObject this_MappingDeclaration_1 = null;

        EObject this_PrimaryTypeDefinitionDeclaration_2 = null;

        EObject this_ConcreteStructureDefinitionDeclaration_3 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:522:2: ( (this_ArrayDefinitionDeclaration_0= ruleArrayDefinitionDeclaration | this_MappingDeclaration_1= ruleMappingDeclaration | this_PrimaryTypeDefinitionDeclaration_2= rulePrimaryTypeDefinitionDeclaration | this_ConcreteStructureDefinitionDeclaration_3= ruleConcreteStructureDefinitionDeclaration ) )
            // InternalOptGrammar.g:523:2: (this_ArrayDefinitionDeclaration_0= ruleArrayDefinitionDeclaration | this_MappingDeclaration_1= ruleMappingDeclaration | this_PrimaryTypeDefinitionDeclaration_2= rulePrimaryTypeDefinitionDeclaration | this_ConcreteStructureDefinitionDeclaration_3= ruleConcreteStructureDefinitionDeclaration )
            {
            // InternalOptGrammar.g:523:2: (this_ArrayDefinitionDeclaration_0= ruleArrayDefinitionDeclaration | this_MappingDeclaration_1= ruleMappingDeclaration | this_PrimaryTypeDefinitionDeclaration_2= rulePrimaryTypeDefinitionDeclaration | this_ConcreteStructureDefinitionDeclaration_3= ruleConcreteStructureDefinitionDeclaration )
            int alt9=4;
            alt9 = dfa9.predict(input);
            switch (alt9) {
                case 1 :
                    // InternalOptGrammar.g:524:3: this_ArrayDefinitionDeclaration_0= ruleArrayDefinitionDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFunctionParameterDeclarationAccess().getArrayDefinitionDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayDefinitionDeclaration_0=ruleArrayDefinitionDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ArrayDefinitionDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:533:3: this_MappingDeclaration_1= ruleMappingDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFunctionParameterDeclarationAccess().getMappingDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MappingDeclaration_1=ruleMappingDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MappingDeclaration_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalOptGrammar.g:542:3: this_PrimaryTypeDefinitionDeclaration_2= rulePrimaryTypeDefinitionDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFunctionParameterDeclarationAccess().getPrimaryTypeDefinitionDeclarationParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PrimaryTypeDefinitionDeclaration_2=rulePrimaryTypeDefinitionDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimaryTypeDefinitionDeclaration_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalOptGrammar.g:551:3: this_ConcreteStructureDefinitionDeclaration_3= ruleConcreteStructureDefinitionDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFunctionParameterDeclarationAccess().getConcreteStructureDefinitionDeclarationParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ConcreteStructureDefinitionDeclaration_3=ruleConcreteStructureDefinitionDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ConcreteStructureDefinitionDeclaration_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionParameterDeclaration"


    // $ANTLR start "entryRuleArrayDefinitionDeclaration"
    // InternalOptGrammar.g:563:1: entryRuleArrayDefinitionDeclaration returns [EObject current=null] : iv_ruleArrayDefinitionDeclaration= ruleArrayDefinitionDeclaration EOF ;
    public final EObject entryRuleArrayDefinitionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayDefinitionDeclaration = null;


        try {
            // InternalOptGrammar.g:563:67: (iv_ruleArrayDefinitionDeclaration= ruleArrayDefinitionDeclaration EOF )
            // InternalOptGrammar.g:564:2: iv_ruleArrayDefinitionDeclaration= ruleArrayDefinitionDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayDefinitionDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayDefinitionDeclaration=ruleArrayDefinitionDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayDefinitionDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayDefinitionDeclaration"


    // $ANTLR start "ruleArrayDefinitionDeclaration"
    // InternalOptGrammar.g:570:1: ruleArrayDefinitionDeclaration returns [EObject current=null] : (this_ArrayDeclaration_0= ruleArrayDeclaration (otherlv_1= '=' ( ( (lv_blocks_2_0= ruleFilledArray ) ) | ( (otherlv_3= RULE_ID ) ) | ( ( (lv_access_4_1= ruleMappingAccess | lv_access_4_2= ruleArrayAccess | lv_access_4_3= ruleFieldAccess ) ) ) ) )? ) ;
    public final EObject ruleArrayDefinitionDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_ArrayDeclaration_0 = null;

        EObject lv_blocks_2_0 = null;

        EObject lv_access_4_1 = null;

        EObject lv_access_4_2 = null;

        EObject lv_access_4_3 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:576:2: ( (this_ArrayDeclaration_0= ruleArrayDeclaration (otherlv_1= '=' ( ( (lv_blocks_2_0= ruleFilledArray ) ) | ( (otherlv_3= RULE_ID ) ) | ( ( (lv_access_4_1= ruleMappingAccess | lv_access_4_2= ruleArrayAccess | lv_access_4_3= ruleFieldAccess ) ) ) ) )? ) )
            // InternalOptGrammar.g:577:2: (this_ArrayDeclaration_0= ruleArrayDeclaration (otherlv_1= '=' ( ( (lv_blocks_2_0= ruleFilledArray ) ) | ( (otherlv_3= RULE_ID ) ) | ( ( (lv_access_4_1= ruleMappingAccess | lv_access_4_2= ruleArrayAccess | lv_access_4_3= ruleFieldAccess ) ) ) ) )? )
            {
            // InternalOptGrammar.g:577:2: (this_ArrayDeclaration_0= ruleArrayDeclaration (otherlv_1= '=' ( ( (lv_blocks_2_0= ruleFilledArray ) ) | ( (otherlv_3= RULE_ID ) ) | ( ( (lv_access_4_1= ruleMappingAccess | lv_access_4_2= ruleArrayAccess | lv_access_4_3= ruleFieldAccess ) ) ) ) )? )
            // InternalOptGrammar.g:578:3: this_ArrayDeclaration_0= ruleArrayDeclaration (otherlv_1= '=' ( ( (lv_blocks_2_0= ruleFilledArray ) ) | ( (otherlv_3= RULE_ID ) ) | ( ( (lv_access_4_1= ruleMappingAccess | lv_access_4_2= ruleArrayAccess | lv_access_4_3= ruleFieldAccess ) ) ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getArrayDefinitionDeclarationAccess().getArrayDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_12);
            this_ArrayDeclaration_0=ruleArrayDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ArrayDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalOptGrammar.g:586:3: (otherlv_1= '=' ( ( (lv_blocks_2_0= ruleFilledArray ) ) | ( (otherlv_3= RULE_ID ) ) | ( ( (lv_access_4_1= ruleMappingAccess | lv_access_4_2= ruleArrayAccess | lv_access_4_3= ruleFieldAccess ) ) ) ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==23) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalOptGrammar.g:587:4: otherlv_1= '=' ( ( (lv_blocks_2_0= ruleFilledArray ) ) | ( (otherlv_3= RULE_ID ) ) | ( ( (lv_access_4_1= ruleMappingAccess | lv_access_4_2= ruleArrayAccess | lv_access_4_3= ruleFieldAccess ) ) ) )
                    {
                    otherlv_1=(Token)match(input,23,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getArrayDefinitionDeclarationAccess().getEqualsSignKeyword_1_0());
                      			
                    }
                    // InternalOptGrammar.g:591:4: ( ( (lv_blocks_2_0= ruleFilledArray ) ) | ( (otherlv_3= RULE_ID ) ) | ( ( (lv_access_4_1= ruleMappingAccess | lv_access_4_2= ruleArrayAccess | lv_access_4_3= ruleFieldAccess ) ) ) )
                    int alt11=3;
                    int LA11_0 = input.LA(1);

                    if ( ((LA11_0>=24 && LA11_0<=25)) ) {
                        alt11=1;
                    }
                    else if ( (LA11_0==RULE_ID) ) {
                        int LA11_2 = input.LA(2);

                        if ( (LA11_2==25||LA11_2==30||LA11_2==32) ) {
                            alt11=3;
                        }
                        else if ( (LA11_2==EOF||LA11_2==18||LA11_2==22||LA11_2==36) ) {
                            alt11=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 11, 2, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 11, 0, input);

                        throw nvae;
                    }
                    switch (alt11) {
                        case 1 :
                            // InternalOptGrammar.g:592:5: ( (lv_blocks_2_0= ruleFilledArray ) )
                            {
                            // InternalOptGrammar.g:592:5: ( (lv_blocks_2_0= ruleFilledArray ) )
                            // InternalOptGrammar.g:593:6: (lv_blocks_2_0= ruleFilledArray )
                            {
                            // InternalOptGrammar.g:593:6: (lv_blocks_2_0= ruleFilledArray )
                            // InternalOptGrammar.g:594:7: lv_blocks_2_0= ruleFilledArray
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getArrayDefinitionDeclarationAccess().getBlocksFilledArrayParserRuleCall_1_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_blocks_2_0=ruleFilledArray();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getArrayDefinitionDeclarationRule());
                              							}
                              							set(
                              								current,
                              								"blocks",
                              								lv_blocks_2_0,
                              								"org.unicam.myGrammar.OptGrammar.FilledArray");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalOptGrammar.g:612:5: ( (otherlv_3= RULE_ID ) )
                            {
                            // InternalOptGrammar.g:612:5: ( (otherlv_3= RULE_ID ) )
                            // InternalOptGrammar.g:613:6: (otherlv_3= RULE_ID )
                            {
                            // InternalOptGrammar.g:613:6: (otherlv_3= RULE_ID )
                            // InternalOptGrammar.g:614:7: otherlv_3= RULE_ID
                            {
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getArrayDefinitionDeclarationRule());
                              							}
                              						
                            }
                            otherlv_3=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_3, grammarAccess.getArrayDefinitionDeclarationAccess().getVarDeclarationCrossReference_1_1_1_0());
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalOptGrammar.g:626:5: ( ( (lv_access_4_1= ruleMappingAccess | lv_access_4_2= ruleArrayAccess | lv_access_4_3= ruleFieldAccess ) ) )
                            {
                            // InternalOptGrammar.g:626:5: ( ( (lv_access_4_1= ruleMappingAccess | lv_access_4_2= ruleArrayAccess | lv_access_4_3= ruleFieldAccess ) ) )
                            // InternalOptGrammar.g:627:6: ( (lv_access_4_1= ruleMappingAccess | lv_access_4_2= ruleArrayAccess | lv_access_4_3= ruleFieldAccess ) )
                            {
                            // InternalOptGrammar.g:627:6: ( (lv_access_4_1= ruleMappingAccess | lv_access_4_2= ruleArrayAccess | lv_access_4_3= ruleFieldAccess ) )
                            // InternalOptGrammar.g:628:7: (lv_access_4_1= ruleMappingAccess | lv_access_4_2= ruleArrayAccess | lv_access_4_3= ruleFieldAccess )
                            {
                            // InternalOptGrammar.g:628:7: (lv_access_4_1= ruleMappingAccess | lv_access_4_2= ruleArrayAccess | lv_access_4_3= ruleFieldAccess )
                            int alt10=3;
                            int LA10_0 = input.LA(1);

                            if ( (LA10_0==RULE_ID) ) {
                                switch ( input.LA(2) ) {
                                case 25:
                                    {
                                    alt10=2;
                                    }
                                    break;
                                case 32:
                                    {
                                    alt10=3;
                                    }
                                    break;
                                case 30:
                                    {
                                    alt10=1;
                                    }
                                    break;
                                default:
                                    if (state.backtracking>0) {state.failed=true; return current;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 10, 1, input);

                                    throw nvae;
                                }

                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 10, 0, input);

                                throw nvae;
                            }
                            switch (alt10) {
                                case 1 :
                                    // InternalOptGrammar.g:629:8: lv_access_4_1= ruleMappingAccess
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getArrayDefinitionDeclarationAccess().getAccessMappingAccessParserRuleCall_1_1_2_0_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_access_4_1=ruleMappingAccess();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getArrayDefinitionDeclarationRule());
                                      								}
                                      								set(
                                      									current,
                                      									"access",
                                      									lv_access_4_1,
                                      									"org.unicam.myGrammar.OptGrammar.MappingAccess");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalOptGrammar.g:645:8: lv_access_4_2= ruleArrayAccess
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getArrayDefinitionDeclarationAccess().getAccessArrayAccessParserRuleCall_1_1_2_0_1());
                                      							
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_access_4_2=ruleArrayAccess();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getArrayDefinitionDeclarationRule());
                                      								}
                                      								set(
                                      									current,
                                      									"access",
                                      									lv_access_4_2,
                                      									"org.unicam.myGrammar.OptGrammar.ArrayAccess");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalOptGrammar.g:661:8: lv_access_4_3= ruleFieldAccess
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getArrayDefinitionDeclarationAccess().getAccessFieldAccessParserRuleCall_1_1_2_0_2());
                                      							
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_access_4_3=ruleFieldAccess();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getArrayDefinitionDeclarationRule());
                                      								}
                                      								set(
                                      									current,
                                      									"access",
                                      									lv_access_4_3,
                                      									"org.unicam.myGrammar.OptGrammar.FieldAccess");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayDefinitionDeclaration"


    // $ANTLR start "entryRuleFilledArray"
    // InternalOptGrammar.g:685:1: entryRuleFilledArray returns [EObject current=null] : iv_ruleFilledArray= ruleFilledArray EOF ;
    public final EObject entryRuleFilledArray() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFilledArray = null;


        try {
            // InternalOptGrammar.g:685:52: (iv_ruleFilledArray= ruleFilledArray EOF )
            // InternalOptGrammar.g:686:2: iv_ruleFilledArray= ruleFilledArray EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFilledArrayRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFilledArray=ruleFilledArray();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFilledArray; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFilledArray"


    // $ANTLR start "ruleFilledArray"
    // InternalOptGrammar.g:692:1: ruleFilledArray returns [EObject current=null] : ( (lv_arrays_0_0= ruleValueSets ) )+ ;
    public final EObject ruleFilledArray() throws RecognitionException {
        EObject current = null;

        EObject lv_arrays_0_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:698:2: ( ( (lv_arrays_0_0= ruleValueSets ) )+ )
            // InternalOptGrammar.g:699:2: ( (lv_arrays_0_0= ruleValueSets ) )+
            {
            // InternalOptGrammar.g:699:2: ( (lv_arrays_0_0= ruleValueSets ) )+
            int cnt13=0;
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( ((LA13_0>=24 && LA13_0<=25)) ) {
                    alt13=1;
                }


                switch (alt13) {
            	case 1 :
            	    // InternalOptGrammar.g:700:3: (lv_arrays_0_0= ruleValueSets )
            	    {
            	    // InternalOptGrammar.g:700:3: (lv_arrays_0_0= ruleValueSets )
            	    // InternalOptGrammar.g:701:4: lv_arrays_0_0= ruleValueSets
            	    {
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getFilledArrayAccess().getArraysValueSetsParserRuleCall_0());
            	      			
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_arrays_0_0=ruleValueSets();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElementForParent(grammarAccess.getFilledArrayRule());
            	      				}
            	      				add(
            	      					current,
            	      					"arrays",
            	      					lv_arrays_0_0,
            	      					"org.unicam.myGrammar.OptGrammar.ValueSets");
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt13 >= 1 ) break loop13;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(13, input);
                        throw eee;
                }
                cnt13++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFilledArray"


    // $ANTLR start "entryRuleValueSets"
    // InternalOptGrammar.g:721:1: entryRuleValueSets returns [EObject current=null] : iv_ruleValueSets= ruleValueSets EOF ;
    public final EObject entryRuleValueSets() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueSets = null;


        try {
            // InternalOptGrammar.g:721:50: (iv_ruleValueSets= ruleValueSets EOF )
            // InternalOptGrammar.g:722:2: iv_ruleValueSets= ruleValueSets EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueSetsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueSets=ruleValueSets();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueSets; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueSets"


    // $ANTLR start "ruleValueSets"
    // InternalOptGrammar.g:728:1: ruleValueSets returns [EObject current=null] : ( () (otherlv_1= '[]' | (otherlv_2= '[' ( ( (lv_values_3_0= ruleLogicalOperations ) ) (otherlv_4= ',' ( (lv_values_5_0= ruleLogicalOperations ) ) )* )? otherlv_6= ']' ) ) ) ;
    public final EObject ruleValueSets() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_values_3_0 = null;

        EObject lv_values_5_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:734:2: ( ( () (otherlv_1= '[]' | (otherlv_2= '[' ( ( (lv_values_3_0= ruleLogicalOperations ) ) (otherlv_4= ',' ( (lv_values_5_0= ruleLogicalOperations ) ) )* )? otherlv_6= ']' ) ) ) )
            // InternalOptGrammar.g:735:2: ( () (otherlv_1= '[]' | (otherlv_2= '[' ( ( (lv_values_3_0= ruleLogicalOperations ) ) (otherlv_4= ',' ( (lv_values_5_0= ruleLogicalOperations ) ) )* )? otherlv_6= ']' ) ) )
            {
            // InternalOptGrammar.g:735:2: ( () (otherlv_1= '[]' | (otherlv_2= '[' ( ( (lv_values_3_0= ruleLogicalOperations ) ) (otherlv_4= ',' ( (lv_values_5_0= ruleLogicalOperations ) ) )* )? otherlv_6= ']' ) ) )
            // InternalOptGrammar.g:736:3: () (otherlv_1= '[]' | (otherlv_2= '[' ( ( (lv_values_3_0= ruleLogicalOperations ) ) (otherlv_4= ',' ( (lv_values_5_0= ruleLogicalOperations ) ) )* )? otherlv_6= ']' ) )
            {
            // InternalOptGrammar.g:736:3: ()
            // InternalOptGrammar.g:737:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getValueSetsAccess().getValueSetsAction_0(),
              					current);
              			
            }

            }

            // InternalOptGrammar.g:743:3: (otherlv_1= '[]' | (otherlv_2= '[' ( ( (lv_values_3_0= ruleLogicalOperations ) ) (otherlv_4= ',' ( (lv_values_5_0= ruleLogicalOperations ) ) )* )? otherlv_6= ']' ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==24) ) {
                alt16=1;
            }
            else if ( (LA16_0==25) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalOptGrammar.g:744:4: otherlv_1= '[]'
                    {
                    otherlv_1=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getValueSetsAccess().getLeftSquareBracketRightSquareBracketKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:749:4: (otherlv_2= '[' ( ( (lv_values_3_0= ruleLogicalOperations ) ) (otherlv_4= ',' ( (lv_values_5_0= ruleLogicalOperations ) ) )* )? otherlv_6= ']' )
                    {
                    // InternalOptGrammar.g:749:4: (otherlv_2= '[' ( ( (lv_values_3_0= ruleLogicalOperations ) ) (otherlv_4= ',' ( (lv_values_5_0= ruleLogicalOperations ) ) )* )? otherlv_6= ']' )
                    // InternalOptGrammar.g:750:5: otherlv_2= '[' ( ( (lv_values_3_0= ruleLogicalOperations ) ) (otherlv_4= ',' ( (lv_values_5_0= ruleLogicalOperations ) ) )* )? otherlv_6= ']'
                    {
                    otherlv_2=(Token)match(input,25,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getValueSetsAccess().getLeftSquareBracketKeyword_1_1_0());
                      				
                    }
                    // InternalOptGrammar.g:754:5: ( ( (lv_values_3_0= ruleLogicalOperations ) ) (otherlv_4= ',' ( (lv_values_5_0= ruleLogicalOperations ) ) )* )?
                    int alt15=2;
                    int LA15_0 = input.LA(1);

                    if ( ((LA15_0>=RULE_INT && LA15_0<=RULE_TX)||(LA15_0>=59 && LA15_0<=60)||(LA15_0>=62 && LA15_0<=69)||LA15_0==74||(LA15_0>=192 && LA15_0<=193)) ) {
                        alt15=1;
                    }
                    switch (alt15) {
                        case 1 :
                            // InternalOptGrammar.g:755:6: ( (lv_values_3_0= ruleLogicalOperations ) ) (otherlv_4= ',' ( (lv_values_5_0= ruleLogicalOperations ) ) )*
                            {
                            // InternalOptGrammar.g:755:6: ( (lv_values_3_0= ruleLogicalOperations ) )
                            // InternalOptGrammar.g:756:7: (lv_values_3_0= ruleLogicalOperations )
                            {
                            // InternalOptGrammar.g:756:7: (lv_values_3_0= ruleLogicalOperations )
                            // InternalOptGrammar.g:757:8: lv_values_3_0= ruleLogicalOperations
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getValueSetsAccess().getValuesLogicalOperationsParserRuleCall_1_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_16);
                            lv_values_3_0=ruleLogicalOperations();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getValueSetsRule());
                              								}
                              								add(
                              									current,
                              									"values",
                              									lv_values_3_0,
                              									"org.unicam.myGrammar.OptGrammar.LogicalOperations");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalOptGrammar.g:774:6: (otherlv_4= ',' ( (lv_values_5_0= ruleLogicalOperations ) ) )*
                            loop14:
                            do {
                                int alt14=2;
                                int LA14_0 = input.LA(1);

                                if ( (LA14_0==22) ) {
                                    alt14=1;
                                }


                                switch (alt14) {
                            	case 1 :
                            	    // InternalOptGrammar.g:775:7: otherlv_4= ',' ( (lv_values_5_0= ruleLogicalOperations ) )
                            	    {
                            	    otherlv_4=(Token)match(input,22,FOLLOW_17); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_4, grammarAccess.getValueSetsAccess().getCommaKeyword_1_1_1_1_0());
                            	      						
                            	    }
                            	    // InternalOptGrammar.g:779:7: ( (lv_values_5_0= ruleLogicalOperations ) )
                            	    // InternalOptGrammar.g:780:8: (lv_values_5_0= ruleLogicalOperations )
                            	    {
                            	    // InternalOptGrammar.g:780:8: (lv_values_5_0= ruleLogicalOperations )
                            	    // InternalOptGrammar.g:781:9: lv_values_5_0= ruleLogicalOperations
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getValueSetsAccess().getValuesLogicalOperationsParserRuleCall_1_1_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_16);
                            	    lv_values_5_0=ruleLogicalOperations();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getValueSetsRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"values",
                            	      										lv_values_5_0,
                            	      										"org.unicam.myGrammar.OptGrammar.LogicalOperations");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop14;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getValueSetsAccess().getRightSquareBracketKeyword_1_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueSets"


    // $ANTLR start "entryRuleArrayDeclaration"
    // InternalOptGrammar.g:810:1: entryRuleArrayDeclaration returns [EObject current=null] : iv_ruleArrayDeclaration= ruleArrayDeclaration EOF ;
    public final EObject entryRuleArrayDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayDeclaration = null;


        try {
            // InternalOptGrammar.g:810:57: (iv_ruleArrayDeclaration= ruleArrayDeclaration EOF )
            // InternalOptGrammar.g:811:2: iv_ruleArrayDeclaration= ruleArrayDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayDeclaration=ruleArrayDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayDeclaration"


    // $ANTLR start "ruleArrayDeclaration"
    // InternalOptGrammar.g:817:1: ruleArrayDeclaration returns [EObject current=null] : ( ( (lv_location_0_0= ruleLocationSpecifierEnum ) )? ( (lv_constant_1_0= 'constant' ) )? ( (lv_visibility_2_0= ruleVisibilityEnum ) )? ( ( (lv_type_3_0= ruleNamedType ) ) | ( (otherlv_4= RULE_ID ) ) ) ( (lv_name_5_0= RULE_ID ) ) (otherlv_6= '[' ( (lv_sizes_7_0= ruleIntLiteral ) )? otherlv_8= ']' )+ ) ;
    public final EObject ruleArrayDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_constant_1_0=null;
        Token otherlv_4=null;
        Token lv_name_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_location_0_0 = null;

        EObject lv_visibility_2_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_sizes_7_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:823:2: ( ( ( (lv_location_0_0= ruleLocationSpecifierEnum ) )? ( (lv_constant_1_0= 'constant' ) )? ( (lv_visibility_2_0= ruleVisibilityEnum ) )? ( ( (lv_type_3_0= ruleNamedType ) ) | ( (otherlv_4= RULE_ID ) ) ) ( (lv_name_5_0= RULE_ID ) ) (otherlv_6= '[' ( (lv_sizes_7_0= ruleIntLiteral ) )? otherlv_8= ']' )+ ) )
            // InternalOptGrammar.g:824:2: ( ( (lv_location_0_0= ruleLocationSpecifierEnum ) )? ( (lv_constant_1_0= 'constant' ) )? ( (lv_visibility_2_0= ruleVisibilityEnum ) )? ( ( (lv_type_3_0= ruleNamedType ) ) | ( (otherlv_4= RULE_ID ) ) ) ( (lv_name_5_0= RULE_ID ) ) (otherlv_6= '[' ( (lv_sizes_7_0= ruleIntLiteral ) )? otherlv_8= ']' )+ )
            {
            // InternalOptGrammar.g:824:2: ( ( (lv_location_0_0= ruleLocationSpecifierEnum ) )? ( (lv_constant_1_0= 'constant' ) )? ( (lv_visibility_2_0= ruleVisibilityEnum ) )? ( ( (lv_type_3_0= ruleNamedType ) ) | ( (otherlv_4= RULE_ID ) ) ) ( (lv_name_5_0= RULE_ID ) ) (otherlv_6= '[' ( (lv_sizes_7_0= ruleIntLiteral ) )? otherlv_8= ']' )+ )
            // InternalOptGrammar.g:825:3: ( (lv_location_0_0= ruleLocationSpecifierEnum ) )? ( (lv_constant_1_0= 'constant' ) )? ( (lv_visibility_2_0= ruleVisibilityEnum ) )? ( ( (lv_type_3_0= ruleNamedType ) ) | ( (otherlv_4= RULE_ID ) ) ) ( (lv_name_5_0= RULE_ID ) ) (otherlv_6= '[' ( (lv_sizes_7_0= ruleIntLiteral ) )? otherlv_8= ']' )+
            {
            // InternalOptGrammar.g:825:3: ( (lv_location_0_0= ruleLocationSpecifierEnum ) )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( ((LA17_0>=177 && LA17_0<=179)) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // InternalOptGrammar.g:826:4: (lv_location_0_0= ruleLocationSpecifierEnum )
                    {
                    // InternalOptGrammar.g:826:4: (lv_location_0_0= ruleLocationSpecifierEnum )
                    // InternalOptGrammar.g:827:5: lv_location_0_0= ruleLocationSpecifierEnum
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getArrayDeclarationAccess().getLocationLocationSpecifierEnumParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_18);
                    lv_location_0_0=ruleLocationSpecifierEnum();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getArrayDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"location",
                      						lv_location_0_0,
                      						"org.unicam.myGrammar.OptGrammar.LocationSpecifierEnum");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalOptGrammar.g:844:3: ( (lv_constant_1_0= 'constant' ) )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==27) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // InternalOptGrammar.g:845:4: (lv_constant_1_0= 'constant' )
                    {
                    // InternalOptGrammar.g:845:4: (lv_constant_1_0= 'constant' )
                    // InternalOptGrammar.g:846:5: lv_constant_1_0= 'constant'
                    {
                    lv_constant_1_0=(Token)match(input,27,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_constant_1_0, grammarAccess.getArrayDeclarationAccess().getConstantConstantKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getArrayDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "constant", true, "constant");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalOptGrammar.g:858:3: ( (lv_visibility_2_0= ruleVisibilityEnum ) )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( ((LA19_0>=180 && LA19_0<=183)) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // InternalOptGrammar.g:859:4: (lv_visibility_2_0= ruleVisibilityEnum )
                    {
                    // InternalOptGrammar.g:859:4: (lv_visibility_2_0= ruleVisibilityEnum )
                    // InternalOptGrammar.g:860:5: lv_visibility_2_0= ruleVisibilityEnum
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getArrayDeclarationAccess().getVisibilityVisibilityEnumParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_20);
                    lv_visibility_2_0=ruleVisibilityEnum();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getArrayDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"visibility",
                      						lv_visibility_2_0,
                      						"org.unicam.myGrammar.OptGrammar.VisibilityEnum");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalOptGrammar.g:877:3: ( ( (lv_type_3_0= ruleNamedType ) ) | ( (otherlv_4= RULE_ID ) ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( ((LA20_0>=28 && LA20_0<=29)||(LA20_0>=75 && LA20_0<=176)) ) {
                alt20=1;
            }
            else if ( (LA20_0==RULE_ID) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalOptGrammar.g:878:4: ( (lv_type_3_0= ruleNamedType ) )
                    {
                    // InternalOptGrammar.g:878:4: ( (lv_type_3_0= ruleNamedType ) )
                    // InternalOptGrammar.g:879:5: (lv_type_3_0= ruleNamedType )
                    {
                    // InternalOptGrammar.g:879:5: (lv_type_3_0= ruleNamedType )
                    // InternalOptGrammar.g:880:6: lv_type_3_0= ruleNamedType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getArrayDeclarationAccess().getTypeNamedTypeParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_type_3_0=ruleNamedType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getArrayDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_3_0,
                      							"org.unicam.myGrammar.OptGrammar.NamedType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:898:4: ( (otherlv_4= RULE_ID ) )
                    {
                    // InternalOptGrammar.g:898:4: ( (otherlv_4= RULE_ID ) )
                    // InternalOptGrammar.g:899:5: (otherlv_4= RULE_ID )
                    {
                    // InternalOptGrammar.g:899:5: (otherlv_4= RULE_ID )
                    // InternalOptGrammar.g:900:6: otherlv_4= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getArrayDeclarationRule());
                      						}
                      					
                    }
                    otherlv_4=(Token)match(input,RULE_ID,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_4, grammarAccess.getArrayDeclarationAccess().getStrucTypeStructDeclarationCrossReference_3_1_0());
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOptGrammar.g:912:3: ( (lv_name_5_0= RULE_ID ) )
            // InternalOptGrammar.g:913:4: (lv_name_5_0= RULE_ID )
            {
            // InternalOptGrammar.g:913:4: (lv_name_5_0= RULE_ID )
            // InternalOptGrammar.g:914:5: lv_name_5_0= RULE_ID
            {
            lv_name_5_0=(Token)match(input,RULE_ID,FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_5_0, grammarAccess.getArrayDeclarationAccess().getNameIDTerminalRuleCall_4_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getArrayDeclarationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_5_0,
              						"org.eclipse.xtext.common.Terminals.ID");
              				
            }

            }


            }

            // InternalOptGrammar.g:930:3: (otherlv_6= '[' ( (lv_sizes_7_0= ruleIntLiteral ) )? otherlv_8= ']' )+
            int cnt22=0;
            loop22:
            do {
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( (LA22_0==25) ) {
                    alt22=1;
                }


                switch (alt22) {
            	case 1 :
            	    // InternalOptGrammar.g:931:4: otherlv_6= '[' ( (lv_sizes_7_0= ruleIntLiteral ) )? otherlv_8= ']'
            	    {
            	    otherlv_6=(Token)match(input,25,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getArrayDeclarationAccess().getLeftSquareBracketKeyword_5_0());
            	      			
            	    }
            	    // InternalOptGrammar.g:935:4: ( (lv_sizes_7_0= ruleIntLiteral ) )?
            	    int alt21=2;
            	    int LA21_0 = input.LA(1);

            	    if ( (LA21_0==RULE_INT) ) {
            	        alt21=1;
            	    }
            	    switch (alt21) {
            	        case 1 :
            	            // InternalOptGrammar.g:936:5: (lv_sizes_7_0= ruleIntLiteral )
            	            {
            	            // InternalOptGrammar.g:936:5: (lv_sizes_7_0= ruleIntLiteral )
            	            // InternalOptGrammar.g:937:6: lv_sizes_7_0= ruleIntLiteral
            	            {
            	            if ( state.backtracking==0 ) {

            	              						newCompositeNode(grammarAccess.getArrayDeclarationAccess().getSizesIntLiteralParserRuleCall_5_1_0());
            	              					
            	            }
            	            pushFollow(FOLLOW_23);
            	            lv_sizes_7_0=ruleIntLiteral();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						if (current==null) {
            	              							current = createModelElementForParent(grammarAccess.getArrayDeclarationRule());
            	              						}
            	              						add(
            	              							current,
            	              							"sizes",
            	              							lv_sizes_7_0,
            	              							"org.unicam.myGrammar.OptGrammar.IntLiteral");
            	              						afterParserOrEnumRuleCall();
            	              					
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    otherlv_8=(Token)match(input,26,FOLLOW_24); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_8, grammarAccess.getArrayDeclarationAccess().getRightSquareBracketKeyword_5_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt22 >= 1 ) break loop22;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(22, input);
                        throw eee;
                }
                cnt22++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayDeclaration"


    // $ANTLR start "entryRuleNamedType"
    // InternalOptGrammar.g:963:1: entryRuleNamedType returns [EObject current=null] : iv_ruleNamedType= ruleNamedType EOF ;
    public final EObject entryRuleNamedType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedType = null;


        try {
            // InternalOptGrammar.g:963:50: (iv_ruleNamedType= ruleNamedType EOF )
            // InternalOptGrammar.g:964:2: iv_ruleNamedType= ruleNamedType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedType=ruleNamedType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamedType"


    // $ANTLR start "ruleNamedType"
    // InternalOptGrammar.g:970:1: ruleNamedType returns [EObject current=null] : (this_SimpleTypeDeclaration_0= ruleSimpleTypeDeclaration | this_ElementaryTypeNameEnum_1= ruleElementaryTypeNameEnum ) ;
    public final EObject ruleNamedType() throws RecognitionException {
        EObject current = null;

        EObject this_SimpleTypeDeclaration_0 = null;

        EObject this_ElementaryTypeNameEnum_1 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:976:2: ( (this_SimpleTypeDeclaration_0= ruleSimpleTypeDeclaration | this_ElementaryTypeNameEnum_1= ruleElementaryTypeNameEnum ) )
            // InternalOptGrammar.g:977:2: (this_SimpleTypeDeclaration_0= ruleSimpleTypeDeclaration | this_ElementaryTypeNameEnum_1= ruleElementaryTypeNameEnum )
            {
            // InternalOptGrammar.g:977:2: (this_SimpleTypeDeclaration_0= ruleSimpleTypeDeclaration | this_ElementaryTypeNameEnum_1= ruleElementaryTypeNameEnum )
            int alt23=2;
            switch ( input.LA(1) ) {
            case 28:
                {
                alt23=1;
                }
                break;
            case 29:
                {
                alt23=1;
                }
                break;
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 123:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 176:
                {
                alt23=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }

            switch (alt23) {
                case 1 :
                    // InternalOptGrammar.g:978:3: this_SimpleTypeDeclaration_0= ruleSimpleTypeDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNamedTypeAccess().getSimpleTypeDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimpleTypeDeclaration_0=ruleSimpleTypeDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimpleTypeDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:987:3: this_ElementaryTypeNameEnum_1= ruleElementaryTypeNameEnum
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNamedTypeAccess().getElementaryTypeNameEnumParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ElementaryTypeNameEnum_1=ruleElementaryTypeNameEnum();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ElementaryTypeNameEnum_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedType"


    // $ANTLR start "entryRuleSimpleTypeDeclaration"
    // InternalOptGrammar.g:999:1: entryRuleSimpleTypeDeclaration returns [EObject current=null] : iv_ruleSimpleTypeDeclaration= ruleSimpleTypeDeclaration EOF ;
    public final EObject entryRuleSimpleTypeDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleTypeDeclaration = null;


        try {
            // InternalOptGrammar.g:999:62: (iv_ruleSimpleTypeDeclaration= ruleSimpleTypeDeclaration EOF )
            // InternalOptGrammar.g:1000:2: iv_ruleSimpleTypeDeclaration= ruleSimpleTypeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleTypeDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleTypeDeclaration=ruleSimpleTypeDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleTypeDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleTypeDeclaration"


    // $ANTLR start "ruleSimpleTypeDeclaration"
    // InternalOptGrammar.g:1006:1: ruleSimpleTypeDeclaration returns [EObject current=null] : ( ( (lv_type_0_1= 'string' | lv_type_0_2= 'bool' ) ) ) ;
    public final EObject ruleSimpleTypeDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_type_0_1=null;
        Token lv_type_0_2=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:1012:2: ( ( ( (lv_type_0_1= 'string' | lv_type_0_2= 'bool' ) ) ) )
            // InternalOptGrammar.g:1013:2: ( ( (lv_type_0_1= 'string' | lv_type_0_2= 'bool' ) ) )
            {
            // InternalOptGrammar.g:1013:2: ( ( (lv_type_0_1= 'string' | lv_type_0_2= 'bool' ) ) )
            // InternalOptGrammar.g:1014:3: ( (lv_type_0_1= 'string' | lv_type_0_2= 'bool' ) )
            {
            // InternalOptGrammar.g:1014:3: ( (lv_type_0_1= 'string' | lv_type_0_2= 'bool' ) )
            // InternalOptGrammar.g:1015:4: (lv_type_0_1= 'string' | lv_type_0_2= 'bool' )
            {
            // InternalOptGrammar.g:1015:4: (lv_type_0_1= 'string' | lv_type_0_2= 'bool' )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==28) ) {
                alt24=1;
            }
            else if ( (LA24_0==29) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalOptGrammar.g:1016:5: lv_type_0_1= 'string'
                    {
                    lv_type_0_1=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_1, grammarAccess.getSimpleTypeDeclarationAccess().getTypeStringKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSimpleTypeDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_1, null);
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:1027:5: lv_type_0_2= 'bool'
                    {
                    lv_type_0_2=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_2, grammarAccess.getSimpleTypeDeclarationAccess().getTypeBoolKeyword_0_1());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSimpleTypeDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_2, null);
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleTypeDeclaration"


    // $ANTLR start "entryRuleMappingAccess"
    // InternalOptGrammar.g:1043:1: entryRuleMappingAccess returns [EObject current=null] : iv_ruleMappingAccess= ruleMappingAccess EOF ;
    public final EObject entryRuleMappingAccess() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingAccess = null;


        try {
            // InternalOptGrammar.g:1043:54: (iv_ruleMappingAccess= ruleMappingAccess EOF )
            // InternalOptGrammar.g:1044:2: iv_ruleMappingAccess= ruleMappingAccess EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingAccessRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMappingAccess=ruleMappingAccess();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingAccess; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingAccess"


    // $ANTLR start "ruleMappingAccess"
    // InternalOptGrammar.g:1050:1: ruleMappingAccess returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '<(' ( (lv_index_2_0= ruleLogicalOperations ) ) otherlv_3= ')>' ) ;
    public final EObject ruleMappingAccess() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_index_2_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:1056:2: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '<(' ( (lv_index_2_0= ruleLogicalOperations ) ) otherlv_3= ')>' ) )
            // InternalOptGrammar.g:1057:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '<(' ( (lv_index_2_0= ruleLogicalOperations ) ) otherlv_3= ')>' )
            {
            // InternalOptGrammar.g:1057:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '<(' ( (lv_index_2_0= ruleLogicalOperations ) ) otherlv_3= ')>' )
            // InternalOptGrammar.g:1058:3: ( (otherlv_0= RULE_ID ) ) otherlv_1= '<(' ( (lv_index_2_0= ruleLogicalOperations ) ) otherlv_3= ')>'
            {
            // InternalOptGrammar.g:1058:3: ( (otherlv_0= RULE_ID ) )
            // InternalOptGrammar.g:1059:4: (otherlv_0= RULE_ID )
            {
            // InternalOptGrammar.g:1059:4: (otherlv_0= RULE_ID )
            // InternalOptGrammar.g:1060:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getMappingAccessRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getMappingAccessAccess().getMapMappingDeclarationCrossReference_0_0());
              				
            }

            }


            }

            otherlv_1=(Token)match(input,30,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMappingAccessAccess().getLessThanSignLeftParenthesisKeyword_1());
              		
            }
            // InternalOptGrammar.g:1075:3: ( (lv_index_2_0= ruleLogicalOperations ) )
            // InternalOptGrammar.g:1076:4: (lv_index_2_0= ruleLogicalOperations )
            {
            // InternalOptGrammar.g:1076:4: (lv_index_2_0= ruleLogicalOperations )
            // InternalOptGrammar.g:1077:5: lv_index_2_0= ruleLogicalOperations
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMappingAccessAccess().getIndexLogicalOperationsParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_26);
            lv_index_2_0=ruleLogicalOperations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMappingAccessRule());
              					}
              					set(
              						current,
              						"index",
              						lv_index_2_0,
              						"org.unicam.myGrammar.OptGrammar.LogicalOperations");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getMappingAccessAccess().getRightParenthesisGreaterThanSignKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingAccess"


    // $ANTLR start "entryRuleArrayAccess"
    // InternalOptGrammar.g:1102:1: entryRuleArrayAccess returns [EObject current=null] : iv_ruleArrayAccess= ruleArrayAccess EOF ;
    public final EObject entryRuleArrayAccess() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayAccess = null;


        try {
            // InternalOptGrammar.g:1102:52: (iv_ruleArrayAccess= ruleArrayAccess EOF )
            // InternalOptGrammar.g:1103:2: iv_ruleArrayAccess= ruleArrayAccess EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayAccessRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayAccess=ruleArrayAccess();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayAccess; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayAccess"


    // $ANTLR start "ruleArrayAccess"
    // InternalOptGrammar.g:1109:1: ruleArrayAccess returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) ( (lv_indexes_1_0= ruleArrayIndex ) )+ (otherlv_2= '.' ( (lv_field_3_0= RULE_ID ) ) )? ) ;
    public final EObject ruleArrayAccess() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_field_3_0=null;
        EObject lv_indexes_1_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:1115:2: ( ( ( (otherlv_0= RULE_ID ) ) ( (lv_indexes_1_0= ruleArrayIndex ) )+ (otherlv_2= '.' ( (lv_field_3_0= RULE_ID ) ) )? ) )
            // InternalOptGrammar.g:1116:2: ( ( (otherlv_0= RULE_ID ) ) ( (lv_indexes_1_0= ruleArrayIndex ) )+ (otherlv_2= '.' ( (lv_field_3_0= RULE_ID ) ) )? )
            {
            // InternalOptGrammar.g:1116:2: ( ( (otherlv_0= RULE_ID ) ) ( (lv_indexes_1_0= ruleArrayIndex ) )+ (otherlv_2= '.' ( (lv_field_3_0= RULE_ID ) ) )? )
            // InternalOptGrammar.g:1117:3: ( (otherlv_0= RULE_ID ) ) ( (lv_indexes_1_0= ruleArrayIndex ) )+ (otherlv_2= '.' ( (lv_field_3_0= RULE_ID ) ) )?
            {
            // InternalOptGrammar.g:1117:3: ( (otherlv_0= RULE_ID ) )
            // InternalOptGrammar.g:1118:4: (otherlv_0= RULE_ID )
            {
            // InternalOptGrammar.g:1118:4: (otherlv_0= RULE_ID )
            // InternalOptGrammar.g:1119:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getArrayAccessRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getArrayAccessAccess().getVariableArrayDefinitionDeclarationCrossReference_0_0());
              				
            }

            }


            }

            // InternalOptGrammar.g:1130:3: ( (lv_indexes_1_0= ruleArrayIndex ) )+
            int cnt25=0;
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( (LA25_0==25) ) {
                    alt25=1;
                }


                switch (alt25) {
            	case 1 :
            	    // InternalOptGrammar.g:1131:4: (lv_indexes_1_0= ruleArrayIndex )
            	    {
            	    // InternalOptGrammar.g:1131:4: (lv_indexes_1_0= ruleArrayIndex )
            	    // InternalOptGrammar.g:1132:5: lv_indexes_1_0= ruleArrayIndex
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getArrayAccessAccess().getIndexesArrayIndexParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_27);
            	    lv_indexes_1_0=ruleArrayIndex();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getArrayAccessRule());
            	      					}
            	      					add(
            	      						current,
            	      						"indexes",
            	      						lv_indexes_1_0,
            	      						"org.unicam.myGrammar.OptGrammar.ArrayIndex");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt25 >= 1 ) break loop25;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(25, input);
                        throw eee;
                }
                cnt25++;
            } while (true);

            // InternalOptGrammar.g:1149:3: (otherlv_2= '.' ( (lv_field_3_0= RULE_ID ) ) )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==32) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalOptGrammar.g:1150:4: otherlv_2= '.' ( (lv_field_3_0= RULE_ID ) )
                    {
                    otherlv_2=(Token)match(input,32,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getArrayAccessAccess().getFullStopKeyword_2_0());
                      			
                    }
                    // InternalOptGrammar.g:1154:4: ( (lv_field_3_0= RULE_ID ) )
                    // InternalOptGrammar.g:1155:5: (lv_field_3_0= RULE_ID )
                    {
                    // InternalOptGrammar.g:1155:5: (lv_field_3_0= RULE_ID )
                    // InternalOptGrammar.g:1156:6: lv_field_3_0= RULE_ID
                    {
                    lv_field_3_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_field_3_0, grammarAccess.getArrayAccessAccess().getFieldIDTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getArrayAccessRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"field",
                      							lv_field_3_0,
                      							"org.eclipse.xtext.common.Terminals.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayAccess"


    // $ANTLR start "entryRuleArrayIndex"
    // InternalOptGrammar.g:1177:1: entryRuleArrayIndex returns [EObject current=null] : iv_ruleArrayIndex= ruleArrayIndex EOF ;
    public final EObject entryRuleArrayIndex() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayIndex = null;


        try {
            // InternalOptGrammar.g:1177:51: (iv_ruleArrayIndex= ruleArrayIndex EOF )
            // InternalOptGrammar.g:1178:2: iv_ruleArrayIndex= ruleArrayIndex EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayIndexRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayIndex=ruleArrayIndex();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayIndex; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayIndex"


    // $ANTLR start "ruleArrayIndex"
    // InternalOptGrammar.g:1184:1: ruleArrayIndex returns [EObject current=null] : (otherlv_0= '[' ( (lv_value_1_0= ruleLogicalOperations ) ) otherlv_2= ']' ) ;
    public final EObject ruleArrayIndex() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_value_1_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:1190:2: ( (otherlv_0= '[' ( (lv_value_1_0= ruleLogicalOperations ) ) otherlv_2= ']' ) )
            // InternalOptGrammar.g:1191:2: (otherlv_0= '[' ( (lv_value_1_0= ruleLogicalOperations ) ) otherlv_2= ']' )
            {
            // InternalOptGrammar.g:1191:2: (otherlv_0= '[' ( (lv_value_1_0= ruleLogicalOperations ) ) otherlv_2= ']' )
            // InternalOptGrammar.g:1192:3: otherlv_0= '[' ( (lv_value_1_0= ruleLogicalOperations ) ) otherlv_2= ']'
            {
            otherlv_0=(Token)match(input,25,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getArrayIndexAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalOptGrammar.g:1196:3: ( (lv_value_1_0= ruleLogicalOperations ) )
            // InternalOptGrammar.g:1197:4: (lv_value_1_0= ruleLogicalOperations )
            {
            // InternalOptGrammar.g:1197:4: (lv_value_1_0= ruleLogicalOperations )
            // InternalOptGrammar.g:1198:5: lv_value_1_0= ruleLogicalOperations
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getArrayIndexAccess().getValueLogicalOperationsParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_23);
            lv_value_1_0=ruleLogicalOperations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getArrayIndexRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.unicam.myGrammar.OptGrammar.LogicalOperations");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getArrayIndexAccess().getRightSquareBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayIndex"


    // $ANTLR start "entryRuleFieldAccess"
    // InternalOptGrammar.g:1223:1: entryRuleFieldAccess returns [EObject current=null] : iv_ruleFieldAccess= ruleFieldAccess EOF ;
    public final EObject entryRuleFieldAccess() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFieldAccess = null;


        try {
            // InternalOptGrammar.g:1223:52: (iv_ruleFieldAccess= ruleFieldAccess EOF )
            // InternalOptGrammar.g:1224:2: iv_ruleFieldAccess= ruleFieldAccess EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFieldAccessRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFieldAccess=ruleFieldAccess();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFieldAccess; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFieldAccess"


    // $ANTLR start "ruleFieldAccess"
    // InternalOptGrammar.g:1230:1: ruleFieldAccess returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '.' ( (lv_field_2_0= RULE_ID ) ) ) ;
    public final EObject ruleFieldAccess() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_field_2_0=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:1236:2: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '.' ( (lv_field_2_0= RULE_ID ) ) ) )
            // InternalOptGrammar.g:1237:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '.' ( (lv_field_2_0= RULE_ID ) ) )
            {
            // InternalOptGrammar.g:1237:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '.' ( (lv_field_2_0= RULE_ID ) ) )
            // InternalOptGrammar.g:1238:3: ( (otherlv_0= RULE_ID ) ) otherlv_1= '.' ( (lv_field_2_0= RULE_ID ) )
            {
            // InternalOptGrammar.g:1238:3: ( (otherlv_0= RULE_ID ) )
            // InternalOptGrammar.g:1239:4: (otherlv_0= RULE_ID )
            {
            // InternalOptGrammar.g:1239:4: (otherlv_0= RULE_ID )
            // InternalOptGrammar.g:1240:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFieldAccessRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getFieldAccessAccess().getRefConcreteStructDeclarationCrossReference_0_0());
              				
            }

            }


            }

            otherlv_1=(Token)match(input,32,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFieldAccessAccess().getFullStopKeyword_1());
              		
            }
            // InternalOptGrammar.g:1255:3: ( (lv_field_2_0= RULE_ID ) )
            // InternalOptGrammar.g:1256:4: (lv_field_2_0= RULE_ID )
            {
            // InternalOptGrammar.g:1256:4: (lv_field_2_0= RULE_ID )
            // InternalOptGrammar.g:1257:5: lv_field_2_0= RULE_ID
            {
            lv_field_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_field_2_0, grammarAccess.getFieldAccessAccess().getFieldIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFieldAccessRule());
              					}
              					setWithLastConsumed(
              						current,
              						"field",
              						lv_field_2_0,
              						"org.eclipse.xtext.common.Terminals.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFieldAccess"


    // $ANTLR start "entryRuleMappingDeclaration"
    // InternalOptGrammar.g:1277:1: entryRuleMappingDeclaration returns [EObject current=null] : iv_ruleMappingDeclaration= ruleMappingDeclaration EOF ;
    public final EObject entryRuleMappingDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingDeclaration = null;


        try {
            // InternalOptGrammar.g:1277:59: (iv_ruleMappingDeclaration= ruleMappingDeclaration EOF )
            // InternalOptGrammar.g:1278:2: iv_ruleMappingDeclaration= ruleMappingDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMappingDeclaration=ruleMappingDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingDeclaration"


    // $ANTLR start "ruleMappingDeclaration"
    // InternalOptGrammar.g:1284:1: ruleMappingDeclaration returns [EObject current=null] : ( ( (lv_location_0_0= ruleMapLocationLiteral ) )? ( (lv_visibility_1_0= ruleVisibilityEnum ) )? ( (lv_unnamedMappingDeclaration_2_0= ruleUnnamedMappingDeclaration ) ) ( (lv_name_3_0= RULE_ID ) ) ) ;
    public final EObject ruleMappingDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_name_3_0=null;
        AntlrDatatypeRuleToken lv_location_0_0 = null;

        EObject lv_visibility_1_0 = null;

        EObject lv_unnamedMappingDeclaration_2_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:1290:2: ( ( ( (lv_location_0_0= ruleMapLocationLiteral ) )? ( (lv_visibility_1_0= ruleVisibilityEnum ) )? ( (lv_unnamedMappingDeclaration_2_0= ruleUnnamedMappingDeclaration ) ) ( (lv_name_3_0= RULE_ID ) ) ) )
            // InternalOptGrammar.g:1291:2: ( ( (lv_location_0_0= ruleMapLocationLiteral ) )? ( (lv_visibility_1_0= ruleVisibilityEnum ) )? ( (lv_unnamedMappingDeclaration_2_0= ruleUnnamedMappingDeclaration ) ) ( (lv_name_3_0= RULE_ID ) ) )
            {
            // InternalOptGrammar.g:1291:2: ( ( (lv_location_0_0= ruleMapLocationLiteral ) )? ( (lv_visibility_1_0= ruleVisibilityEnum ) )? ( (lv_unnamedMappingDeclaration_2_0= ruleUnnamedMappingDeclaration ) ) ( (lv_name_3_0= RULE_ID ) ) )
            // InternalOptGrammar.g:1292:3: ( (lv_location_0_0= ruleMapLocationLiteral ) )? ( (lv_visibility_1_0= ruleVisibilityEnum ) )? ( (lv_unnamedMappingDeclaration_2_0= ruleUnnamedMappingDeclaration ) ) ( (lv_name_3_0= RULE_ID ) )
            {
            // InternalOptGrammar.g:1292:3: ( (lv_location_0_0= ruleMapLocationLiteral ) )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==177) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalOptGrammar.g:1293:4: (lv_location_0_0= ruleMapLocationLiteral )
                    {
                    // InternalOptGrammar.g:1293:4: (lv_location_0_0= ruleMapLocationLiteral )
                    // InternalOptGrammar.g:1294:5: lv_location_0_0= ruleMapLocationLiteral
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMappingDeclarationAccess().getLocationMapLocationLiteralParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_29);
                    lv_location_0_0=ruleMapLocationLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMappingDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"location",
                      						lv_location_0_0,
                      						"org.unicam.myGrammar.OptGrammar.MapLocationLiteral");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalOptGrammar.g:1311:3: ( (lv_visibility_1_0= ruleVisibilityEnum ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( ((LA28_0>=180 && LA28_0<=183)) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalOptGrammar.g:1312:4: (lv_visibility_1_0= ruleVisibilityEnum )
                    {
                    // InternalOptGrammar.g:1312:4: (lv_visibility_1_0= ruleVisibilityEnum )
                    // InternalOptGrammar.g:1313:5: lv_visibility_1_0= ruleVisibilityEnum
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMappingDeclarationAccess().getVisibilityVisibilityEnumParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_29);
                    lv_visibility_1_0=ruleVisibilityEnum();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMappingDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"visibility",
                      						lv_visibility_1_0,
                      						"org.unicam.myGrammar.OptGrammar.VisibilityEnum");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalOptGrammar.g:1330:3: ( (lv_unnamedMappingDeclaration_2_0= ruleUnnamedMappingDeclaration ) )
            // InternalOptGrammar.g:1331:4: (lv_unnamedMappingDeclaration_2_0= ruleUnnamedMappingDeclaration )
            {
            // InternalOptGrammar.g:1331:4: (lv_unnamedMappingDeclaration_2_0= ruleUnnamedMappingDeclaration )
            // InternalOptGrammar.g:1332:5: lv_unnamedMappingDeclaration_2_0= ruleUnnamedMappingDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMappingDeclarationAccess().getUnnamedMappingDeclarationUnnamedMappingDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_4);
            lv_unnamedMappingDeclaration_2_0=ruleUnnamedMappingDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMappingDeclarationRule());
              					}
              					set(
              						current,
              						"unnamedMappingDeclaration",
              						lv_unnamedMappingDeclaration_2_0,
              						"org.unicam.myGrammar.OptGrammar.UnnamedMappingDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalOptGrammar.g:1349:3: ( (lv_name_3_0= RULE_ID ) )
            // InternalOptGrammar.g:1350:4: (lv_name_3_0= RULE_ID )
            {
            // InternalOptGrammar.g:1350:4: (lv_name_3_0= RULE_ID )
            // InternalOptGrammar.g:1351:5: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_3_0, grammarAccess.getMappingDeclarationAccess().getNameIDTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getMappingDeclarationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.eclipse.xtext.common.Terminals.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingDeclaration"


    // $ANTLR start "entryRuleUnnamedMappingDeclaration"
    // InternalOptGrammar.g:1371:1: entryRuleUnnamedMappingDeclaration returns [EObject current=null] : iv_ruleUnnamedMappingDeclaration= ruleUnnamedMappingDeclaration EOF ;
    public final EObject entryRuleUnnamedMappingDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnnamedMappingDeclaration = null;


        try {
            // InternalOptGrammar.g:1371:66: (iv_ruleUnnamedMappingDeclaration= ruleUnnamedMappingDeclaration EOF )
            // InternalOptGrammar.g:1372:2: iv_ruleUnnamedMappingDeclaration= ruleUnnamedMappingDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnnamedMappingDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnnamedMappingDeclaration=ruleUnnamedMappingDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnnamedMappingDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnnamedMappingDeclaration"


    // $ANTLR start "ruleUnnamedMappingDeclaration"
    // InternalOptGrammar.g:1378:1: ruleUnnamedMappingDeclaration returns [EObject current=null] : (otherlv_0= 'mapping' otherlv_1= '(' ( (lv_type_2_0= ruleNamedType ) ) otherlv_3= '=>' ( ( (otherlv_4= RULE_ID ) ) | ( ( (lv_second_5_1= ruleNamedType | lv_second_5_2= ruleUnnamedMappingDeclaration ) ) ) ) ( (lv_array_6_0= '[]' ) )? otherlv_7= ')' ) ;
    public final EObject ruleUnnamedMappingDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token lv_array_6_0=null;
        Token otherlv_7=null;
        EObject lv_type_2_0 = null;

        EObject lv_second_5_1 = null;

        EObject lv_second_5_2 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:1384:2: ( (otherlv_0= 'mapping' otherlv_1= '(' ( (lv_type_2_0= ruleNamedType ) ) otherlv_3= '=>' ( ( (otherlv_4= RULE_ID ) ) | ( ( (lv_second_5_1= ruleNamedType | lv_second_5_2= ruleUnnamedMappingDeclaration ) ) ) ) ( (lv_array_6_0= '[]' ) )? otherlv_7= ')' ) )
            // InternalOptGrammar.g:1385:2: (otherlv_0= 'mapping' otherlv_1= '(' ( (lv_type_2_0= ruleNamedType ) ) otherlv_3= '=>' ( ( (otherlv_4= RULE_ID ) ) | ( ( (lv_second_5_1= ruleNamedType | lv_second_5_2= ruleUnnamedMappingDeclaration ) ) ) ) ( (lv_array_6_0= '[]' ) )? otherlv_7= ')' )
            {
            // InternalOptGrammar.g:1385:2: (otherlv_0= 'mapping' otherlv_1= '(' ( (lv_type_2_0= ruleNamedType ) ) otherlv_3= '=>' ( ( (otherlv_4= RULE_ID ) ) | ( ( (lv_second_5_1= ruleNamedType | lv_second_5_2= ruleUnnamedMappingDeclaration ) ) ) ) ( (lv_array_6_0= '[]' ) )? otherlv_7= ')' )
            // InternalOptGrammar.g:1386:3: otherlv_0= 'mapping' otherlv_1= '(' ( (lv_type_2_0= ruleNamedType ) ) otherlv_3= '=>' ( ( (otherlv_4= RULE_ID ) ) | ( ( (lv_second_5_1= ruleNamedType | lv_second_5_2= ruleUnnamedMappingDeclaration ) ) ) ) ( (lv_array_6_0= '[]' ) )? otherlv_7= ')'
            {
            otherlv_0=(Token)match(input,33,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getUnnamedMappingDeclarationAccess().getMappingKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,34,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getUnnamedMappingDeclarationAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalOptGrammar.g:1394:3: ( (lv_type_2_0= ruleNamedType ) )
            // InternalOptGrammar.g:1395:4: (lv_type_2_0= ruleNamedType )
            {
            // InternalOptGrammar.g:1395:4: (lv_type_2_0= ruleNamedType )
            // InternalOptGrammar.g:1396:5: lv_type_2_0= ruleNamedType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getUnnamedMappingDeclarationAccess().getTypeNamedTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_32);
            lv_type_2_0=ruleNamedType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getUnnamedMappingDeclarationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"org.unicam.myGrammar.OptGrammar.NamedType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,35,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getUnnamedMappingDeclarationAccess().getEqualsSignGreaterThanSignKeyword_3());
              		
            }
            // InternalOptGrammar.g:1417:3: ( ( (otherlv_4= RULE_ID ) ) | ( ( (lv_second_5_1= ruleNamedType | lv_second_5_2= ruleUnnamedMappingDeclaration ) ) ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==RULE_ID) ) {
                alt30=1;
            }
            else if ( ((LA30_0>=28 && LA30_0<=29)||LA30_0==33||(LA30_0>=75 && LA30_0<=176)) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalOptGrammar.g:1418:4: ( (otherlv_4= RULE_ID ) )
                    {
                    // InternalOptGrammar.g:1418:4: ( (otherlv_4= RULE_ID ) )
                    // InternalOptGrammar.g:1419:5: (otherlv_4= RULE_ID )
                    {
                    // InternalOptGrammar.g:1419:5: (otherlv_4= RULE_ID )
                    // InternalOptGrammar.g:1420:6: otherlv_4= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUnnamedMappingDeclarationRule());
                      						}
                      					
                    }
                    otherlv_4=(Token)match(input,RULE_ID,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_4, grammarAccess.getUnnamedMappingDeclarationAccess().getSecondRefDeclarationCrossReference_4_0_0());
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:1432:4: ( ( (lv_second_5_1= ruleNamedType | lv_second_5_2= ruleUnnamedMappingDeclaration ) ) )
                    {
                    // InternalOptGrammar.g:1432:4: ( ( (lv_second_5_1= ruleNamedType | lv_second_5_2= ruleUnnamedMappingDeclaration ) ) )
                    // InternalOptGrammar.g:1433:5: ( (lv_second_5_1= ruleNamedType | lv_second_5_2= ruleUnnamedMappingDeclaration ) )
                    {
                    // InternalOptGrammar.g:1433:5: ( (lv_second_5_1= ruleNamedType | lv_second_5_2= ruleUnnamedMappingDeclaration ) )
                    // InternalOptGrammar.g:1434:6: (lv_second_5_1= ruleNamedType | lv_second_5_2= ruleUnnamedMappingDeclaration )
                    {
                    // InternalOptGrammar.g:1434:6: (lv_second_5_1= ruleNamedType | lv_second_5_2= ruleUnnamedMappingDeclaration )
                    int alt29=2;
                    int LA29_0 = input.LA(1);

                    if ( ((LA29_0>=28 && LA29_0<=29)||(LA29_0>=75 && LA29_0<=176)) ) {
                        alt29=1;
                    }
                    else if ( (LA29_0==33) ) {
                        alt29=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 29, 0, input);

                        throw nvae;
                    }
                    switch (alt29) {
                        case 1 :
                            // InternalOptGrammar.g:1435:7: lv_second_5_1= ruleNamedType
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getUnnamedMappingDeclarationAccess().getSecondNamedTypeParserRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_34);
                            lv_second_5_1=ruleNamedType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getUnnamedMappingDeclarationRule());
                              							}
                              							set(
                              								current,
                              								"second",
                              								lv_second_5_1,
                              								"org.unicam.myGrammar.OptGrammar.NamedType");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalOptGrammar.g:1451:7: lv_second_5_2= ruleUnnamedMappingDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getUnnamedMappingDeclarationAccess().getSecondUnnamedMappingDeclarationParserRuleCall_4_1_0_1());
                              						
                            }
                            pushFollow(FOLLOW_34);
                            lv_second_5_2=ruleUnnamedMappingDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getUnnamedMappingDeclarationRule());
                              							}
                              							set(
                              								current,
                              								"second",
                              								lv_second_5_2,
                              								"org.unicam.myGrammar.OptGrammar.UnnamedMappingDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalOptGrammar.g:1470:3: ( (lv_array_6_0= '[]' ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==24) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalOptGrammar.g:1471:4: (lv_array_6_0= '[]' )
                    {
                    // InternalOptGrammar.g:1471:4: (lv_array_6_0= '[]' )
                    // InternalOptGrammar.g:1472:5: lv_array_6_0= '[]'
                    {
                    lv_array_6_0=(Token)match(input,24,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_array_6_0, grammarAccess.getUnnamedMappingDeclarationAccess().getArrayLeftSquareBracketRightSquareBracketKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getUnnamedMappingDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "array", true, "[]");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getUnnamedMappingDeclarationAccess().getRightParenthesisKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnnamedMappingDeclaration"


    // $ANTLR start "entryRulePrimaryTypeDefinitionDeclaration"
    // InternalOptGrammar.g:1492:1: entryRulePrimaryTypeDefinitionDeclaration returns [EObject current=null] : iv_rulePrimaryTypeDefinitionDeclaration= rulePrimaryTypeDefinitionDeclaration EOF ;
    public final EObject entryRulePrimaryTypeDefinitionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryTypeDefinitionDeclaration = null;


        try {
            // InternalOptGrammar.g:1492:73: (iv_rulePrimaryTypeDefinitionDeclaration= rulePrimaryTypeDefinitionDeclaration EOF )
            // InternalOptGrammar.g:1493:2: iv_rulePrimaryTypeDefinitionDeclaration= rulePrimaryTypeDefinitionDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryTypeDefinitionDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryTypeDefinitionDeclaration=rulePrimaryTypeDefinitionDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryTypeDefinitionDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryTypeDefinitionDeclaration"


    // $ANTLR start "rulePrimaryTypeDefinitionDeclaration"
    // InternalOptGrammar.g:1499:1: rulePrimaryTypeDefinitionDeclaration returns [EObject current=null] : ( (this_PrimaryTypeDeclaration_0= rulePrimaryTypeDeclaration | ( (otherlv_1= RULE_ID ) ) ) ( ( (lv_operator_2_0= ruleOperationAssegnationLiteral ) ) ( ( (lv_value_3_1= ruleLogicalOperations | lv_value_3_2= ruleSingleDefinition ) ) ) )? ) ;
    public final EObject rulePrimaryTypeDefinitionDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_PrimaryTypeDeclaration_0 = null;

        EObject lv_operator_2_0 = null;

        EObject lv_value_3_1 = null;

        EObject lv_value_3_2 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:1505:2: ( ( (this_PrimaryTypeDeclaration_0= rulePrimaryTypeDeclaration | ( (otherlv_1= RULE_ID ) ) ) ( ( (lv_operator_2_0= ruleOperationAssegnationLiteral ) ) ( ( (lv_value_3_1= ruleLogicalOperations | lv_value_3_2= ruleSingleDefinition ) ) ) )? ) )
            // InternalOptGrammar.g:1506:2: ( (this_PrimaryTypeDeclaration_0= rulePrimaryTypeDeclaration | ( (otherlv_1= RULE_ID ) ) ) ( ( (lv_operator_2_0= ruleOperationAssegnationLiteral ) ) ( ( (lv_value_3_1= ruleLogicalOperations | lv_value_3_2= ruleSingleDefinition ) ) ) )? )
            {
            // InternalOptGrammar.g:1506:2: ( (this_PrimaryTypeDeclaration_0= rulePrimaryTypeDeclaration | ( (otherlv_1= RULE_ID ) ) ) ( ( (lv_operator_2_0= ruleOperationAssegnationLiteral ) ) ( ( (lv_value_3_1= ruleLogicalOperations | lv_value_3_2= ruleSingleDefinition ) ) ) )? )
            // InternalOptGrammar.g:1507:3: (this_PrimaryTypeDeclaration_0= rulePrimaryTypeDeclaration | ( (otherlv_1= RULE_ID ) ) ) ( ( (lv_operator_2_0= ruleOperationAssegnationLiteral ) ) ( ( (lv_value_3_1= ruleLogicalOperations | lv_value_3_2= ruleSingleDefinition ) ) ) )?
            {
            // InternalOptGrammar.g:1507:3: (this_PrimaryTypeDeclaration_0= rulePrimaryTypeDeclaration | ( (otherlv_1= RULE_ID ) ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( ((LA32_0>=27 && LA32_0<=29)||(LA32_0>=75 && LA32_0<=183)) ) {
                alt32=1;
            }
            else if ( (LA32_0==RULE_ID) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalOptGrammar.g:1508:4: this_PrimaryTypeDeclaration_0= rulePrimaryTypeDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryTypeDefinitionDeclarationAccess().getPrimaryTypeDeclarationParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_36);
                    this_PrimaryTypeDeclaration_0=rulePrimaryTypeDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_PrimaryTypeDeclaration_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:1517:4: ( (otherlv_1= RULE_ID ) )
                    {
                    // InternalOptGrammar.g:1517:4: ( (otherlv_1= RULE_ID ) )
                    // InternalOptGrammar.g:1518:5: (otherlv_1= RULE_ID )
                    {
                    // InternalOptGrammar.g:1518:5: (otherlv_1= RULE_ID )
                    // InternalOptGrammar.g:1519:6: otherlv_1= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPrimaryTypeDefinitionDeclarationRule());
                      						}
                      					
                    }
                    otherlv_1=(Token)match(input,RULE_ID,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_1, grammarAccess.getPrimaryTypeDefinitionDeclarationAccess().getRefPrimaryTypeDeclarationCrossReference_0_1_0());
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOptGrammar.g:1531:3: ( ( (lv_operator_2_0= ruleOperationAssegnationLiteral ) ) ( ( (lv_value_3_1= ruleLogicalOperations | lv_value_3_2= ruleSingleDefinition ) ) ) )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==23||(LA34_0>=37 && LA34_0<=40)) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalOptGrammar.g:1532:4: ( (lv_operator_2_0= ruleOperationAssegnationLiteral ) ) ( ( (lv_value_3_1= ruleLogicalOperations | lv_value_3_2= ruleSingleDefinition ) ) )
                    {
                    // InternalOptGrammar.g:1532:4: ( (lv_operator_2_0= ruleOperationAssegnationLiteral ) )
                    // InternalOptGrammar.g:1533:5: (lv_operator_2_0= ruleOperationAssegnationLiteral )
                    {
                    // InternalOptGrammar.g:1533:5: (lv_operator_2_0= ruleOperationAssegnationLiteral )
                    // InternalOptGrammar.g:1534:6: lv_operator_2_0= ruleOperationAssegnationLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryTypeDefinitionDeclarationAccess().getOperatorOperationAssegnationLiteralParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_operator_2_0=ruleOperationAssegnationLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryTypeDefinitionDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"org.unicam.myGrammar.OptGrammar.OperationAssegnationLiteral");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalOptGrammar.g:1551:4: ( ( (lv_value_3_1= ruleLogicalOperations | lv_value_3_2= ruleSingleDefinition ) ) )
                    // InternalOptGrammar.g:1552:5: ( (lv_value_3_1= ruleLogicalOperations | lv_value_3_2= ruleSingleDefinition ) )
                    {
                    // InternalOptGrammar.g:1552:5: ( (lv_value_3_1= ruleLogicalOperations | lv_value_3_2= ruleSingleDefinition ) )
                    // InternalOptGrammar.g:1553:6: (lv_value_3_1= ruleLogicalOperations | lv_value_3_2= ruleSingleDefinition )
                    {
                    // InternalOptGrammar.g:1553:6: (lv_value_3_1= ruleLogicalOperations | lv_value_3_2= ruleSingleDefinition )
                    int alt33=2;
                    int LA33_0 = input.LA(1);

                    if ( ((LA33_0>=RULE_INT && LA33_0<=RULE_TX)||(LA33_0>=59 && LA33_0<=60)||(LA33_0>=62 && LA33_0<=69)||LA33_0==74||(LA33_0>=192 && LA33_0<=193)) ) {
                        alt33=1;
                    }
                    else if ( (LA33_0==RULE_ID||(LA33_0>=41 && LA33_0<=42)) ) {
                        alt33=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 33, 0, input);

                        throw nvae;
                    }
                    switch (alt33) {
                        case 1 :
                            // InternalOptGrammar.g:1554:7: lv_value_3_1= ruleLogicalOperations
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getPrimaryTypeDefinitionDeclarationAccess().getValueLogicalOperationsParserRuleCall_1_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_value_3_1=ruleLogicalOperations();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getPrimaryTypeDefinitionDeclarationRule());
                              							}
                              							set(
                              								current,
                              								"value",
                              								lv_value_3_1,
                              								"org.unicam.myGrammar.OptGrammar.LogicalOperations");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalOptGrammar.g:1570:7: lv_value_3_2= ruleSingleDefinition
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getPrimaryTypeDefinitionDeclarationAccess().getValueSingleDefinitionParserRuleCall_1_1_0_1());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_value_3_2=ruleSingleDefinition();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getPrimaryTypeDefinitionDeclarationRule());
                              							}
                              							set(
                              								current,
                              								"value",
                              								lv_value_3_2,
                              								"org.unicam.myGrammar.OptGrammar.SingleDefinition");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryTypeDefinitionDeclaration"


    // $ANTLR start "entryRulePrimaryTypeDeclaration"
    // InternalOptGrammar.g:1593:1: entryRulePrimaryTypeDeclaration returns [EObject current=null] : iv_rulePrimaryTypeDeclaration= rulePrimaryTypeDeclaration EOF ;
    public final EObject entryRulePrimaryTypeDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryTypeDeclaration = null;


        try {
            // InternalOptGrammar.g:1593:63: (iv_rulePrimaryTypeDeclaration= rulePrimaryTypeDeclaration EOF )
            // InternalOptGrammar.g:1594:2: iv_rulePrimaryTypeDeclaration= rulePrimaryTypeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryTypeDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryTypeDeclaration=rulePrimaryTypeDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryTypeDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryTypeDeclaration"


    // $ANTLR start "rulePrimaryTypeDeclaration"
    // InternalOptGrammar.g:1600:1: rulePrimaryTypeDeclaration returns [EObject current=null] : (this_ArrayableDeclaration_0= ruleArrayableDeclaration | this_NonArrayableDeclaration_1= ruleNonArrayableDeclaration ) ;
    public final EObject rulePrimaryTypeDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_ArrayableDeclaration_0 = null;

        EObject this_NonArrayableDeclaration_1 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:1606:2: ( (this_ArrayableDeclaration_0= ruleArrayableDeclaration | this_NonArrayableDeclaration_1= ruleNonArrayableDeclaration ) )
            // InternalOptGrammar.g:1607:2: (this_ArrayableDeclaration_0= ruleArrayableDeclaration | this_NonArrayableDeclaration_1= ruleNonArrayableDeclaration )
            {
            // InternalOptGrammar.g:1607:2: (this_ArrayableDeclaration_0= ruleArrayableDeclaration | this_NonArrayableDeclaration_1= ruleNonArrayableDeclaration )
            int alt35=2;
            alt35 = dfa35.predict(input);
            switch (alt35) {
                case 1 :
                    // InternalOptGrammar.g:1608:3: this_ArrayableDeclaration_0= ruleArrayableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryTypeDeclarationAccess().getArrayableDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayableDeclaration_0=ruleArrayableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ArrayableDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:1617:3: this_NonArrayableDeclaration_1= ruleNonArrayableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryTypeDeclarationAccess().getNonArrayableDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NonArrayableDeclaration_1=ruleNonArrayableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NonArrayableDeclaration_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryTypeDeclaration"


    // $ANTLR start "entryRuleOperationAssegnationLiteral"
    // InternalOptGrammar.g:1629:1: entryRuleOperationAssegnationLiteral returns [EObject current=null] : iv_ruleOperationAssegnationLiteral= ruleOperationAssegnationLiteral EOF ;
    public final EObject entryRuleOperationAssegnationLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOperationAssegnationLiteral = null;


        try {
            // InternalOptGrammar.g:1629:68: (iv_ruleOperationAssegnationLiteral= ruleOperationAssegnationLiteral EOF )
            // InternalOptGrammar.g:1630:2: iv_ruleOperationAssegnationLiteral= ruleOperationAssegnationLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperationAssegnationLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOperationAssegnationLiteral=ruleOperationAssegnationLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOperationAssegnationLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOperationAssegnationLiteral"


    // $ANTLR start "ruleOperationAssegnationLiteral"
    // InternalOptGrammar.g:1636:1: ruleOperationAssegnationLiteral returns [EObject current=null] : ( ( (lv_value_0_1= '=' | lv_value_0_2= '*=' | lv_value_0_3= '+=' | lv_value_0_4= '-=' | lv_value_0_5= '/=' ) ) ) ;
    public final EObject ruleOperationAssegnationLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_1=null;
        Token lv_value_0_2=null;
        Token lv_value_0_3=null;
        Token lv_value_0_4=null;
        Token lv_value_0_5=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:1642:2: ( ( ( (lv_value_0_1= '=' | lv_value_0_2= '*=' | lv_value_0_3= '+=' | lv_value_0_4= '-=' | lv_value_0_5= '/=' ) ) ) )
            // InternalOptGrammar.g:1643:2: ( ( (lv_value_0_1= '=' | lv_value_0_2= '*=' | lv_value_0_3= '+=' | lv_value_0_4= '-=' | lv_value_0_5= '/=' ) ) )
            {
            // InternalOptGrammar.g:1643:2: ( ( (lv_value_0_1= '=' | lv_value_0_2= '*=' | lv_value_0_3= '+=' | lv_value_0_4= '-=' | lv_value_0_5= '/=' ) ) )
            // InternalOptGrammar.g:1644:3: ( (lv_value_0_1= '=' | lv_value_0_2= '*=' | lv_value_0_3= '+=' | lv_value_0_4= '-=' | lv_value_0_5= '/=' ) )
            {
            // InternalOptGrammar.g:1644:3: ( (lv_value_0_1= '=' | lv_value_0_2= '*=' | lv_value_0_3= '+=' | lv_value_0_4= '-=' | lv_value_0_5= '/=' ) )
            // InternalOptGrammar.g:1645:4: (lv_value_0_1= '=' | lv_value_0_2= '*=' | lv_value_0_3= '+=' | lv_value_0_4= '-=' | lv_value_0_5= '/=' )
            {
            // InternalOptGrammar.g:1645:4: (lv_value_0_1= '=' | lv_value_0_2= '*=' | lv_value_0_3= '+=' | lv_value_0_4= '-=' | lv_value_0_5= '/=' )
            int alt36=5;
            switch ( input.LA(1) ) {
            case 23:
                {
                alt36=1;
                }
                break;
            case 37:
                {
                alt36=2;
                }
                break;
            case 38:
                {
                alt36=3;
                }
                break;
            case 39:
                {
                alt36=4;
                }
                break;
            case 40:
                {
                alt36=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }

            switch (alt36) {
                case 1 :
                    // InternalOptGrammar.g:1646:5: lv_value_0_1= '='
                    {
                    lv_value_0_1=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_value_0_1, grammarAccess.getOperationAssegnationLiteralAccess().getValueEqualsSignKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOperationAssegnationLiteralRule());
                      					}
                      					setWithLastConsumed(current, "value", lv_value_0_1, null);
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:1657:5: lv_value_0_2= '*='
                    {
                    lv_value_0_2=(Token)match(input,37,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_value_0_2, grammarAccess.getOperationAssegnationLiteralAccess().getValueAsteriskEqualsSignKeyword_0_1());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOperationAssegnationLiteralRule());
                      					}
                      					setWithLastConsumed(current, "value", lv_value_0_2, null);
                      				
                    }

                    }
                    break;
                case 3 :
                    // InternalOptGrammar.g:1668:5: lv_value_0_3= '+='
                    {
                    lv_value_0_3=(Token)match(input,38,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_value_0_3, grammarAccess.getOperationAssegnationLiteralAccess().getValuePlusSignEqualsSignKeyword_0_2());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOperationAssegnationLiteralRule());
                      					}
                      					setWithLastConsumed(current, "value", lv_value_0_3, null);
                      				
                    }

                    }
                    break;
                case 4 :
                    // InternalOptGrammar.g:1679:5: lv_value_0_4= '-='
                    {
                    lv_value_0_4=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_value_0_4, grammarAccess.getOperationAssegnationLiteralAccess().getValueHyphenMinusEqualsSignKeyword_0_3());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOperationAssegnationLiteralRule());
                      					}
                      					setWithLastConsumed(current, "value", lv_value_0_4, null);
                      				
                    }

                    }
                    break;
                case 5 :
                    // InternalOptGrammar.g:1690:5: lv_value_0_5= '/='
                    {
                    lv_value_0_5=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_value_0_5, grammarAccess.getOperationAssegnationLiteralAccess().getValueSolidusEqualsSignKeyword_0_4());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOperationAssegnationLiteralRule());
                      					}
                      					setWithLastConsumed(current, "value", lv_value_0_5, null);
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOperationAssegnationLiteral"


    // $ANTLR start "entryRuleSingleDefinition"
    // InternalOptGrammar.g:1706:1: entryRuleSingleDefinition returns [EObject current=null] : iv_ruleSingleDefinition= ruleSingleDefinition EOF ;
    public final EObject entryRuleSingleDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSingleDefinition = null;


        try {
            // InternalOptGrammar.g:1706:57: (iv_ruleSingleDefinition= ruleSingleDefinition EOF )
            // InternalOptGrammar.g:1707:2: iv_ruleSingleDefinition= ruleSingleDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSingleDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSingleDefinition=ruleSingleDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSingleDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSingleDefinition"


    // $ANTLR start "ruleSingleDefinition"
    // InternalOptGrammar.g:1713:1: ruleSingleDefinition returns [EObject current=null] : ( ( ( ( (lv_first_0_1= '++' | lv_first_0_2= '--' ) ) ) ( (otherlv_1= RULE_ID ) ) ) | ( ( (otherlv_2= RULE_ID ) ) ( ( (lv_second_3_1= '++' | lv_second_3_2= '--' ) ) ) ) ) ;
    public final EObject ruleSingleDefinition() throws RecognitionException {
        EObject current = null;

        Token lv_first_0_1=null;
        Token lv_first_0_2=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_second_3_1=null;
        Token lv_second_3_2=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:1719:2: ( ( ( ( ( (lv_first_0_1= '++' | lv_first_0_2= '--' ) ) ) ( (otherlv_1= RULE_ID ) ) ) | ( ( (otherlv_2= RULE_ID ) ) ( ( (lv_second_3_1= '++' | lv_second_3_2= '--' ) ) ) ) ) )
            // InternalOptGrammar.g:1720:2: ( ( ( ( (lv_first_0_1= '++' | lv_first_0_2= '--' ) ) ) ( (otherlv_1= RULE_ID ) ) ) | ( ( (otherlv_2= RULE_ID ) ) ( ( (lv_second_3_1= '++' | lv_second_3_2= '--' ) ) ) ) )
            {
            // InternalOptGrammar.g:1720:2: ( ( ( ( (lv_first_0_1= '++' | lv_first_0_2= '--' ) ) ) ( (otherlv_1= RULE_ID ) ) ) | ( ( (otherlv_2= RULE_ID ) ) ( ( (lv_second_3_1= '++' | lv_second_3_2= '--' ) ) ) ) )
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( ((LA39_0>=41 && LA39_0<=42)) ) {
                alt39=1;
            }
            else if ( (LA39_0==RULE_ID) ) {
                alt39=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }
            switch (alt39) {
                case 1 :
                    // InternalOptGrammar.g:1721:3: ( ( ( (lv_first_0_1= '++' | lv_first_0_2= '--' ) ) ) ( (otherlv_1= RULE_ID ) ) )
                    {
                    // InternalOptGrammar.g:1721:3: ( ( ( (lv_first_0_1= '++' | lv_first_0_2= '--' ) ) ) ( (otherlv_1= RULE_ID ) ) )
                    // InternalOptGrammar.g:1722:4: ( ( (lv_first_0_1= '++' | lv_first_0_2= '--' ) ) ) ( (otherlv_1= RULE_ID ) )
                    {
                    // InternalOptGrammar.g:1722:4: ( ( (lv_first_0_1= '++' | lv_first_0_2= '--' ) ) )
                    // InternalOptGrammar.g:1723:5: ( (lv_first_0_1= '++' | lv_first_0_2= '--' ) )
                    {
                    // InternalOptGrammar.g:1723:5: ( (lv_first_0_1= '++' | lv_first_0_2= '--' ) )
                    // InternalOptGrammar.g:1724:6: (lv_first_0_1= '++' | lv_first_0_2= '--' )
                    {
                    // InternalOptGrammar.g:1724:6: (lv_first_0_1= '++' | lv_first_0_2= '--' )
                    int alt37=2;
                    int LA37_0 = input.LA(1);

                    if ( (LA37_0==41) ) {
                        alt37=1;
                    }
                    else if ( (LA37_0==42) ) {
                        alt37=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 37, 0, input);

                        throw nvae;
                    }
                    switch (alt37) {
                        case 1 :
                            // InternalOptGrammar.g:1725:7: lv_first_0_1= '++'
                            {
                            lv_first_0_1=(Token)match(input,41,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_first_0_1, grammarAccess.getSingleDefinitionAccess().getFirstPlusSignPlusSignKeyword_0_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSingleDefinitionRule());
                              							}
                              							setWithLastConsumed(current, "first", lv_first_0_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalOptGrammar.g:1736:7: lv_first_0_2= '--'
                            {
                            lv_first_0_2=(Token)match(input,42,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_first_0_2, grammarAccess.getSingleDefinitionAccess().getFirstHyphenMinusHyphenMinusKeyword_0_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSingleDefinitionRule());
                              							}
                              							setWithLastConsumed(current, "first", lv_first_0_2, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalOptGrammar.g:1749:4: ( (otherlv_1= RULE_ID ) )
                    // InternalOptGrammar.g:1750:5: (otherlv_1= RULE_ID )
                    {
                    // InternalOptGrammar.g:1750:5: (otherlv_1= RULE_ID )
                    // InternalOptGrammar.g:1751:6: otherlv_1= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSingleDefinitionRule());
                      						}
                      					
                    }
                    otherlv_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_1, grammarAccess.getSingleDefinitionAccess().getNamePrimaryTypeDeclarationCrossReference_0_1_0());
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:1764:3: ( ( (otherlv_2= RULE_ID ) ) ( ( (lv_second_3_1= '++' | lv_second_3_2= '--' ) ) ) )
                    {
                    // InternalOptGrammar.g:1764:3: ( ( (otherlv_2= RULE_ID ) ) ( ( (lv_second_3_1= '++' | lv_second_3_2= '--' ) ) ) )
                    // InternalOptGrammar.g:1765:4: ( (otherlv_2= RULE_ID ) ) ( ( (lv_second_3_1= '++' | lv_second_3_2= '--' ) ) )
                    {
                    // InternalOptGrammar.g:1765:4: ( (otherlv_2= RULE_ID ) )
                    // InternalOptGrammar.g:1766:5: (otherlv_2= RULE_ID )
                    {
                    // InternalOptGrammar.g:1766:5: (otherlv_2= RULE_ID )
                    // InternalOptGrammar.g:1767:6: otherlv_2= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSingleDefinitionRule());
                      						}
                      					
                    }
                    otherlv_2=(Token)match(input,RULE_ID,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_2, grammarAccess.getSingleDefinitionAccess().getNamePrimaryTypeDeclarationCrossReference_1_0_0());
                      					
                    }

                    }


                    }

                    // InternalOptGrammar.g:1778:4: ( ( (lv_second_3_1= '++' | lv_second_3_2= '--' ) ) )
                    // InternalOptGrammar.g:1779:5: ( (lv_second_3_1= '++' | lv_second_3_2= '--' ) )
                    {
                    // InternalOptGrammar.g:1779:5: ( (lv_second_3_1= '++' | lv_second_3_2= '--' ) )
                    // InternalOptGrammar.g:1780:6: (lv_second_3_1= '++' | lv_second_3_2= '--' )
                    {
                    // InternalOptGrammar.g:1780:6: (lv_second_3_1= '++' | lv_second_3_2= '--' )
                    int alt38=2;
                    int LA38_0 = input.LA(1);

                    if ( (LA38_0==41) ) {
                        alt38=1;
                    }
                    else if ( (LA38_0==42) ) {
                        alt38=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 38, 0, input);

                        throw nvae;
                    }
                    switch (alt38) {
                        case 1 :
                            // InternalOptGrammar.g:1781:7: lv_second_3_1= '++'
                            {
                            lv_second_3_1=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_second_3_1, grammarAccess.getSingleDefinitionAccess().getSecondPlusSignPlusSignKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSingleDefinitionRule());
                              							}
                              							setWithLastConsumed(current, "second", lv_second_3_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalOptGrammar.g:1792:7: lv_second_3_2= '--'
                            {
                            lv_second_3_2=(Token)match(input,42,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_second_3_2, grammarAccess.getSingleDefinitionAccess().getSecondHyphenMinusHyphenMinusKeyword_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSingleDefinitionRule());
                              							}
                              							setWithLastConsumed(current, "second", lv_second_3_2, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSingleDefinition"


    // $ANTLR start "entryRuleNonArrayableDeclaration"
    // InternalOptGrammar.g:1810:1: entryRuleNonArrayableDeclaration returns [EObject current=null] : iv_ruleNonArrayableDeclaration= ruleNonArrayableDeclaration EOF ;
    public final EObject entryRuleNonArrayableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNonArrayableDeclaration = null;


        try {
            // InternalOptGrammar.g:1810:64: (iv_ruleNonArrayableDeclaration= ruleNonArrayableDeclaration EOF )
            // InternalOptGrammar.g:1811:2: iv_ruleNonArrayableDeclaration= ruleNonArrayableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNonArrayableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNonArrayableDeclaration=ruleNonArrayableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNonArrayableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNonArrayableDeclaration"


    // $ANTLR start "ruleNonArrayableDeclaration"
    // InternalOptGrammar.g:1817:1: ruleNonArrayableDeclaration returns [EObject current=null] : ( ( (lv_location_0_0= ruleLocationSpecifierEnum ) )? ( (lv_constant_1_0= 'constant' ) )? ( (lv_visibility_2_0= ruleVisibilityEnum ) )? ( (lv_type_3_0= ruleSimpleTypeDeclaration ) ) ( (lv_name_4_0= RULE_ID ) ) ) ;
    public final EObject ruleNonArrayableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_constant_1_0=null;
        Token lv_name_4_0=null;
        EObject lv_location_0_0 = null;

        EObject lv_visibility_2_0 = null;

        EObject lv_type_3_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:1823:2: ( ( ( (lv_location_0_0= ruleLocationSpecifierEnum ) )? ( (lv_constant_1_0= 'constant' ) )? ( (lv_visibility_2_0= ruleVisibilityEnum ) )? ( (lv_type_3_0= ruleSimpleTypeDeclaration ) ) ( (lv_name_4_0= RULE_ID ) ) ) )
            // InternalOptGrammar.g:1824:2: ( ( (lv_location_0_0= ruleLocationSpecifierEnum ) )? ( (lv_constant_1_0= 'constant' ) )? ( (lv_visibility_2_0= ruleVisibilityEnum ) )? ( (lv_type_3_0= ruleSimpleTypeDeclaration ) ) ( (lv_name_4_0= RULE_ID ) ) )
            {
            // InternalOptGrammar.g:1824:2: ( ( (lv_location_0_0= ruleLocationSpecifierEnum ) )? ( (lv_constant_1_0= 'constant' ) )? ( (lv_visibility_2_0= ruleVisibilityEnum ) )? ( (lv_type_3_0= ruleSimpleTypeDeclaration ) ) ( (lv_name_4_0= RULE_ID ) ) )
            // InternalOptGrammar.g:1825:3: ( (lv_location_0_0= ruleLocationSpecifierEnum ) )? ( (lv_constant_1_0= 'constant' ) )? ( (lv_visibility_2_0= ruleVisibilityEnum ) )? ( (lv_type_3_0= ruleSimpleTypeDeclaration ) ) ( (lv_name_4_0= RULE_ID ) )
            {
            // InternalOptGrammar.g:1825:3: ( (lv_location_0_0= ruleLocationSpecifierEnum ) )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( ((LA40_0>=177 && LA40_0<=179)) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalOptGrammar.g:1826:4: (lv_location_0_0= ruleLocationSpecifierEnum )
                    {
                    // InternalOptGrammar.g:1826:4: (lv_location_0_0= ruleLocationSpecifierEnum )
                    // InternalOptGrammar.g:1827:5: lv_location_0_0= ruleLocationSpecifierEnum
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getNonArrayableDeclarationAccess().getLocationLocationSpecifierEnumParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_39);
                    lv_location_0_0=ruleLocationSpecifierEnum();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getNonArrayableDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"location",
                      						lv_location_0_0,
                      						"org.unicam.myGrammar.OptGrammar.LocationSpecifierEnum");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalOptGrammar.g:1844:3: ( (lv_constant_1_0= 'constant' ) )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==27) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalOptGrammar.g:1845:4: (lv_constant_1_0= 'constant' )
                    {
                    // InternalOptGrammar.g:1845:4: (lv_constant_1_0= 'constant' )
                    // InternalOptGrammar.g:1846:5: lv_constant_1_0= 'constant'
                    {
                    lv_constant_1_0=(Token)match(input,27,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_constant_1_0, grammarAccess.getNonArrayableDeclarationAccess().getConstantConstantKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getNonArrayableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "constant", true, "constant");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalOptGrammar.g:1858:3: ( (lv_visibility_2_0= ruleVisibilityEnum ) )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( ((LA42_0>=180 && LA42_0<=183)) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalOptGrammar.g:1859:4: (lv_visibility_2_0= ruleVisibilityEnum )
                    {
                    // InternalOptGrammar.g:1859:4: (lv_visibility_2_0= ruleVisibilityEnum )
                    // InternalOptGrammar.g:1860:5: lv_visibility_2_0= ruleVisibilityEnum
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getNonArrayableDeclarationAccess().getVisibilityVisibilityEnumParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_41);
                    lv_visibility_2_0=ruleVisibilityEnum();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getNonArrayableDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"visibility",
                      						lv_visibility_2_0,
                      						"org.unicam.myGrammar.OptGrammar.VisibilityEnum");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalOptGrammar.g:1877:3: ( (lv_type_3_0= ruleSimpleTypeDeclaration ) )
            // InternalOptGrammar.g:1878:4: (lv_type_3_0= ruleSimpleTypeDeclaration )
            {
            // InternalOptGrammar.g:1878:4: (lv_type_3_0= ruleSimpleTypeDeclaration )
            // InternalOptGrammar.g:1879:5: lv_type_3_0= ruleSimpleTypeDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNonArrayableDeclarationAccess().getTypeSimpleTypeDeclarationParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_4);
            lv_type_3_0=ruleSimpleTypeDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNonArrayableDeclarationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"org.unicam.myGrammar.OptGrammar.SimpleTypeDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalOptGrammar.g:1896:3: ( (lv_name_4_0= RULE_ID ) )
            // InternalOptGrammar.g:1897:4: (lv_name_4_0= RULE_ID )
            {
            // InternalOptGrammar.g:1897:4: (lv_name_4_0= RULE_ID )
            // InternalOptGrammar.g:1898:5: lv_name_4_0= RULE_ID
            {
            lv_name_4_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_4_0, grammarAccess.getNonArrayableDeclarationAccess().getNameIDTerminalRuleCall_4_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getNonArrayableDeclarationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_4_0,
              						"org.eclipse.xtext.common.Terminals.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNonArrayableDeclaration"


    // $ANTLR start "entryRuleArrayableDeclaration"
    // InternalOptGrammar.g:1918:1: entryRuleArrayableDeclaration returns [EObject current=null] : iv_ruleArrayableDeclaration= ruleArrayableDeclaration EOF ;
    public final EObject entryRuleArrayableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayableDeclaration = null;


        try {
            // InternalOptGrammar.g:1918:61: (iv_ruleArrayableDeclaration= ruleArrayableDeclaration EOF )
            // InternalOptGrammar.g:1919:2: iv_ruleArrayableDeclaration= ruleArrayableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayableDeclaration=ruleArrayableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayableDeclaration"


    // $ANTLR start "ruleArrayableDeclaration"
    // InternalOptGrammar.g:1925:1: ruleArrayableDeclaration returns [EObject current=null] : ( ( (lv_constant_0_0= 'constant' ) )? ( (lv_visibility_1_0= ruleVisibilityEnum ) )? ( (lv_type_2_0= ruleElementaryTypeNameEnum ) ) ( (lv_name_3_0= RULE_ID ) ) ) ;
    public final EObject ruleArrayableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_constant_0_0=null;
        Token lv_name_3_0=null;
        EObject lv_visibility_1_0 = null;

        EObject lv_type_2_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:1931:2: ( ( ( (lv_constant_0_0= 'constant' ) )? ( (lv_visibility_1_0= ruleVisibilityEnum ) )? ( (lv_type_2_0= ruleElementaryTypeNameEnum ) ) ( (lv_name_3_0= RULE_ID ) ) ) )
            // InternalOptGrammar.g:1932:2: ( ( (lv_constant_0_0= 'constant' ) )? ( (lv_visibility_1_0= ruleVisibilityEnum ) )? ( (lv_type_2_0= ruleElementaryTypeNameEnum ) ) ( (lv_name_3_0= RULE_ID ) ) )
            {
            // InternalOptGrammar.g:1932:2: ( ( (lv_constant_0_0= 'constant' ) )? ( (lv_visibility_1_0= ruleVisibilityEnum ) )? ( (lv_type_2_0= ruleElementaryTypeNameEnum ) ) ( (lv_name_3_0= RULE_ID ) ) )
            // InternalOptGrammar.g:1933:3: ( (lv_constant_0_0= 'constant' ) )? ( (lv_visibility_1_0= ruleVisibilityEnum ) )? ( (lv_type_2_0= ruleElementaryTypeNameEnum ) ) ( (lv_name_3_0= RULE_ID ) )
            {
            // InternalOptGrammar.g:1933:3: ( (lv_constant_0_0= 'constant' ) )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==27) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalOptGrammar.g:1934:4: (lv_constant_0_0= 'constant' )
                    {
                    // InternalOptGrammar.g:1934:4: (lv_constant_0_0= 'constant' )
                    // InternalOptGrammar.g:1935:5: lv_constant_0_0= 'constant'
                    {
                    lv_constant_0_0=(Token)match(input,27,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_constant_0_0, grammarAccess.getArrayableDeclarationAccess().getConstantConstantKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getArrayableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "constant", true, "constant");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalOptGrammar.g:1947:3: ( (lv_visibility_1_0= ruleVisibilityEnum ) )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( ((LA44_0>=180 && LA44_0<=183)) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalOptGrammar.g:1948:4: (lv_visibility_1_0= ruleVisibilityEnum )
                    {
                    // InternalOptGrammar.g:1948:4: (lv_visibility_1_0= ruleVisibilityEnum )
                    // InternalOptGrammar.g:1949:5: lv_visibility_1_0= ruleVisibilityEnum
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getArrayableDeclarationAccess().getVisibilityVisibilityEnumParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_31);
                    lv_visibility_1_0=ruleVisibilityEnum();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getArrayableDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"visibility",
                      						lv_visibility_1_0,
                      						"org.unicam.myGrammar.OptGrammar.VisibilityEnum");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalOptGrammar.g:1966:3: ( (lv_type_2_0= ruleElementaryTypeNameEnum ) )
            // InternalOptGrammar.g:1967:4: (lv_type_2_0= ruleElementaryTypeNameEnum )
            {
            // InternalOptGrammar.g:1967:4: (lv_type_2_0= ruleElementaryTypeNameEnum )
            // InternalOptGrammar.g:1968:5: lv_type_2_0= ruleElementaryTypeNameEnum
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getArrayableDeclarationAccess().getTypeElementaryTypeNameEnumParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_4);
            lv_type_2_0=ruleElementaryTypeNameEnum();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getArrayableDeclarationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"org.unicam.myGrammar.OptGrammar.ElementaryTypeNameEnum");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalOptGrammar.g:1985:3: ( (lv_name_3_0= RULE_ID ) )
            // InternalOptGrammar.g:1986:4: (lv_name_3_0= RULE_ID )
            {
            // InternalOptGrammar.g:1986:4: (lv_name_3_0= RULE_ID )
            // InternalOptGrammar.g:1987:5: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_3_0, grammarAccess.getArrayableDeclarationAccess().getNameIDTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getArrayableDeclarationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.eclipse.xtext.common.Terminals.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayableDeclaration"


    // $ANTLR start "entryRuleConcreteStructureDefinitionDeclaration"
    // InternalOptGrammar.g:2007:1: entryRuleConcreteStructureDefinitionDeclaration returns [EObject current=null] : iv_ruleConcreteStructureDefinitionDeclaration= ruleConcreteStructureDefinitionDeclaration EOF ;
    public final EObject entryRuleConcreteStructureDefinitionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConcreteStructureDefinitionDeclaration = null;


        try {
            // InternalOptGrammar.g:2007:79: (iv_ruleConcreteStructureDefinitionDeclaration= ruleConcreteStructureDefinitionDeclaration EOF )
            // InternalOptGrammar.g:2008:2: iv_ruleConcreteStructureDefinitionDeclaration= ruleConcreteStructureDefinitionDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConcreteStructureDefinitionDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConcreteStructureDefinitionDeclaration=ruleConcreteStructureDefinitionDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConcreteStructureDefinitionDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConcreteStructureDefinitionDeclaration"


    // $ANTLR start "ruleConcreteStructureDefinitionDeclaration"
    // InternalOptGrammar.g:2014:1: ruleConcreteStructureDefinitionDeclaration returns [EObject current=null] : (otherlv_0= 'struct' (this_ConcreteStructDeclaration_1= ruleConcreteStructDeclaration | ( (otherlv_2= RULE_ID ) ) ) (otherlv_3= '=' ( (otherlv_4= '{' ( (lv_couples_5_0= ruleStructureFieldValue ) ) (otherlv_6= ',' ( (lv_couples_7_0= ruleStructureFieldValue ) ) )* otherlv_8= '}' ) | ( (otherlv_9= RULE_ID ) ) | ( (lv_arrayAccessRef_10_0= ruleArrayAccess ) ) ) )? ) ;
    public final EObject ruleConcreteStructureDefinitionDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        EObject this_ConcreteStructDeclaration_1 = null;

        EObject lv_couples_5_0 = null;

        EObject lv_couples_7_0 = null;

        EObject lv_arrayAccessRef_10_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:2020:2: ( (otherlv_0= 'struct' (this_ConcreteStructDeclaration_1= ruleConcreteStructDeclaration | ( (otherlv_2= RULE_ID ) ) ) (otherlv_3= '=' ( (otherlv_4= '{' ( (lv_couples_5_0= ruleStructureFieldValue ) ) (otherlv_6= ',' ( (lv_couples_7_0= ruleStructureFieldValue ) ) )* otherlv_8= '}' ) | ( (otherlv_9= RULE_ID ) ) | ( (lv_arrayAccessRef_10_0= ruleArrayAccess ) ) ) )? ) )
            // InternalOptGrammar.g:2021:2: (otherlv_0= 'struct' (this_ConcreteStructDeclaration_1= ruleConcreteStructDeclaration | ( (otherlv_2= RULE_ID ) ) ) (otherlv_3= '=' ( (otherlv_4= '{' ( (lv_couples_5_0= ruleStructureFieldValue ) ) (otherlv_6= ',' ( (lv_couples_7_0= ruleStructureFieldValue ) ) )* otherlv_8= '}' ) | ( (otherlv_9= RULE_ID ) ) | ( (lv_arrayAccessRef_10_0= ruleArrayAccess ) ) ) )? )
            {
            // InternalOptGrammar.g:2021:2: (otherlv_0= 'struct' (this_ConcreteStructDeclaration_1= ruleConcreteStructDeclaration | ( (otherlv_2= RULE_ID ) ) ) (otherlv_3= '=' ( (otherlv_4= '{' ( (lv_couples_5_0= ruleStructureFieldValue ) ) (otherlv_6= ',' ( (lv_couples_7_0= ruleStructureFieldValue ) ) )* otherlv_8= '}' ) | ( (otherlv_9= RULE_ID ) ) | ( (lv_arrayAccessRef_10_0= ruleArrayAccess ) ) ) )? )
            // InternalOptGrammar.g:2022:3: otherlv_0= 'struct' (this_ConcreteStructDeclaration_1= ruleConcreteStructDeclaration | ( (otherlv_2= RULE_ID ) ) ) (otherlv_3= '=' ( (otherlv_4= '{' ( (lv_couples_5_0= ruleStructureFieldValue ) ) (otherlv_6= ',' ( (lv_couples_7_0= ruleStructureFieldValue ) ) )* otherlv_8= '}' ) | ( (otherlv_9= RULE_ID ) ) | ( (lv_arrayAccessRef_10_0= ruleArrayAccess ) ) ) )?
            {
            otherlv_0=(Token)match(input,20,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getConcreteStructureDefinitionDeclarationAccess().getStructKeyword_0());
              		
            }
            // InternalOptGrammar.g:2026:3: (this_ConcreteStructDeclaration_1= ruleConcreteStructDeclaration | ( (otherlv_2= RULE_ID ) ) )
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==27||(LA45_0>=177 && LA45_0<=179)) ) {
                alt45=1;
            }
            else if ( (LA45_0==RULE_ID) ) {
                int LA45_2 = input.LA(2);

                if ( (LA45_2==RULE_ID) ) {
                    alt45=1;
                }
                else if ( (LA45_2==EOF||LA45_2==18||(LA45_2>=22 && LA45_2<=23)||LA45_2==36) ) {
                    alt45=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }
            switch (alt45) {
                case 1 :
                    // InternalOptGrammar.g:2027:4: this_ConcreteStructDeclaration_1= ruleConcreteStructDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getConcreteStructureDefinitionDeclarationAccess().getConcreteStructDeclarationParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_12);
                    this_ConcreteStructDeclaration_1=ruleConcreteStructDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ConcreteStructDeclaration_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:2036:4: ( (otherlv_2= RULE_ID ) )
                    {
                    // InternalOptGrammar.g:2036:4: ( (otherlv_2= RULE_ID ) )
                    // InternalOptGrammar.g:2037:5: (otherlv_2= RULE_ID )
                    {
                    // InternalOptGrammar.g:2037:5: (otherlv_2= RULE_ID )
                    // InternalOptGrammar.g:2038:6: otherlv_2= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConcreteStructureDefinitionDeclarationRule());
                      						}
                      					
                    }
                    otherlv_2=(Token)match(input,RULE_ID,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_2, grammarAccess.getConcreteStructureDefinitionDeclarationAccess().getRefConcreteStructDeclarationCrossReference_1_1_0());
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOptGrammar.g:2050:3: (otherlv_3= '=' ( (otherlv_4= '{' ( (lv_couples_5_0= ruleStructureFieldValue ) ) (otherlv_6= ',' ( (lv_couples_7_0= ruleStructureFieldValue ) ) )* otherlv_8= '}' ) | ( (otherlv_9= RULE_ID ) ) | ( (lv_arrayAccessRef_10_0= ruleArrayAccess ) ) ) )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==23) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalOptGrammar.g:2051:4: otherlv_3= '=' ( (otherlv_4= '{' ( (lv_couples_5_0= ruleStructureFieldValue ) ) (otherlv_6= ',' ( (lv_couples_7_0= ruleStructureFieldValue ) ) )* otherlv_8= '}' ) | ( (otherlv_9= RULE_ID ) ) | ( (lv_arrayAccessRef_10_0= ruleArrayAccess ) ) )
                    {
                    otherlv_3=(Token)match(input,23,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getConcreteStructureDefinitionDeclarationAccess().getEqualsSignKeyword_2_0());
                      			
                    }
                    // InternalOptGrammar.g:2055:4: ( (otherlv_4= '{' ( (lv_couples_5_0= ruleStructureFieldValue ) ) (otherlv_6= ',' ( (lv_couples_7_0= ruleStructureFieldValue ) ) )* otherlv_8= '}' ) | ( (otherlv_9= RULE_ID ) ) | ( (lv_arrayAccessRef_10_0= ruleArrayAccess ) ) )
                    int alt47=3;
                    int LA47_0 = input.LA(1);

                    if ( (LA47_0==17) ) {
                        alt47=1;
                    }
                    else if ( (LA47_0==RULE_ID) ) {
                        int LA47_2 = input.LA(2);

                        if ( (LA47_2==25) ) {
                            alt47=3;
                        }
                        else if ( (LA47_2==EOF||LA47_2==18||LA47_2==22||LA47_2==36) ) {
                            alt47=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 47, 2, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 47, 0, input);

                        throw nvae;
                    }
                    switch (alt47) {
                        case 1 :
                            // InternalOptGrammar.g:2056:5: (otherlv_4= '{' ( (lv_couples_5_0= ruleStructureFieldValue ) ) (otherlv_6= ',' ( (lv_couples_7_0= ruleStructureFieldValue ) ) )* otherlv_8= '}' )
                            {
                            // InternalOptGrammar.g:2056:5: (otherlv_4= '{' ( (lv_couples_5_0= ruleStructureFieldValue ) ) (otherlv_6= ',' ( (lv_couples_7_0= ruleStructureFieldValue ) ) )* otherlv_8= '}' )
                            // InternalOptGrammar.g:2057:6: otherlv_4= '{' ( (lv_couples_5_0= ruleStructureFieldValue ) ) (otherlv_6= ',' ( (lv_couples_7_0= ruleStructureFieldValue ) ) )* otherlv_8= '}'
                            {
                            otherlv_4=(Token)match(input,17,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_4, grammarAccess.getConcreteStructureDefinitionDeclarationAccess().getLeftCurlyBracketKeyword_2_1_0_0());
                              					
                            }
                            // InternalOptGrammar.g:2061:6: ( (lv_couples_5_0= ruleStructureFieldValue ) )
                            // InternalOptGrammar.g:2062:7: (lv_couples_5_0= ruleStructureFieldValue )
                            {
                            // InternalOptGrammar.g:2062:7: (lv_couples_5_0= ruleStructureFieldValue )
                            // InternalOptGrammar.g:2063:8: lv_couples_5_0= ruleStructureFieldValue
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getConcreteStructureDefinitionDeclarationAccess().getCouplesStructureFieldValueParserRuleCall_2_1_0_1_0());
                              							
                            }
                            pushFollow(FOLLOW_11);
                            lv_couples_5_0=ruleStructureFieldValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getConcreteStructureDefinitionDeclarationRule());
                              								}
                              								add(
                              									current,
                              									"couples",
                              									lv_couples_5_0,
                              									"org.unicam.myGrammar.OptGrammar.StructureFieldValue");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalOptGrammar.g:2080:6: (otherlv_6= ',' ( (lv_couples_7_0= ruleStructureFieldValue ) ) )*
                            loop46:
                            do {
                                int alt46=2;
                                int LA46_0 = input.LA(1);

                                if ( (LA46_0==22) ) {
                                    alt46=1;
                                }


                                switch (alt46) {
                            	case 1 :
                            	    // InternalOptGrammar.g:2081:7: otherlv_6= ',' ( (lv_couples_7_0= ruleStructureFieldValue ) )
                            	    {
                            	    otherlv_6=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_6, grammarAccess.getConcreteStructureDefinitionDeclarationAccess().getCommaKeyword_2_1_0_2_0());
                            	      						
                            	    }
                            	    // InternalOptGrammar.g:2085:7: ( (lv_couples_7_0= ruleStructureFieldValue ) )
                            	    // InternalOptGrammar.g:2086:8: (lv_couples_7_0= ruleStructureFieldValue )
                            	    {
                            	    // InternalOptGrammar.g:2086:8: (lv_couples_7_0= ruleStructureFieldValue )
                            	    // InternalOptGrammar.g:2087:9: lv_couples_7_0= ruleStructureFieldValue
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getConcreteStructureDefinitionDeclarationAccess().getCouplesStructureFieldValueParserRuleCall_2_1_0_2_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_11);
                            	    lv_couples_7_0=ruleStructureFieldValue();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getConcreteStructureDefinitionDeclarationRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"couples",
                            	      										lv_couples_7_0,
                            	      										"org.unicam.myGrammar.OptGrammar.StructureFieldValue");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop46;
                                }
                            } while (true);

                            otherlv_8=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getConcreteStructureDefinitionDeclarationAccess().getRightCurlyBracketKeyword_2_1_0_3());
                              					
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalOptGrammar.g:2111:5: ( (otherlv_9= RULE_ID ) )
                            {
                            // InternalOptGrammar.g:2111:5: ( (otherlv_9= RULE_ID ) )
                            // InternalOptGrammar.g:2112:6: (otherlv_9= RULE_ID )
                            {
                            // InternalOptGrammar.g:2112:6: (otherlv_9= RULE_ID )
                            // InternalOptGrammar.g:2113:7: otherlv_9= RULE_ID
                            {
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConcreteStructureDefinitionDeclarationRule());
                              							}
                              						
                            }
                            otherlv_9=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_9, grammarAccess.getConcreteStructureDefinitionDeclarationAccess().getExistenceRefConcreteStructDeclarationCrossReference_2_1_1_0());
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalOptGrammar.g:2125:5: ( (lv_arrayAccessRef_10_0= ruleArrayAccess ) )
                            {
                            // InternalOptGrammar.g:2125:5: ( (lv_arrayAccessRef_10_0= ruleArrayAccess ) )
                            // InternalOptGrammar.g:2126:6: (lv_arrayAccessRef_10_0= ruleArrayAccess )
                            {
                            // InternalOptGrammar.g:2126:6: (lv_arrayAccessRef_10_0= ruleArrayAccess )
                            // InternalOptGrammar.g:2127:7: lv_arrayAccessRef_10_0= ruleArrayAccess
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConcreteStructureDefinitionDeclarationAccess().getArrayAccessRefArrayAccessParserRuleCall_2_1_2_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_arrayAccessRef_10_0=ruleArrayAccess();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConcreteStructureDefinitionDeclarationRule());
                              							}
                              							set(
                              								current,
                              								"arrayAccessRef",
                              								lv_arrayAccessRef_10_0,
                              								"org.unicam.myGrammar.OptGrammar.ArrayAccess");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConcreteStructureDefinitionDeclaration"


    // $ANTLR start "entryRuleConcreteStructDeclaration"
    // InternalOptGrammar.g:2150:1: entryRuleConcreteStructDeclaration returns [EObject current=null] : iv_ruleConcreteStructDeclaration= ruleConcreteStructDeclaration EOF ;
    public final EObject entryRuleConcreteStructDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConcreteStructDeclaration = null;


        try {
            // InternalOptGrammar.g:2150:66: (iv_ruleConcreteStructDeclaration= ruleConcreteStructDeclaration EOF )
            // InternalOptGrammar.g:2151:2: iv_ruleConcreteStructDeclaration= ruleConcreteStructDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConcreteStructDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConcreteStructDeclaration=ruleConcreteStructDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConcreteStructDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConcreteStructDeclaration"


    // $ANTLR start "ruleConcreteStructDeclaration"
    // InternalOptGrammar.g:2157:1: ruleConcreteStructDeclaration returns [EObject current=null] : ( ( (lv_location_0_0= ruleLocationSpecifierEnum ) )? ( (lv_constant_1_0= 'constant' ) )? ( (otherlv_2= RULE_ID ) ) ( (lv_name_3_0= RULE_ID ) ) ) ;
    public final EObject ruleConcreteStructDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_constant_1_0=null;
        Token otherlv_2=null;
        Token lv_name_3_0=null;
        EObject lv_location_0_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:2163:2: ( ( ( (lv_location_0_0= ruleLocationSpecifierEnum ) )? ( (lv_constant_1_0= 'constant' ) )? ( (otherlv_2= RULE_ID ) ) ( (lv_name_3_0= RULE_ID ) ) ) )
            // InternalOptGrammar.g:2164:2: ( ( (lv_location_0_0= ruleLocationSpecifierEnum ) )? ( (lv_constant_1_0= 'constant' ) )? ( (otherlv_2= RULE_ID ) ) ( (lv_name_3_0= RULE_ID ) ) )
            {
            // InternalOptGrammar.g:2164:2: ( ( (lv_location_0_0= ruleLocationSpecifierEnum ) )? ( (lv_constant_1_0= 'constant' ) )? ( (otherlv_2= RULE_ID ) ) ( (lv_name_3_0= RULE_ID ) ) )
            // InternalOptGrammar.g:2165:3: ( (lv_location_0_0= ruleLocationSpecifierEnum ) )? ( (lv_constant_1_0= 'constant' ) )? ( (otherlv_2= RULE_ID ) ) ( (lv_name_3_0= RULE_ID ) )
            {
            // InternalOptGrammar.g:2165:3: ( (lv_location_0_0= ruleLocationSpecifierEnum ) )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( ((LA49_0>=177 && LA49_0<=179)) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalOptGrammar.g:2166:4: (lv_location_0_0= ruleLocationSpecifierEnum )
                    {
                    // InternalOptGrammar.g:2166:4: (lv_location_0_0= ruleLocationSpecifierEnum )
                    // InternalOptGrammar.g:2167:5: lv_location_0_0= ruleLocationSpecifierEnum
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConcreteStructDeclarationAccess().getLocationLocationSpecifierEnumParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_45);
                    lv_location_0_0=ruleLocationSpecifierEnum();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConcreteStructDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"location",
                      						lv_location_0_0,
                      						"org.unicam.myGrammar.OptGrammar.LocationSpecifierEnum");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalOptGrammar.g:2184:3: ( (lv_constant_1_0= 'constant' ) )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==27) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalOptGrammar.g:2185:4: (lv_constant_1_0= 'constant' )
                    {
                    // InternalOptGrammar.g:2185:4: (lv_constant_1_0= 'constant' )
                    // InternalOptGrammar.g:2186:5: lv_constant_1_0= 'constant'
                    {
                    lv_constant_1_0=(Token)match(input,27,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_constant_1_0, grammarAccess.getConcreteStructDeclarationAccess().getConstantConstantKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConcreteStructDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "constant", true, "constant");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalOptGrammar.g:2198:3: ( (otherlv_2= RULE_ID ) )
            // InternalOptGrammar.g:2199:4: (otherlv_2= RULE_ID )
            {
            // InternalOptGrammar.g:2199:4: (otherlv_2= RULE_ID )
            // InternalOptGrammar.g:2200:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getConcreteStructDeclarationRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getConcreteStructDeclarationAccess().getTypeStructDeclarationCrossReference_2_0());
              				
            }

            }


            }

            // InternalOptGrammar.g:2211:3: ( (lv_name_3_0= RULE_ID ) )
            // InternalOptGrammar.g:2212:4: (lv_name_3_0= RULE_ID )
            {
            // InternalOptGrammar.g:2212:4: (lv_name_3_0= RULE_ID )
            // InternalOptGrammar.g:2213:5: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_3_0, grammarAccess.getConcreteStructDeclarationAccess().getNameIDTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getConcreteStructDeclarationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.eclipse.xtext.common.Terminals.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConcreteStructDeclaration"


    // $ANTLR start "entryRuleStructureFieldValue"
    // InternalOptGrammar.g:2233:1: entryRuleStructureFieldValue returns [EObject current=null] : iv_ruleStructureFieldValue= ruleStructureFieldValue EOF ;
    public final EObject entryRuleStructureFieldValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructureFieldValue = null;


        try {
            // InternalOptGrammar.g:2233:60: (iv_ruleStructureFieldValue= ruleStructureFieldValue EOF )
            // InternalOptGrammar.g:2234:2: iv_ruleStructureFieldValue= ruleStructureFieldValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructureFieldValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStructureFieldValue=ruleStructureFieldValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructureFieldValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructureFieldValue"


    // $ANTLR start "ruleStructureFieldValue"
    // InternalOptGrammar.g:2240:1: ruleStructureFieldValue returns [EObject current=null] : ( ( (lv_field_0_0= RULE_ID ) ) otherlv_1= ':' ( ( (lv_values_2_1= ruleLogicalOperations | lv_values_2_2= ruleFilledArray ) ) ) ) ;
    public final EObject ruleStructureFieldValue() throws RecognitionException {
        EObject current = null;

        Token lv_field_0_0=null;
        Token otherlv_1=null;
        EObject lv_values_2_1 = null;

        EObject lv_values_2_2 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:2246:2: ( ( ( (lv_field_0_0= RULE_ID ) ) otherlv_1= ':' ( ( (lv_values_2_1= ruleLogicalOperations | lv_values_2_2= ruleFilledArray ) ) ) ) )
            // InternalOptGrammar.g:2247:2: ( ( (lv_field_0_0= RULE_ID ) ) otherlv_1= ':' ( ( (lv_values_2_1= ruleLogicalOperations | lv_values_2_2= ruleFilledArray ) ) ) )
            {
            // InternalOptGrammar.g:2247:2: ( ( (lv_field_0_0= RULE_ID ) ) otherlv_1= ':' ( ( (lv_values_2_1= ruleLogicalOperations | lv_values_2_2= ruleFilledArray ) ) ) )
            // InternalOptGrammar.g:2248:3: ( (lv_field_0_0= RULE_ID ) ) otherlv_1= ':' ( ( (lv_values_2_1= ruleLogicalOperations | lv_values_2_2= ruleFilledArray ) ) )
            {
            // InternalOptGrammar.g:2248:3: ( (lv_field_0_0= RULE_ID ) )
            // InternalOptGrammar.g:2249:4: (lv_field_0_0= RULE_ID )
            {
            // InternalOptGrammar.g:2249:4: (lv_field_0_0= RULE_ID )
            // InternalOptGrammar.g:2250:5: lv_field_0_0= RULE_ID
            {
            lv_field_0_0=(Token)match(input,RULE_ID,FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_field_0_0, grammarAccess.getStructureFieldValueAccess().getFieldIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getStructureFieldValueRule());
              					}
              					setWithLastConsumed(
              						current,
              						"field",
              						lv_field_0_0,
              						"org.eclipse.xtext.common.Terminals.ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,43,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStructureFieldValueAccess().getColonKeyword_1());
              		
            }
            // InternalOptGrammar.g:2270:3: ( ( (lv_values_2_1= ruleLogicalOperations | lv_values_2_2= ruleFilledArray ) ) )
            // InternalOptGrammar.g:2271:4: ( (lv_values_2_1= ruleLogicalOperations | lv_values_2_2= ruleFilledArray ) )
            {
            // InternalOptGrammar.g:2271:4: ( (lv_values_2_1= ruleLogicalOperations | lv_values_2_2= ruleFilledArray ) )
            // InternalOptGrammar.g:2272:5: (lv_values_2_1= ruleLogicalOperations | lv_values_2_2= ruleFilledArray )
            {
            // InternalOptGrammar.g:2272:5: (lv_values_2_1= ruleLogicalOperations | lv_values_2_2= ruleFilledArray )
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( ((LA51_0>=RULE_INT && LA51_0<=RULE_TX)||(LA51_0>=59 && LA51_0<=60)||(LA51_0>=62 && LA51_0<=69)||LA51_0==74||(LA51_0>=192 && LA51_0<=193)) ) {
                alt51=1;
            }
            else if ( ((LA51_0>=24 && LA51_0<=25)) ) {
                alt51=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }
            switch (alt51) {
                case 1 :
                    // InternalOptGrammar.g:2273:6: lv_values_2_1= ruleLogicalOperations
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStructureFieldValueAccess().getValuesLogicalOperationsParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_values_2_1=ruleLogicalOperations();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStructureFieldValueRule());
                      						}
                      						set(
                      							current,
                      							"values",
                      							lv_values_2_1,
                      							"org.unicam.myGrammar.OptGrammar.LogicalOperations");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:2289:6: lv_values_2_2= ruleFilledArray
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStructureFieldValueAccess().getValuesFilledArrayParserRuleCall_2_0_1());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_values_2_2=ruleFilledArray();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStructureFieldValueRule());
                      						}
                      						set(
                      							current,
                      							"values",
                      							lv_values_2_2,
                      							"org.unicam.myGrammar.OptGrammar.FilledArray");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructureFieldValue"


    // $ANTLR start "entryRuleFunctionDefinition"
    // InternalOptGrammar.g:2311:1: entryRuleFunctionDefinition returns [EObject current=null] : iv_ruleFunctionDefinition= ruleFunctionDefinition EOF ;
    public final EObject entryRuleFunctionDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionDefinition = null;


        try {
            // InternalOptGrammar.g:2311:59: (iv_ruleFunctionDefinition= ruleFunctionDefinition EOF )
            // InternalOptGrammar.g:2312:2: iv_ruleFunctionDefinition= ruleFunctionDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionDefinition=ruleFunctionDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionDefinition"


    // $ANTLR start "ruleFunctionDefinition"
    // InternalOptGrammar.g:2318:1: ruleFunctionDefinition returns [EObject current=null] : ( ( (lv_payable_0_0= 'payable' ) )? otherlv_1= 'function' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '(' ( ( (lv_parameters_4_0= ruleFunctionParameterDeclaration ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleFunctionParameterDeclaration ) ) )* )? otherlv_7= ')' ( (lv_optionalElements_8_0= ruleFunctionDefinitionOptionalElement ) )* (otherlv_9= 'returns' otherlv_10= '(' ( (lv_returnType_11_0= ruleNamedType ) ) otherlv_12= ')' )? otherlv_13= '{' ( (lv_blocks_14_0= ruleInternalBlock ) )* ( (lv_returnVal_15_0= ruleReturnStatement ) )? otherlv_16= '}' ) ;
    public final EObject ruleFunctionDefinition() throws RecognitionException {
        EObject current = null;

        Token lv_payable_0_0=null;
        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_16=null;
        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;

        EObject lv_optionalElements_8_0 = null;

        EObject lv_returnType_11_0 = null;

        EObject lv_blocks_14_0 = null;

        EObject lv_returnVal_15_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:2324:2: ( ( ( (lv_payable_0_0= 'payable' ) )? otherlv_1= 'function' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '(' ( ( (lv_parameters_4_0= ruleFunctionParameterDeclaration ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleFunctionParameterDeclaration ) ) )* )? otherlv_7= ')' ( (lv_optionalElements_8_0= ruleFunctionDefinitionOptionalElement ) )* (otherlv_9= 'returns' otherlv_10= '(' ( (lv_returnType_11_0= ruleNamedType ) ) otherlv_12= ')' )? otherlv_13= '{' ( (lv_blocks_14_0= ruleInternalBlock ) )* ( (lv_returnVal_15_0= ruleReturnStatement ) )? otherlv_16= '}' ) )
            // InternalOptGrammar.g:2325:2: ( ( (lv_payable_0_0= 'payable' ) )? otherlv_1= 'function' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '(' ( ( (lv_parameters_4_0= ruleFunctionParameterDeclaration ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleFunctionParameterDeclaration ) ) )* )? otherlv_7= ')' ( (lv_optionalElements_8_0= ruleFunctionDefinitionOptionalElement ) )* (otherlv_9= 'returns' otherlv_10= '(' ( (lv_returnType_11_0= ruleNamedType ) ) otherlv_12= ')' )? otherlv_13= '{' ( (lv_blocks_14_0= ruleInternalBlock ) )* ( (lv_returnVal_15_0= ruleReturnStatement ) )? otherlv_16= '}' )
            {
            // InternalOptGrammar.g:2325:2: ( ( (lv_payable_0_0= 'payable' ) )? otherlv_1= 'function' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '(' ( ( (lv_parameters_4_0= ruleFunctionParameterDeclaration ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleFunctionParameterDeclaration ) ) )* )? otherlv_7= ')' ( (lv_optionalElements_8_0= ruleFunctionDefinitionOptionalElement ) )* (otherlv_9= 'returns' otherlv_10= '(' ( (lv_returnType_11_0= ruleNamedType ) ) otherlv_12= ')' )? otherlv_13= '{' ( (lv_blocks_14_0= ruleInternalBlock ) )* ( (lv_returnVal_15_0= ruleReturnStatement ) )? otherlv_16= '}' )
            // InternalOptGrammar.g:2326:3: ( (lv_payable_0_0= 'payable' ) )? otherlv_1= 'function' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '(' ( ( (lv_parameters_4_0= ruleFunctionParameterDeclaration ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleFunctionParameterDeclaration ) ) )* )? otherlv_7= ')' ( (lv_optionalElements_8_0= ruleFunctionDefinitionOptionalElement ) )* (otherlv_9= 'returns' otherlv_10= '(' ( (lv_returnType_11_0= ruleNamedType ) ) otherlv_12= ')' )? otherlv_13= '{' ( (lv_blocks_14_0= ruleInternalBlock ) )* ( (lv_returnVal_15_0= ruleReturnStatement ) )? otherlv_16= '}'
            {
            // InternalOptGrammar.g:2326:3: ( (lv_payable_0_0= 'payable' ) )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==44) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalOptGrammar.g:2327:4: (lv_payable_0_0= 'payable' )
                    {
                    // InternalOptGrammar.g:2327:4: (lv_payable_0_0= 'payable' )
                    // InternalOptGrammar.g:2328:5: lv_payable_0_0= 'payable'
                    {
                    lv_payable_0_0=(Token)match(input,44,FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_payable_0_0, grammarAccess.getFunctionDefinitionAccess().getPayablePayableKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFunctionDefinitionRule());
                      					}
                      					setWithLastConsumed(current, "payable", true, "payable");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,45,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFunctionDefinitionAccess().getFunctionKeyword_1());
              		
            }
            // InternalOptGrammar.g:2344:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalOptGrammar.g:2345:4: (lv_name_2_0= RULE_ID )
            {
            // InternalOptGrammar.g:2345:4: (lv_name_2_0= RULE_ID )
            // InternalOptGrammar.g:2346:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getFunctionDefinitionAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFunctionDefinitionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.xtext.common.Terminals.ID");
              				
            }

            }


            }

            otherlv_3=(Token)match(input,34,FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getFunctionDefinitionAccess().getLeftParenthesisKeyword_3());
              		
            }
            // InternalOptGrammar.g:2366:3: ( ( (lv_parameters_4_0= ruleFunctionParameterDeclaration ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleFunctionParameterDeclaration ) ) )* )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==RULE_ID||LA54_0==20||(LA54_0>=27 && LA54_0<=29)||LA54_0==33||(LA54_0>=75 && LA54_0<=183)) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalOptGrammar.g:2367:4: ( (lv_parameters_4_0= ruleFunctionParameterDeclaration ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleFunctionParameterDeclaration ) ) )*
                    {
                    // InternalOptGrammar.g:2367:4: ( (lv_parameters_4_0= ruleFunctionParameterDeclaration ) )
                    // InternalOptGrammar.g:2368:5: (lv_parameters_4_0= ruleFunctionParameterDeclaration )
                    {
                    // InternalOptGrammar.g:2368:5: (lv_parameters_4_0= ruleFunctionParameterDeclaration )
                    // InternalOptGrammar.g:2369:6: lv_parameters_4_0= ruleFunctionParameterDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getParametersFunctionParameterDeclarationParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_50);
                    lv_parameters_4_0=ruleFunctionParameterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_4_0,
                      							"org.unicam.myGrammar.OptGrammar.FunctionParameterDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalOptGrammar.g:2386:4: (otherlv_5= ',' ( (lv_parameters_6_0= ruleFunctionParameterDeclaration ) ) )*
                    loop53:
                    do {
                        int alt53=2;
                        int LA53_0 = input.LA(1);

                        if ( (LA53_0==22) ) {
                            alt53=1;
                        }


                        switch (alt53) {
                    	case 1 :
                    	    // InternalOptGrammar.g:2387:5: otherlv_5= ',' ( (lv_parameters_6_0= ruleFunctionParameterDeclaration ) )
                    	    {
                    	    otherlv_5=(Token)match(input,22,FOLLOW_51); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getFunctionDefinitionAccess().getCommaKeyword_4_1_0());
                    	      				
                    	    }
                    	    // InternalOptGrammar.g:2391:5: ( (lv_parameters_6_0= ruleFunctionParameterDeclaration ) )
                    	    // InternalOptGrammar.g:2392:6: (lv_parameters_6_0= ruleFunctionParameterDeclaration )
                    	    {
                    	    // InternalOptGrammar.g:2392:6: (lv_parameters_6_0= ruleFunctionParameterDeclaration )
                    	    // InternalOptGrammar.g:2393:7: lv_parameters_6_0= ruleFunctionParameterDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getParametersFunctionParameterDeclarationParserRuleCall_4_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_50);
                    	    lv_parameters_6_0=ruleFunctionParameterDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_6_0,
                    	      								"org.unicam.myGrammar.OptGrammar.FunctionParameterDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop53;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_7=(Token)match(input,36,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getFunctionDefinitionAccess().getRightParenthesisKeyword_5());
              		
            }
            // InternalOptGrammar.g:2416:3: ( (lv_optionalElements_8_0= ruleFunctionDefinitionOptionalElement ) )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==27||(LA55_0>=180 && LA55_0<=183)) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalOptGrammar.g:2417:4: (lv_optionalElements_8_0= ruleFunctionDefinitionOptionalElement )
            	    {
            	    // InternalOptGrammar.g:2417:4: (lv_optionalElements_8_0= ruleFunctionDefinitionOptionalElement )
            	    // InternalOptGrammar.g:2418:5: lv_optionalElements_8_0= ruleFunctionDefinitionOptionalElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getOptionalElementsFunctionDefinitionOptionalElementParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_52);
            	    lv_optionalElements_8_0=ruleFunctionDefinitionOptionalElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"optionalElements",
            	      						lv_optionalElements_8_0,
            	      						"org.unicam.myGrammar.OptGrammar.FunctionDefinitionOptionalElement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            // InternalOptGrammar.g:2435:3: (otherlv_9= 'returns' otherlv_10= '(' ( (lv_returnType_11_0= ruleNamedType ) ) otherlv_12= ')' )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==46) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalOptGrammar.g:2436:4: otherlv_9= 'returns' otherlv_10= '(' ( (lv_returnType_11_0= ruleNamedType ) ) otherlv_12= ')'
                    {
                    otherlv_9=(Token)match(input,46,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getFunctionDefinitionAccess().getReturnsKeyword_7_0());
                      			
                    }
                    otherlv_10=(Token)match(input,34,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getFunctionDefinitionAccess().getLeftParenthesisKeyword_7_1());
                      			
                    }
                    // InternalOptGrammar.g:2444:4: ( (lv_returnType_11_0= ruleNamedType ) )
                    // InternalOptGrammar.g:2445:5: (lv_returnType_11_0= ruleNamedType )
                    {
                    // InternalOptGrammar.g:2445:5: (lv_returnType_11_0= ruleNamedType )
                    // InternalOptGrammar.g:2446:6: lv_returnType_11_0= ruleNamedType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getReturnTypeNamedTypeParserRuleCall_7_2_0());
                      					
                    }
                    pushFollow(FOLLOW_35);
                    lv_returnType_11_0=ruleNamedType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
                      						}
                      						set(
                      							current,
                      							"returnType",
                      							lv_returnType_11_0,
                      							"org.unicam.myGrammar.OptGrammar.NamedType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,36,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getFunctionDefinitionAccess().getRightParenthesisKeyword_7_3());
                      			
                    }

                    }
                    break;

            }

            otherlv_13=(Token)match(input,17,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_13, grammarAccess.getFunctionDefinitionAccess().getLeftCurlyBracketKeyword_8());
              		
            }
            // InternalOptGrammar.g:2472:3: ( (lv_blocks_14_0= ruleInternalBlock ) )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==RULE_ID||(LA57_0>=20 && LA57_0<=21)||(LA57_0>=27 && LA57_0<=29)||LA57_0==33||(LA57_0>=41 && LA57_0<=42)||LA57_0==50||(LA57_0>=52 && LA57_0<=53)||(LA57_0>=75 && LA57_0<=183)) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalOptGrammar.g:2473:4: (lv_blocks_14_0= ruleInternalBlock )
            	    {
            	    // InternalOptGrammar.g:2473:4: (lv_blocks_14_0= ruleInternalBlock )
            	    // InternalOptGrammar.g:2474:5: lv_blocks_14_0= ruleInternalBlock
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getBlocksInternalBlockParserRuleCall_9_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_53);
            	    lv_blocks_14_0=ruleInternalBlock();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"blocks",
            	      						lv_blocks_14_0,
            	      						"org.unicam.myGrammar.OptGrammar.InternalBlock");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            // InternalOptGrammar.g:2491:3: ( (lv_returnVal_15_0= ruleReturnStatement ) )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==56) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalOptGrammar.g:2492:4: (lv_returnVal_15_0= ruleReturnStatement )
                    {
                    // InternalOptGrammar.g:2492:4: (lv_returnVal_15_0= ruleReturnStatement )
                    // InternalOptGrammar.g:2493:5: lv_returnVal_15_0= ruleReturnStatement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getReturnValReturnStatementParserRuleCall_10_0());
                      				
                    }
                    pushFollow(FOLLOW_54);
                    lv_returnVal_15_0=ruleReturnStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
                      					}
                      					set(
                      						current,
                      						"returnVal",
                      						lv_returnVal_15_0,
                      						"org.unicam.myGrammar.OptGrammar.ReturnStatement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_16=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_16, grammarAccess.getFunctionDefinitionAccess().getRightCurlyBracketKeyword_11());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionDefinition"


    // $ANTLR start "entryRuleInternalBlock"
    // InternalOptGrammar.g:2518:1: entryRuleInternalBlock returns [EObject current=null] : iv_ruleInternalBlock= ruleInternalBlock EOF ;
    public final EObject entryRuleInternalBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInternalBlock = null;


        try {
            // InternalOptGrammar.g:2518:54: (iv_ruleInternalBlock= ruleInternalBlock EOF )
            // InternalOptGrammar.g:2519:2: iv_ruleInternalBlock= ruleInternalBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInternalBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInternalBlock=ruleInternalBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInternalBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInternalBlock"


    // $ANTLR start "ruleInternalBlock"
    // InternalOptGrammar.g:2525:1: ruleInternalBlock returns [EObject current=null] : ( ( ( ( (lv_def_0_1= ruleArrayDefinition | lv_def_0_2= ruleMappingDefinition | lv_def_0_3= ruleSingleDefinition | lv_def_0_4= ruleFieldDefinition ) ) ) otherlv_1= ';' ) | ( ( (lv_dec_2_0= ruleFunctionDeclaration ) ) otherlv_3= ';' ) | ( (lv_loop_4_0= ruleLoopStructures ) ) | ( ( (lv_call_5_0= ruleFunctionCall ) ) otherlv_6= ';' ) ) ;
    public final EObject ruleInternalBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        EObject lv_def_0_1 = null;

        EObject lv_def_0_2 = null;

        EObject lv_def_0_3 = null;

        EObject lv_def_0_4 = null;

        EObject lv_dec_2_0 = null;

        EObject lv_loop_4_0 = null;

        EObject lv_call_5_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:2531:2: ( ( ( ( ( (lv_def_0_1= ruleArrayDefinition | lv_def_0_2= ruleMappingDefinition | lv_def_0_3= ruleSingleDefinition | lv_def_0_4= ruleFieldDefinition ) ) ) otherlv_1= ';' ) | ( ( (lv_dec_2_0= ruleFunctionDeclaration ) ) otherlv_3= ';' ) | ( (lv_loop_4_0= ruleLoopStructures ) ) | ( ( (lv_call_5_0= ruleFunctionCall ) ) otherlv_6= ';' ) ) )
            // InternalOptGrammar.g:2532:2: ( ( ( ( (lv_def_0_1= ruleArrayDefinition | lv_def_0_2= ruleMappingDefinition | lv_def_0_3= ruleSingleDefinition | lv_def_0_4= ruleFieldDefinition ) ) ) otherlv_1= ';' ) | ( ( (lv_dec_2_0= ruleFunctionDeclaration ) ) otherlv_3= ';' ) | ( (lv_loop_4_0= ruleLoopStructures ) ) | ( ( (lv_call_5_0= ruleFunctionCall ) ) otherlv_6= ';' ) )
            {
            // InternalOptGrammar.g:2532:2: ( ( ( ( (lv_def_0_1= ruleArrayDefinition | lv_def_0_2= ruleMappingDefinition | lv_def_0_3= ruleSingleDefinition | lv_def_0_4= ruleFieldDefinition ) ) ) otherlv_1= ';' ) | ( ( (lv_dec_2_0= ruleFunctionDeclaration ) ) otherlv_3= ';' ) | ( (lv_loop_4_0= ruleLoopStructures ) ) | ( ( (lv_call_5_0= ruleFunctionCall ) ) otherlv_6= ';' ) )
            int alt60=4;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                switch ( input.LA(2) ) {
                case RULE_ID:
                case 18:
                case 37:
                case 38:
                case 39:
                case 40:
                    {
                    alt60=2;
                    }
                    break;
                case 34:
                    {
                    alt60=4;
                    }
                    break;
                case 25:
                case 30:
                case 32:
                case 41:
                case 42:
                    {
                    alt60=1;
                    }
                    break;
                case 23:
                    {
                    switch ( input.LA(3) ) {
                    case 24:
                    case 25:
                        {
                        alt60=1;
                        }
                        break;
                    case RULE_ID:
                        {
                        int LA60_7 = input.LA(4);

                        if ( (LA60_7==18) ) {
                            alt60=1;
                        }
                        else if ( ((LA60_7>=41 && LA60_7<=42)) ) {
                            alt60=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 60, 7, input);

                            throw nvae;
                        }
                        }
                        break;
                    case RULE_INT:
                    case RULE_STRING:
                    case RULE_HEX:
                    case RULE_DECIMAL:
                    case RULE_BLOCK:
                    case RULE_MSG:
                    case RULE_TX:
                    case 41:
                    case 42:
                    case 59:
                    case 60:
                    case 62:
                    case 63:
                    case 64:
                    case 65:
                    case 66:
                    case 67:
                    case 68:
                    case 69:
                    case 74:
                    case 192:
                    case 193:
                        {
                        alt60=2;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 60, 6, input);

                        throw nvae;
                    }

                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 1, input);

                    throw nvae;
                }

                }
                break;
            case 41:
            case 42:
                {
                alt60=1;
                }
                break;
            case 20:
            case 21:
            case 27:
            case 28:
            case 29:
            case 33:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 123:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 176:
            case 177:
            case 178:
            case 179:
            case 180:
            case 181:
            case 182:
            case 183:
                {
                alt60=2;
                }
                break;
            case 50:
            case 52:
            case 53:
                {
                alt60=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;
            }

            switch (alt60) {
                case 1 :
                    // InternalOptGrammar.g:2533:3: ( ( ( (lv_def_0_1= ruleArrayDefinition | lv_def_0_2= ruleMappingDefinition | lv_def_0_3= ruleSingleDefinition | lv_def_0_4= ruleFieldDefinition ) ) ) otherlv_1= ';' )
                    {
                    // InternalOptGrammar.g:2533:3: ( ( ( (lv_def_0_1= ruleArrayDefinition | lv_def_0_2= ruleMappingDefinition | lv_def_0_3= ruleSingleDefinition | lv_def_0_4= ruleFieldDefinition ) ) ) otherlv_1= ';' )
                    // InternalOptGrammar.g:2534:4: ( ( (lv_def_0_1= ruleArrayDefinition | lv_def_0_2= ruleMappingDefinition | lv_def_0_3= ruleSingleDefinition | lv_def_0_4= ruleFieldDefinition ) ) ) otherlv_1= ';'
                    {
                    // InternalOptGrammar.g:2534:4: ( ( (lv_def_0_1= ruleArrayDefinition | lv_def_0_2= ruleMappingDefinition | lv_def_0_3= ruleSingleDefinition | lv_def_0_4= ruleFieldDefinition ) ) )
                    // InternalOptGrammar.g:2535:5: ( (lv_def_0_1= ruleArrayDefinition | lv_def_0_2= ruleMappingDefinition | lv_def_0_3= ruleSingleDefinition | lv_def_0_4= ruleFieldDefinition ) )
                    {
                    // InternalOptGrammar.g:2535:5: ( (lv_def_0_1= ruleArrayDefinition | lv_def_0_2= ruleMappingDefinition | lv_def_0_3= ruleSingleDefinition | lv_def_0_4= ruleFieldDefinition ) )
                    // InternalOptGrammar.g:2536:6: (lv_def_0_1= ruleArrayDefinition | lv_def_0_2= ruleMappingDefinition | lv_def_0_3= ruleSingleDefinition | lv_def_0_4= ruleFieldDefinition )
                    {
                    // InternalOptGrammar.g:2536:6: (lv_def_0_1= ruleArrayDefinition | lv_def_0_2= ruleMappingDefinition | lv_def_0_3= ruleSingleDefinition | lv_def_0_4= ruleFieldDefinition )
                    int alt59=4;
                    int LA59_0 = input.LA(1);

                    if ( (LA59_0==RULE_ID) ) {
                        switch ( input.LA(2) ) {
                        case 32:
                            {
                            alt59=4;
                            }
                            break;
                        case 41:
                        case 42:
                            {
                            alt59=3;
                            }
                            break;
                        case 23:
                        case 25:
                            {
                            alt59=1;
                            }
                            break;
                        case 30:
                            {
                            alt59=2;
                            }
                            break;
                        default:
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 59, 1, input);

                            throw nvae;
                        }

                    }
                    else if ( ((LA59_0>=41 && LA59_0<=42)) ) {
                        alt59=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 59, 0, input);

                        throw nvae;
                    }
                    switch (alt59) {
                        case 1 :
                            // InternalOptGrammar.g:2537:7: lv_def_0_1= ruleArrayDefinition
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getInternalBlockAccess().getDefArrayDefinitionParserRuleCall_0_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_7);
                            lv_def_0_1=ruleArrayDefinition();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getInternalBlockRule());
                              							}
                              							set(
                              								current,
                              								"def",
                              								lv_def_0_1,
                              								"org.unicam.myGrammar.OptGrammar.ArrayDefinition");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalOptGrammar.g:2553:7: lv_def_0_2= ruleMappingDefinition
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getInternalBlockAccess().getDefMappingDefinitionParserRuleCall_0_0_0_1());
                              						
                            }
                            pushFollow(FOLLOW_7);
                            lv_def_0_2=ruleMappingDefinition();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getInternalBlockRule());
                              							}
                              							set(
                              								current,
                              								"def",
                              								lv_def_0_2,
                              								"org.unicam.myGrammar.OptGrammar.MappingDefinition");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalOptGrammar.g:2569:7: lv_def_0_3= ruleSingleDefinition
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getInternalBlockAccess().getDefSingleDefinitionParserRuleCall_0_0_0_2());
                              						
                            }
                            pushFollow(FOLLOW_7);
                            lv_def_0_3=ruleSingleDefinition();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getInternalBlockRule());
                              							}
                              							set(
                              								current,
                              								"def",
                              								lv_def_0_3,
                              								"org.unicam.myGrammar.OptGrammar.SingleDefinition");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalOptGrammar.g:2585:7: lv_def_0_4= ruleFieldDefinition
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getInternalBlockAccess().getDefFieldDefinitionParserRuleCall_0_0_0_3());
                              						
                            }
                            pushFollow(FOLLOW_7);
                            lv_def_0_4=ruleFieldDefinition();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getInternalBlockRule());
                              							}
                              							set(
                              								current,
                              								"def",
                              								lv_def_0_4,
                              								"org.unicam.myGrammar.OptGrammar.FieldDefinition");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    otherlv_1=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getInternalBlockAccess().getSemicolonKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:2609:3: ( ( (lv_dec_2_0= ruleFunctionDeclaration ) ) otherlv_3= ';' )
                    {
                    // InternalOptGrammar.g:2609:3: ( ( (lv_dec_2_0= ruleFunctionDeclaration ) ) otherlv_3= ';' )
                    // InternalOptGrammar.g:2610:4: ( (lv_dec_2_0= ruleFunctionDeclaration ) ) otherlv_3= ';'
                    {
                    // InternalOptGrammar.g:2610:4: ( (lv_dec_2_0= ruleFunctionDeclaration ) )
                    // InternalOptGrammar.g:2611:5: (lv_dec_2_0= ruleFunctionDeclaration )
                    {
                    // InternalOptGrammar.g:2611:5: (lv_dec_2_0= ruleFunctionDeclaration )
                    // InternalOptGrammar.g:2612:6: lv_dec_2_0= ruleFunctionDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInternalBlockAccess().getDecFunctionDeclarationParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_dec_2_0=ruleFunctionDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInternalBlockRule());
                      						}
                      						set(
                      							current,
                      							"dec",
                      							lv_dec_2_0,
                      							"org.unicam.myGrammar.OptGrammar.FunctionDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getInternalBlockAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalOptGrammar.g:2635:3: ( (lv_loop_4_0= ruleLoopStructures ) )
                    {
                    // InternalOptGrammar.g:2635:3: ( (lv_loop_4_0= ruleLoopStructures ) )
                    // InternalOptGrammar.g:2636:4: (lv_loop_4_0= ruleLoopStructures )
                    {
                    // InternalOptGrammar.g:2636:4: (lv_loop_4_0= ruleLoopStructures )
                    // InternalOptGrammar.g:2637:5: lv_loop_4_0= ruleLoopStructures
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getInternalBlockAccess().getLoopLoopStructuresParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_loop_4_0=ruleLoopStructures();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getInternalBlockRule());
                      					}
                      					set(
                      						current,
                      						"loop",
                      						lv_loop_4_0,
                      						"org.unicam.myGrammar.OptGrammar.LoopStructures");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalOptGrammar.g:2655:3: ( ( (lv_call_5_0= ruleFunctionCall ) ) otherlv_6= ';' )
                    {
                    // InternalOptGrammar.g:2655:3: ( ( (lv_call_5_0= ruleFunctionCall ) ) otherlv_6= ';' )
                    // InternalOptGrammar.g:2656:4: ( (lv_call_5_0= ruleFunctionCall ) ) otherlv_6= ';'
                    {
                    // InternalOptGrammar.g:2656:4: ( (lv_call_5_0= ruleFunctionCall ) )
                    // InternalOptGrammar.g:2657:5: (lv_call_5_0= ruleFunctionCall )
                    {
                    // InternalOptGrammar.g:2657:5: (lv_call_5_0= ruleFunctionCall )
                    // InternalOptGrammar.g:2658:6: lv_call_5_0= ruleFunctionCall
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInternalBlockAccess().getCallFunctionCallParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_call_5_0=ruleFunctionCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInternalBlockRule());
                      						}
                      						set(
                      							current,
                      							"call",
                      							lv_call_5_0,
                      							"org.unicam.myGrammar.OptGrammar.FunctionCall");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getInternalBlockAccess().getSemicolonKeyword_3_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInternalBlock"


    // $ANTLR start "entryRuleArrayDefinition"
    // InternalOptGrammar.g:2684:1: entryRuleArrayDefinition returns [EObject current=null] : iv_ruleArrayDefinition= ruleArrayDefinition EOF ;
    public final EObject entryRuleArrayDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayDefinition = null;


        try {
            // InternalOptGrammar.g:2684:56: (iv_ruleArrayDefinition= ruleArrayDefinition EOF )
            // InternalOptGrammar.g:2685:2: iv_ruleArrayDefinition= ruleArrayDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayDefinition=ruleArrayDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayDefinition"


    // $ANTLR start "ruleArrayDefinition"
    // InternalOptGrammar.g:2691:1: ruleArrayDefinition returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '=' ( ( (lv_blocks_2_0= ruleFilledArray ) ) | ( (otherlv_3= RULE_ID ) ) ) ) | ( ( (lv_indexes_4_0= ruleArrayIndex ) )+ (otherlv_5= '.' ( (lv_field_6_0= RULE_ID ) ) )? ( (lv_operator_7_0= ruleOperationAssegnationLiteral ) ) ( ( (lv_value_8_1= ruleLogicalOperations | lv_value_8_2= ruleFilledArray ) ) ) ) ) ) ;
    public final EObject ruleArrayDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_field_6_0=null;
        EObject lv_blocks_2_0 = null;

        EObject lv_indexes_4_0 = null;

        EObject lv_operator_7_0 = null;

        EObject lv_value_8_1 = null;

        EObject lv_value_8_2 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:2697:2: ( ( ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '=' ( ( (lv_blocks_2_0= ruleFilledArray ) ) | ( (otherlv_3= RULE_ID ) ) ) ) | ( ( (lv_indexes_4_0= ruleArrayIndex ) )+ (otherlv_5= '.' ( (lv_field_6_0= RULE_ID ) ) )? ( (lv_operator_7_0= ruleOperationAssegnationLiteral ) ) ( ( (lv_value_8_1= ruleLogicalOperations | lv_value_8_2= ruleFilledArray ) ) ) ) ) ) )
            // InternalOptGrammar.g:2698:2: ( ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '=' ( ( (lv_blocks_2_0= ruleFilledArray ) ) | ( (otherlv_3= RULE_ID ) ) ) ) | ( ( (lv_indexes_4_0= ruleArrayIndex ) )+ (otherlv_5= '.' ( (lv_field_6_0= RULE_ID ) ) )? ( (lv_operator_7_0= ruleOperationAssegnationLiteral ) ) ( ( (lv_value_8_1= ruleLogicalOperations | lv_value_8_2= ruleFilledArray ) ) ) ) ) )
            {
            // InternalOptGrammar.g:2698:2: ( ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '=' ( ( (lv_blocks_2_0= ruleFilledArray ) ) | ( (otherlv_3= RULE_ID ) ) ) ) | ( ( (lv_indexes_4_0= ruleArrayIndex ) )+ (otherlv_5= '.' ( (lv_field_6_0= RULE_ID ) ) )? ( (lv_operator_7_0= ruleOperationAssegnationLiteral ) ) ( ( (lv_value_8_1= ruleLogicalOperations | lv_value_8_2= ruleFilledArray ) ) ) ) ) )
            // InternalOptGrammar.g:2699:3: ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '=' ( ( (lv_blocks_2_0= ruleFilledArray ) ) | ( (otherlv_3= RULE_ID ) ) ) ) | ( ( (lv_indexes_4_0= ruleArrayIndex ) )+ (otherlv_5= '.' ( (lv_field_6_0= RULE_ID ) ) )? ( (lv_operator_7_0= ruleOperationAssegnationLiteral ) ) ( ( (lv_value_8_1= ruleLogicalOperations | lv_value_8_2= ruleFilledArray ) ) ) ) )
            {
            // InternalOptGrammar.g:2699:3: ( (otherlv_0= RULE_ID ) )
            // InternalOptGrammar.g:2700:4: (otherlv_0= RULE_ID )
            {
            // InternalOptGrammar.g:2700:4: (otherlv_0= RULE_ID )
            // InternalOptGrammar.g:2701:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getArrayDefinitionRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getArrayDefinitionAccess().getRefArrayDefinitionDeclarationCrossReference_0_0());
              				
            }

            }


            }

            // InternalOptGrammar.g:2712:3: ( (otherlv_1= '=' ( ( (lv_blocks_2_0= ruleFilledArray ) ) | ( (otherlv_3= RULE_ID ) ) ) ) | ( ( (lv_indexes_4_0= ruleArrayIndex ) )+ (otherlv_5= '.' ( (lv_field_6_0= RULE_ID ) ) )? ( (lv_operator_7_0= ruleOperationAssegnationLiteral ) ) ( ( (lv_value_8_1= ruleLogicalOperations | lv_value_8_2= ruleFilledArray ) ) ) ) )
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==23) ) {
                alt65=1;
            }
            else if ( (LA65_0==25) ) {
                alt65=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }
            switch (alt65) {
                case 1 :
                    // InternalOptGrammar.g:2713:4: (otherlv_1= '=' ( ( (lv_blocks_2_0= ruleFilledArray ) ) | ( (otherlv_3= RULE_ID ) ) ) )
                    {
                    // InternalOptGrammar.g:2713:4: (otherlv_1= '=' ( ( (lv_blocks_2_0= ruleFilledArray ) ) | ( (otherlv_3= RULE_ID ) ) ) )
                    // InternalOptGrammar.g:2714:5: otherlv_1= '=' ( ( (lv_blocks_2_0= ruleFilledArray ) ) | ( (otherlv_3= RULE_ID ) ) )
                    {
                    otherlv_1=(Token)match(input,23,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getArrayDefinitionAccess().getEqualsSignKeyword_1_0_0());
                      				
                    }
                    // InternalOptGrammar.g:2718:5: ( ( (lv_blocks_2_0= ruleFilledArray ) ) | ( (otherlv_3= RULE_ID ) ) )
                    int alt61=2;
                    int LA61_0 = input.LA(1);

                    if ( ((LA61_0>=24 && LA61_0<=25)) ) {
                        alt61=1;
                    }
                    else if ( (LA61_0==RULE_ID) ) {
                        alt61=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 61, 0, input);

                        throw nvae;
                    }
                    switch (alt61) {
                        case 1 :
                            // InternalOptGrammar.g:2719:6: ( (lv_blocks_2_0= ruleFilledArray ) )
                            {
                            // InternalOptGrammar.g:2719:6: ( (lv_blocks_2_0= ruleFilledArray ) )
                            // InternalOptGrammar.g:2720:7: (lv_blocks_2_0= ruleFilledArray )
                            {
                            // InternalOptGrammar.g:2720:7: (lv_blocks_2_0= ruleFilledArray )
                            // InternalOptGrammar.g:2721:8: lv_blocks_2_0= ruleFilledArray
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getArrayDefinitionAccess().getBlocksFilledArrayParserRuleCall_1_0_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_blocks_2_0=ruleFilledArray();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getArrayDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"blocks",
                              									lv_blocks_2_0,
                              									"org.unicam.myGrammar.OptGrammar.FilledArray");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalOptGrammar.g:2739:6: ( (otherlv_3= RULE_ID ) )
                            {
                            // InternalOptGrammar.g:2739:6: ( (otherlv_3= RULE_ID ) )
                            // InternalOptGrammar.g:2740:7: (otherlv_3= RULE_ID )
                            {
                            // InternalOptGrammar.g:2740:7: (otherlv_3= RULE_ID )
                            // InternalOptGrammar.g:2741:8: otherlv_3= RULE_ID
                            {
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getArrayDefinitionRule());
                              								}
                              							
                            }
                            otherlv_3=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(otherlv_3, grammarAccess.getArrayDefinitionAccess().getArrayRefArrayDefinitionDeclarationCrossReference_1_0_1_1_0());
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:2755:4: ( ( (lv_indexes_4_0= ruleArrayIndex ) )+ (otherlv_5= '.' ( (lv_field_6_0= RULE_ID ) ) )? ( (lv_operator_7_0= ruleOperationAssegnationLiteral ) ) ( ( (lv_value_8_1= ruleLogicalOperations | lv_value_8_2= ruleFilledArray ) ) ) )
                    {
                    // InternalOptGrammar.g:2755:4: ( ( (lv_indexes_4_0= ruleArrayIndex ) )+ (otherlv_5= '.' ( (lv_field_6_0= RULE_ID ) ) )? ( (lv_operator_7_0= ruleOperationAssegnationLiteral ) ) ( ( (lv_value_8_1= ruleLogicalOperations | lv_value_8_2= ruleFilledArray ) ) ) )
                    // InternalOptGrammar.g:2756:5: ( (lv_indexes_4_0= ruleArrayIndex ) )+ (otherlv_5= '.' ( (lv_field_6_0= RULE_ID ) ) )? ( (lv_operator_7_0= ruleOperationAssegnationLiteral ) ) ( ( (lv_value_8_1= ruleLogicalOperations | lv_value_8_2= ruleFilledArray ) ) )
                    {
                    // InternalOptGrammar.g:2756:5: ( (lv_indexes_4_0= ruleArrayIndex ) )+
                    int cnt62=0;
                    loop62:
                    do {
                        int alt62=2;
                        int LA62_0 = input.LA(1);

                        if ( (LA62_0==25) ) {
                            alt62=1;
                        }


                        switch (alt62) {
                    	case 1 :
                    	    // InternalOptGrammar.g:2757:6: (lv_indexes_4_0= ruleArrayIndex )
                    	    {
                    	    // InternalOptGrammar.g:2757:6: (lv_indexes_4_0= ruleArrayIndex )
                    	    // InternalOptGrammar.g:2758:7: lv_indexes_4_0= ruleArrayIndex
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getArrayDefinitionAccess().getIndexesArrayIndexParserRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_56);
                    	    lv_indexes_4_0=ruleArrayIndex();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getArrayDefinitionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"indexes",
                    	      								lv_indexes_4_0,
                    	      								"org.unicam.myGrammar.OptGrammar.ArrayIndex");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt62 >= 1 ) break loop62;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(62, input);
                                throw eee;
                        }
                        cnt62++;
                    } while (true);

                    // InternalOptGrammar.g:2775:5: (otherlv_5= '.' ( (lv_field_6_0= RULE_ID ) ) )?
                    int alt63=2;
                    int LA63_0 = input.LA(1);

                    if ( (LA63_0==32) ) {
                        alt63=1;
                    }
                    switch (alt63) {
                        case 1 :
                            // InternalOptGrammar.g:2776:6: otherlv_5= '.' ( (lv_field_6_0= RULE_ID ) )
                            {
                            otherlv_5=(Token)match(input,32,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getArrayDefinitionAccess().getFullStopKeyword_1_1_1_0());
                              					
                            }
                            // InternalOptGrammar.g:2780:6: ( (lv_field_6_0= RULE_ID ) )
                            // InternalOptGrammar.g:2781:7: (lv_field_6_0= RULE_ID )
                            {
                            // InternalOptGrammar.g:2781:7: (lv_field_6_0= RULE_ID )
                            // InternalOptGrammar.g:2782:8: lv_field_6_0= RULE_ID
                            {
                            lv_field_6_0=(Token)match(input,RULE_ID,FOLLOW_57); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_field_6_0, grammarAccess.getArrayDefinitionAccess().getFieldIDTerminalRuleCall_1_1_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getArrayDefinitionRule());
                              								}
                              								setWithLastConsumed(
                              									current,
                              									"field",
                              									lv_field_6_0,
                              									"org.eclipse.xtext.common.Terminals.ID");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalOptGrammar.g:2799:5: ( (lv_operator_7_0= ruleOperationAssegnationLiteral ) )
                    // InternalOptGrammar.g:2800:6: (lv_operator_7_0= ruleOperationAssegnationLiteral )
                    {
                    // InternalOptGrammar.g:2800:6: (lv_operator_7_0= ruleOperationAssegnationLiteral )
                    // InternalOptGrammar.g:2801:7: lv_operator_7_0= ruleOperationAssegnationLiteral
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getArrayDefinitionAccess().getOperatorOperationAssegnationLiteralParserRuleCall_1_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_47);
                    lv_operator_7_0=ruleOperationAssegnationLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getArrayDefinitionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_7_0,
                      								"org.unicam.myGrammar.OptGrammar.OperationAssegnationLiteral");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalOptGrammar.g:2818:5: ( ( (lv_value_8_1= ruleLogicalOperations | lv_value_8_2= ruleFilledArray ) ) )
                    // InternalOptGrammar.g:2819:6: ( (lv_value_8_1= ruleLogicalOperations | lv_value_8_2= ruleFilledArray ) )
                    {
                    // InternalOptGrammar.g:2819:6: ( (lv_value_8_1= ruleLogicalOperations | lv_value_8_2= ruleFilledArray ) )
                    // InternalOptGrammar.g:2820:7: (lv_value_8_1= ruleLogicalOperations | lv_value_8_2= ruleFilledArray )
                    {
                    // InternalOptGrammar.g:2820:7: (lv_value_8_1= ruleLogicalOperations | lv_value_8_2= ruleFilledArray )
                    int alt64=2;
                    int LA64_0 = input.LA(1);

                    if ( ((LA64_0>=RULE_INT && LA64_0<=RULE_TX)||(LA64_0>=59 && LA64_0<=60)||(LA64_0>=62 && LA64_0<=69)||LA64_0==74||(LA64_0>=192 && LA64_0<=193)) ) {
                        alt64=1;
                    }
                    else if ( ((LA64_0>=24 && LA64_0<=25)) ) {
                        alt64=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 64, 0, input);

                        throw nvae;
                    }
                    switch (alt64) {
                        case 1 :
                            // InternalOptGrammar.g:2821:8: lv_value_8_1= ruleLogicalOperations
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getArrayDefinitionAccess().getValueLogicalOperationsParserRuleCall_1_1_3_0_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_value_8_1=ruleLogicalOperations();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getArrayDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"value",
                              									lv_value_8_1,
                              									"org.unicam.myGrammar.OptGrammar.LogicalOperations");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalOptGrammar.g:2837:8: lv_value_8_2= ruleFilledArray
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getArrayDefinitionAccess().getValueFilledArrayParserRuleCall_1_1_3_0_1());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_value_8_2=ruleFilledArray();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getArrayDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"value",
                              									lv_value_8_2,
                              									"org.unicam.myGrammar.OptGrammar.FilledArray");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayDefinition"


    // $ANTLR start "entryRuleFieldDefinition"
    // InternalOptGrammar.g:2861:1: entryRuleFieldDefinition returns [EObject current=null] : iv_ruleFieldDefinition= ruleFieldDefinition EOF ;
    public final EObject entryRuleFieldDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFieldDefinition = null;


        try {
            // InternalOptGrammar.g:2861:56: (iv_ruleFieldDefinition= ruleFieldDefinition EOF )
            // InternalOptGrammar.g:2862:2: iv_ruleFieldDefinition= ruleFieldDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFieldDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFieldDefinition=ruleFieldDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFieldDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFieldDefinition"


    // $ANTLR start "ruleFieldDefinition"
    // InternalOptGrammar.g:2868:1: ruleFieldDefinition returns [EObject current=null] : (this_FieldAccess_0= ruleFieldAccess otherlv_1= '=' ( ( (lv_value_2_1= ruleLogicalOperations | lv_value_2_2= ruleSingleDefinition ) ) ) ) ;
    public final EObject ruleFieldDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_FieldAccess_0 = null;

        EObject lv_value_2_1 = null;

        EObject lv_value_2_2 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:2874:2: ( (this_FieldAccess_0= ruleFieldAccess otherlv_1= '=' ( ( (lv_value_2_1= ruleLogicalOperations | lv_value_2_2= ruleSingleDefinition ) ) ) ) )
            // InternalOptGrammar.g:2875:2: (this_FieldAccess_0= ruleFieldAccess otherlv_1= '=' ( ( (lv_value_2_1= ruleLogicalOperations | lv_value_2_2= ruleSingleDefinition ) ) ) )
            {
            // InternalOptGrammar.g:2875:2: (this_FieldAccess_0= ruleFieldAccess otherlv_1= '=' ( ( (lv_value_2_1= ruleLogicalOperations | lv_value_2_2= ruleSingleDefinition ) ) ) )
            // InternalOptGrammar.g:2876:3: this_FieldAccess_0= ruleFieldAccess otherlv_1= '=' ( ( (lv_value_2_1= ruleLogicalOperations | lv_value_2_2= ruleSingleDefinition ) ) )
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFieldDefinitionAccess().getFieldAccessParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_58);
            this_FieldAccess_0=ruleFieldAccess();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FieldAccess_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,23,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFieldDefinitionAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalOptGrammar.g:2888:3: ( ( (lv_value_2_1= ruleLogicalOperations | lv_value_2_2= ruleSingleDefinition ) ) )
            // InternalOptGrammar.g:2889:4: ( (lv_value_2_1= ruleLogicalOperations | lv_value_2_2= ruleSingleDefinition ) )
            {
            // InternalOptGrammar.g:2889:4: ( (lv_value_2_1= ruleLogicalOperations | lv_value_2_2= ruleSingleDefinition ) )
            // InternalOptGrammar.g:2890:5: (lv_value_2_1= ruleLogicalOperations | lv_value_2_2= ruleSingleDefinition )
            {
            // InternalOptGrammar.g:2890:5: (lv_value_2_1= ruleLogicalOperations | lv_value_2_2= ruleSingleDefinition )
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( ((LA66_0>=RULE_INT && LA66_0<=RULE_TX)||(LA66_0>=59 && LA66_0<=60)||(LA66_0>=62 && LA66_0<=69)||LA66_0==74||(LA66_0>=192 && LA66_0<=193)) ) {
                alt66=1;
            }
            else if ( (LA66_0==RULE_ID||(LA66_0>=41 && LA66_0<=42)) ) {
                alt66=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;
            }
            switch (alt66) {
                case 1 :
                    // InternalOptGrammar.g:2891:6: lv_value_2_1= ruleLogicalOperations
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFieldDefinitionAccess().getValueLogicalOperationsParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_2_1=ruleLogicalOperations();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFieldDefinitionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_2_1,
                      							"org.unicam.myGrammar.OptGrammar.LogicalOperations");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:2907:6: lv_value_2_2= ruleSingleDefinition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFieldDefinitionAccess().getValueSingleDefinitionParserRuleCall_2_0_1());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_2_2=ruleSingleDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFieldDefinitionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_2_2,
                      							"org.unicam.myGrammar.OptGrammar.SingleDefinition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFieldDefinition"


    // $ANTLR start "entryRuleMappingDefinition"
    // InternalOptGrammar.g:2929:1: entryRuleMappingDefinition returns [EObject current=null] : iv_ruleMappingDefinition= ruleMappingDefinition EOF ;
    public final EObject entryRuleMappingDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingDefinition = null;


        try {
            // InternalOptGrammar.g:2929:58: (iv_ruleMappingDefinition= ruleMappingDefinition EOF )
            // InternalOptGrammar.g:2930:2: iv_ruleMappingDefinition= ruleMappingDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMappingDefinition=ruleMappingDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingDefinition"


    // $ANTLR start "ruleMappingDefinition"
    // InternalOptGrammar.g:2936:1: ruleMappingDefinition returns [EObject current=null] : (this_MappingAccess_0= ruleMappingAccess otherlv_1= '=' ( ( (lv_sec_2_1= ruleLogicalOperations | lv_sec_2_2= ruleFilledArray ) ) ) ) ;
    public final EObject ruleMappingDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_MappingAccess_0 = null;

        EObject lv_sec_2_1 = null;

        EObject lv_sec_2_2 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:2942:2: ( (this_MappingAccess_0= ruleMappingAccess otherlv_1= '=' ( ( (lv_sec_2_1= ruleLogicalOperations | lv_sec_2_2= ruleFilledArray ) ) ) ) )
            // InternalOptGrammar.g:2943:2: (this_MappingAccess_0= ruleMappingAccess otherlv_1= '=' ( ( (lv_sec_2_1= ruleLogicalOperations | lv_sec_2_2= ruleFilledArray ) ) ) )
            {
            // InternalOptGrammar.g:2943:2: (this_MappingAccess_0= ruleMappingAccess otherlv_1= '=' ( ( (lv_sec_2_1= ruleLogicalOperations | lv_sec_2_2= ruleFilledArray ) ) ) )
            // InternalOptGrammar.g:2944:3: this_MappingAccess_0= ruleMappingAccess otherlv_1= '=' ( ( (lv_sec_2_1= ruleLogicalOperations | lv_sec_2_2= ruleFilledArray ) ) )
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMappingDefinitionAccess().getMappingAccessParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_58);
            this_MappingAccess_0=ruleMappingAccess();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MappingAccess_0;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_1=(Token)match(input,23,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMappingDefinitionAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalOptGrammar.g:2956:3: ( ( (lv_sec_2_1= ruleLogicalOperations | lv_sec_2_2= ruleFilledArray ) ) )
            // InternalOptGrammar.g:2957:4: ( (lv_sec_2_1= ruleLogicalOperations | lv_sec_2_2= ruleFilledArray ) )
            {
            // InternalOptGrammar.g:2957:4: ( (lv_sec_2_1= ruleLogicalOperations | lv_sec_2_2= ruleFilledArray ) )
            // InternalOptGrammar.g:2958:5: (lv_sec_2_1= ruleLogicalOperations | lv_sec_2_2= ruleFilledArray )
            {
            // InternalOptGrammar.g:2958:5: (lv_sec_2_1= ruleLogicalOperations | lv_sec_2_2= ruleFilledArray )
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( ((LA67_0>=RULE_INT && LA67_0<=RULE_TX)||(LA67_0>=59 && LA67_0<=60)||(LA67_0>=62 && LA67_0<=69)||LA67_0==74||(LA67_0>=192 && LA67_0<=193)) ) {
                alt67=1;
            }
            else if ( ((LA67_0>=24 && LA67_0<=25)) ) {
                alt67=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;
            }
            switch (alt67) {
                case 1 :
                    // InternalOptGrammar.g:2959:6: lv_sec_2_1= ruleLogicalOperations
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMappingDefinitionAccess().getSecLogicalOperationsParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_sec_2_1=ruleLogicalOperations();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMappingDefinitionRule());
                      						}
                      						set(
                      							current,
                      							"sec",
                      							lv_sec_2_1,
                      							"org.unicam.myGrammar.OptGrammar.LogicalOperations");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:2975:6: lv_sec_2_2= ruleFilledArray
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMappingDefinitionAccess().getSecFilledArrayParserRuleCall_2_0_1());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_sec_2_2=ruleFilledArray();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMappingDefinitionRule());
                      						}
                      						set(
                      							current,
                      							"sec",
                      							lv_sec_2_2,
                      							"org.unicam.myGrammar.OptGrammar.FilledArray");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingDefinition"


    // $ANTLR start "entryRuleFunctionCallListArguments"
    // InternalOptGrammar.g:2997:1: entryRuleFunctionCallListArguments returns [EObject current=null] : iv_ruleFunctionCallListArguments= ruleFunctionCallListArguments EOF ;
    public final EObject entryRuleFunctionCallListArguments() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCallListArguments = null;


        try {
            // InternalOptGrammar.g:2997:66: (iv_ruleFunctionCallListArguments= ruleFunctionCallListArguments EOF )
            // InternalOptGrammar.g:2998:2: iv_ruleFunctionCallListArguments= ruleFunctionCallListArguments EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallListArgumentsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionCallListArguments=ruleFunctionCallListArguments();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCallListArguments; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCallListArguments"


    // $ANTLR start "ruleFunctionCallListArguments"
    // InternalOptGrammar.g:3004:1: ruleFunctionCallListArguments returns [EObject current=null] : (otherlv_0= '(' () ( ( (lv_arguments_2_0= ruleLogicalOperations ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleLogicalOperations ) ) )* )? otherlv_5= ')' ) ;
    public final EObject ruleFunctionCallListArguments() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_arguments_2_0 = null;

        EObject lv_arguments_4_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:3010:2: ( (otherlv_0= '(' () ( ( (lv_arguments_2_0= ruleLogicalOperations ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleLogicalOperations ) ) )* )? otherlv_5= ')' ) )
            // InternalOptGrammar.g:3011:2: (otherlv_0= '(' () ( ( (lv_arguments_2_0= ruleLogicalOperations ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleLogicalOperations ) ) )* )? otherlv_5= ')' )
            {
            // InternalOptGrammar.g:3011:2: (otherlv_0= '(' () ( ( (lv_arguments_2_0= ruleLogicalOperations ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleLogicalOperations ) ) )* )? otherlv_5= ')' )
            // InternalOptGrammar.g:3012:3: otherlv_0= '(' () ( ( (lv_arguments_2_0= ruleLogicalOperations ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleLogicalOperations ) ) )* )? otherlv_5= ')'
            {
            otherlv_0=(Token)match(input,34,FOLLOW_59); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionCallListArgumentsAccess().getLeftParenthesisKeyword_0());
              		
            }
            // InternalOptGrammar.g:3016:3: ()
            // InternalOptGrammar.g:3017:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getFunctionCallListArgumentsAccess().getFunctionCallListArgumentsAction_1(),
              					current);
              			
            }

            }

            // InternalOptGrammar.g:3023:3: ( ( (lv_arguments_2_0= ruleLogicalOperations ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleLogicalOperations ) ) )* )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( ((LA69_0>=RULE_INT && LA69_0<=RULE_TX)||(LA69_0>=59 && LA69_0<=60)||(LA69_0>=62 && LA69_0<=69)||LA69_0==74||(LA69_0>=192 && LA69_0<=193)) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalOptGrammar.g:3024:4: ( (lv_arguments_2_0= ruleLogicalOperations ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleLogicalOperations ) ) )*
                    {
                    // InternalOptGrammar.g:3024:4: ( (lv_arguments_2_0= ruleLogicalOperations ) )
                    // InternalOptGrammar.g:3025:5: (lv_arguments_2_0= ruleLogicalOperations )
                    {
                    // InternalOptGrammar.g:3025:5: (lv_arguments_2_0= ruleLogicalOperations )
                    // InternalOptGrammar.g:3026:6: lv_arguments_2_0= ruleLogicalOperations
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionCallListArgumentsAccess().getArgumentsLogicalOperationsParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_50);
                    lv_arguments_2_0=ruleLogicalOperations();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionCallListArgumentsRule());
                      						}
                      						add(
                      							current,
                      							"arguments",
                      							lv_arguments_2_0,
                      							"org.unicam.myGrammar.OptGrammar.LogicalOperations");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalOptGrammar.g:3043:4: (otherlv_3= ',' ( (lv_arguments_4_0= ruleLogicalOperations ) ) )*
                    loop68:
                    do {
                        int alt68=2;
                        int LA68_0 = input.LA(1);

                        if ( (LA68_0==22) ) {
                            alt68=1;
                        }


                        switch (alt68) {
                    	case 1 :
                    	    // InternalOptGrammar.g:3044:5: otherlv_3= ',' ( (lv_arguments_4_0= ruleLogicalOperations ) )
                    	    {
                    	    otherlv_3=(Token)match(input,22,FOLLOW_17); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getFunctionCallListArgumentsAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalOptGrammar.g:3048:5: ( (lv_arguments_4_0= ruleLogicalOperations ) )
                    	    // InternalOptGrammar.g:3049:6: (lv_arguments_4_0= ruleLogicalOperations )
                    	    {
                    	    // InternalOptGrammar.g:3049:6: (lv_arguments_4_0= ruleLogicalOperations )
                    	    // InternalOptGrammar.g:3050:7: lv_arguments_4_0= ruleLogicalOperations
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getFunctionCallListArgumentsAccess().getArgumentsLogicalOperationsParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_50);
                    	    lv_arguments_4_0=ruleLogicalOperations();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getFunctionCallListArgumentsRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"arguments",
                    	      								lv_arguments_4_0,
                    	      								"org.unicam.myGrammar.OptGrammar.LogicalOperations");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop68;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getFunctionCallListArgumentsAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCallListArguments"


    // $ANTLR start "entryRuleFunctionCallArguments"
    // InternalOptGrammar.g:3077:1: entryRuleFunctionCallArguments returns [EObject current=null] : iv_ruleFunctionCallArguments= ruleFunctionCallArguments EOF ;
    public final EObject entryRuleFunctionCallArguments() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCallArguments = null;


        try {
            // InternalOptGrammar.g:3077:62: (iv_ruleFunctionCallArguments= ruleFunctionCallArguments EOF )
            // InternalOptGrammar.g:3078:2: iv_ruleFunctionCallArguments= ruleFunctionCallArguments EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallArgumentsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionCallArguments=ruleFunctionCallArguments();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCallArguments; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCallArguments"


    // $ANTLR start "ruleFunctionCallArguments"
    // InternalOptGrammar.g:3084:1: ruleFunctionCallArguments returns [EObject current=null] : ( (otherlv_0= '(' otherlv_1= '{' () ( ( (lv_args_3_0= ruleFunctionCallArg ) ) (otherlv_4= ',' ( (lv_args_5_0= ruleFunctionCallArg ) ) )* )? otherlv_6= '}' otherlv_7= ')' ) | this_FunctionCallListArguments_8= ruleFunctionCallListArguments ) ;
    public final EObject ruleFunctionCallArguments() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_args_3_0 = null;

        EObject lv_args_5_0 = null;

        EObject this_FunctionCallListArguments_8 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:3090:2: ( ( (otherlv_0= '(' otherlv_1= '{' () ( ( (lv_args_3_0= ruleFunctionCallArg ) ) (otherlv_4= ',' ( (lv_args_5_0= ruleFunctionCallArg ) ) )* )? otherlv_6= '}' otherlv_7= ')' ) | this_FunctionCallListArguments_8= ruleFunctionCallListArguments ) )
            // InternalOptGrammar.g:3091:2: ( (otherlv_0= '(' otherlv_1= '{' () ( ( (lv_args_3_0= ruleFunctionCallArg ) ) (otherlv_4= ',' ( (lv_args_5_0= ruleFunctionCallArg ) ) )* )? otherlv_6= '}' otherlv_7= ')' ) | this_FunctionCallListArguments_8= ruleFunctionCallListArguments )
            {
            // InternalOptGrammar.g:3091:2: ( (otherlv_0= '(' otherlv_1= '{' () ( ( (lv_args_3_0= ruleFunctionCallArg ) ) (otherlv_4= ',' ( (lv_args_5_0= ruleFunctionCallArg ) ) )* )? otherlv_6= '}' otherlv_7= ')' ) | this_FunctionCallListArguments_8= ruleFunctionCallListArguments )
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==34) ) {
                int LA72_1 = input.LA(2);

                if ( (LA72_1==17) ) {
                    alt72=1;
                }
                else if ( ((LA72_1>=RULE_INT && LA72_1<=RULE_TX)||LA72_1==36||(LA72_1>=59 && LA72_1<=60)||(LA72_1>=62 && LA72_1<=69)||LA72_1==74||(LA72_1>=192 && LA72_1<=193)) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 72, 0, input);

                throw nvae;
            }
            switch (alt72) {
                case 1 :
                    // InternalOptGrammar.g:3092:3: (otherlv_0= '(' otherlv_1= '{' () ( ( (lv_args_3_0= ruleFunctionCallArg ) ) (otherlv_4= ',' ( (lv_args_5_0= ruleFunctionCallArg ) ) )* )? otherlv_6= '}' otherlv_7= ')' )
                    {
                    // InternalOptGrammar.g:3092:3: (otherlv_0= '(' otherlv_1= '{' () ( ( (lv_args_3_0= ruleFunctionCallArg ) ) (otherlv_4= ',' ( (lv_args_5_0= ruleFunctionCallArg ) ) )* )? otherlv_6= '}' otherlv_7= ')' )
                    // InternalOptGrammar.g:3093:4: otherlv_0= '(' otherlv_1= '{' () ( ( (lv_args_3_0= ruleFunctionCallArg ) ) (otherlv_4= ',' ( (lv_args_5_0= ruleFunctionCallArg ) ) )* )? otherlv_6= '}' otherlv_7= ')'
                    {
                    otherlv_0=(Token)match(input,34,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getFunctionCallArgumentsAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,17,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getFunctionCallArgumentsAccess().getLeftCurlyBracketKeyword_0_1());
                      			
                    }
                    // InternalOptGrammar.g:3101:4: ()
                    // InternalOptGrammar.g:3102:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getFunctionCallArgumentsAccess().getFunctionCallArgumentsAction_0_2(),
                      						current);
                      				
                    }

                    }

                    // InternalOptGrammar.g:3108:4: ( ( (lv_args_3_0= ruleFunctionCallArg ) ) (otherlv_4= ',' ( (lv_args_5_0= ruleFunctionCallArg ) ) )* )?
                    int alt71=2;
                    int LA71_0 = input.LA(1);

                    if ( (LA71_0==RULE_ID) ) {
                        alt71=1;
                    }
                    switch (alt71) {
                        case 1 :
                            // InternalOptGrammar.g:3109:5: ( (lv_args_3_0= ruleFunctionCallArg ) ) (otherlv_4= ',' ( (lv_args_5_0= ruleFunctionCallArg ) ) )*
                            {
                            // InternalOptGrammar.g:3109:5: ( (lv_args_3_0= ruleFunctionCallArg ) )
                            // InternalOptGrammar.g:3110:6: (lv_args_3_0= ruleFunctionCallArg )
                            {
                            // InternalOptGrammar.g:3110:6: (lv_args_3_0= ruleFunctionCallArg )
                            // InternalOptGrammar.g:3111:7: lv_args_3_0= ruleFunctionCallArg
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getFunctionCallArgumentsAccess().getArgsFunctionCallArgParserRuleCall_0_3_0_0());
                              						
                            }
                            pushFollow(FOLLOW_11);
                            lv_args_3_0=ruleFunctionCallArg();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getFunctionCallArgumentsRule());
                              							}
                              							add(
                              								current,
                              								"args",
                              								lv_args_3_0,
                              								"org.unicam.myGrammar.OptGrammar.FunctionCallArg");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalOptGrammar.g:3128:5: (otherlv_4= ',' ( (lv_args_5_0= ruleFunctionCallArg ) ) )*
                            loop70:
                            do {
                                int alt70=2;
                                int LA70_0 = input.LA(1);

                                if ( (LA70_0==22) ) {
                                    alt70=1;
                                }


                                switch (alt70) {
                            	case 1 :
                            	    // InternalOptGrammar.g:3129:6: otherlv_4= ',' ( (lv_args_5_0= ruleFunctionCallArg ) )
                            	    {
                            	    otherlv_4=(Token)match(input,22,FOLLOW_4); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_4, grammarAccess.getFunctionCallArgumentsAccess().getCommaKeyword_0_3_1_0());
                            	      					
                            	    }
                            	    // InternalOptGrammar.g:3133:6: ( (lv_args_5_0= ruleFunctionCallArg ) )
                            	    // InternalOptGrammar.g:3134:7: (lv_args_5_0= ruleFunctionCallArg )
                            	    {
                            	    // InternalOptGrammar.g:3134:7: (lv_args_5_0= ruleFunctionCallArg )
                            	    // InternalOptGrammar.g:3135:8: lv_args_5_0= ruleFunctionCallArg
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getFunctionCallArgumentsAccess().getArgsFunctionCallArgParserRuleCall_0_3_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_11);
                            	    lv_args_5_0=ruleFunctionCallArg();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getFunctionCallArgumentsRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"args",
                            	      									lv_args_5_0,
                            	      									"org.unicam.myGrammar.OptGrammar.FunctionCallArg");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop70;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,19,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getFunctionCallArgumentsAccess().getRightCurlyBracketKeyword_0_4());
                      			
                    }
                    otherlv_7=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getFunctionCallArgumentsAccess().getRightParenthesisKeyword_0_5());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:3164:3: this_FunctionCallListArguments_8= ruleFunctionCallListArguments
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFunctionCallArgumentsAccess().getFunctionCallListArgumentsParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionCallListArguments_8=ruleFunctionCallListArguments();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionCallListArguments_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCallArguments"


    // $ANTLR start "entryRuleFunctionCallArg"
    // InternalOptGrammar.g:3176:1: entryRuleFunctionCallArg returns [EObject current=null] : iv_ruleFunctionCallArg= ruleFunctionCallArg EOF ;
    public final EObject entryRuleFunctionCallArg() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCallArg = null;


        try {
            // InternalOptGrammar.g:3176:56: (iv_ruleFunctionCallArg= ruleFunctionCallArg EOF )
            // InternalOptGrammar.g:3177:2: iv_ruleFunctionCallArg= ruleFunctionCallArg EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallArgRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionCallArg=ruleFunctionCallArg();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCallArg; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCallArg"


    // $ANTLR start "ruleFunctionCallArg"
    // InternalOptGrammar.g:3183:1: ruleFunctionCallArg returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_expr_2_0= ruleLogicalOperations ) ) ) ;
    public final EObject ruleFunctionCallArg() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        EObject lv_expr_2_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:3189:2: ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_expr_2_0= ruleLogicalOperations ) ) ) )
            // InternalOptGrammar.g:3190:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_expr_2_0= ruleLogicalOperations ) ) )
            {
            // InternalOptGrammar.g:3190:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_expr_2_0= ruleLogicalOperations ) ) )
            // InternalOptGrammar.g:3191:3: ( (lv_name_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_expr_2_0= ruleLogicalOperations ) )
            {
            // InternalOptGrammar.g:3191:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalOptGrammar.g:3192:4: (lv_name_0_0= RULE_ID )
            {
            // InternalOptGrammar.g:3192:4: (lv_name_0_0= RULE_ID )
            // InternalOptGrammar.g:3193:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getFunctionCallArgAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFunctionCallArgRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.eclipse.xtext.common.Terminals.ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,43,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFunctionCallArgAccess().getColonKeyword_1());
              		
            }
            // InternalOptGrammar.g:3213:3: ( (lv_expr_2_0= ruleLogicalOperations ) )
            // InternalOptGrammar.g:3214:4: (lv_expr_2_0= ruleLogicalOperations )
            {
            // InternalOptGrammar.g:3214:4: (lv_expr_2_0= ruleLogicalOperations )
            // InternalOptGrammar.g:3215:5: lv_expr_2_0= ruleLogicalOperations
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionCallArgAccess().getExprLogicalOperationsParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr_2_0=ruleLogicalOperations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionCallArgRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_2_0,
              						"org.unicam.myGrammar.OptGrammar.LogicalOperations");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCallArg"


    // $ANTLR start "entryRuleFunctionDefinitionOptionalElement"
    // InternalOptGrammar.g:3236:1: entryRuleFunctionDefinitionOptionalElement returns [EObject current=null] : iv_ruleFunctionDefinitionOptionalElement= ruleFunctionDefinitionOptionalElement EOF ;
    public final EObject entryRuleFunctionDefinitionOptionalElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionDefinitionOptionalElement = null;


        try {
            // InternalOptGrammar.g:3236:74: (iv_ruleFunctionDefinitionOptionalElement= ruleFunctionDefinitionOptionalElement EOF )
            // InternalOptGrammar.g:3237:2: iv_ruleFunctionDefinitionOptionalElement= ruleFunctionDefinitionOptionalElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionDefinitionOptionalElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionDefinitionOptionalElement=ruleFunctionDefinitionOptionalElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionDefinitionOptionalElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionDefinitionOptionalElement"


    // $ANTLR start "ruleFunctionDefinitionOptionalElement"
    // InternalOptGrammar.g:3243:1: ruleFunctionDefinitionOptionalElement returns [EObject current=null] : (this_Const_0= ruleConst | this_VisibilitySpecifier_1= ruleVisibilitySpecifier ) ;
    public final EObject ruleFunctionDefinitionOptionalElement() throws RecognitionException {
        EObject current = null;

        EObject this_Const_0 = null;

        EObject this_VisibilitySpecifier_1 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:3249:2: ( (this_Const_0= ruleConst | this_VisibilitySpecifier_1= ruleVisibilitySpecifier ) )
            // InternalOptGrammar.g:3250:2: (this_Const_0= ruleConst | this_VisibilitySpecifier_1= ruleVisibilitySpecifier )
            {
            // InternalOptGrammar.g:3250:2: (this_Const_0= ruleConst | this_VisibilitySpecifier_1= ruleVisibilitySpecifier )
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==27) ) {
                alt73=1;
            }
            else if ( ((LA73_0>=180 && LA73_0<=183)) ) {
                alt73=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 73, 0, input);

                throw nvae;
            }
            switch (alt73) {
                case 1 :
                    // InternalOptGrammar.g:3251:3: this_Const_0= ruleConst
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFunctionDefinitionOptionalElementAccess().getConstParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Const_0=ruleConst();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Const_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:3260:3: this_VisibilitySpecifier_1= ruleVisibilitySpecifier
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFunctionDefinitionOptionalElementAccess().getVisibilitySpecifierParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_VisibilitySpecifier_1=ruleVisibilitySpecifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VisibilitySpecifier_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionDefinitionOptionalElement"


    // $ANTLR start "entryRuleConst"
    // InternalOptGrammar.g:3272:1: entryRuleConst returns [EObject current=null] : iv_ruleConst= ruleConst EOF ;
    public final EObject entryRuleConst() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConst = null;


        try {
            // InternalOptGrammar.g:3272:46: (iv_ruleConst= ruleConst EOF )
            // InternalOptGrammar.g:3273:2: iv_ruleConst= ruleConst EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConst=ruleConst();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConst; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConst"


    // $ANTLR start "ruleConst"
    // InternalOptGrammar.g:3279:1: ruleConst returns [EObject current=null] : (otherlv_0= 'constant' () ) ;
    public final EObject ruleConst() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:3285:2: ( (otherlv_0= 'constant' () ) )
            // InternalOptGrammar.g:3286:2: (otherlv_0= 'constant' () )
            {
            // InternalOptGrammar.g:3286:2: (otherlv_0= 'constant' () )
            // InternalOptGrammar.g:3287:3: otherlv_0= 'constant' ()
            {
            otherlv_0=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getConstAccess().getConstantKeyword_0());
              		
            }
            // InternalOptGrammar.g:3291:3: ()
            // InternalOptGrammar.g:3292:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getConstAccess().getConstAction_1(),
              					current);
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConst"


    // $ANTLR start "entryRuleVisibilitySpecifier"
    // InternalOptGrammar.g:3302:1: entryRuleVisibilitySpecifier returns [EObject current=null] : iv_ruleVisibilitySpecifier= ruleVisibilitySpecifier EOF ;
    public final EObject entryRuleVisibilitySpecifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVisibilitySpecifier = null;


        try {
            // InternalOptGrammar.g:3302:60: (iv_ruleVisibilitySpecifier= ruleVisibilitySpecifier EOF )
            // InternalOptGrammar.g:3303:2: iv_ruleVisibilitySpecifier= ruleVisibilitySpecifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVisibilitySpecifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVisibilitySpecifier=ruleVisibilitySpecifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVisibilitySpecifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVisibilitySpecifier"


    // $ANTLR start "ruleVisibilitySpecifier"
    // InternalOptGrammar.g:3309:1: ruleVisibilitySpecifier returns [EObject current=null] : ( (lv_visibility_0_0= ruleVisibilityEnum ) ) ;
    public final EObject ruleVisibilitySpecifier() throws RecognitionException {
        EObject current = null;

        EObject lv_visibility_0_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:3315:2: ( ( (lv_visibility_0_0= ruleVisibilityEnum ) ) )
            // InternalOptGrammar.g:3316:2: ( (lv_visibility_0_0= ruleVisibilityEnum ) )
            {
            // InternalOptGrammar.g:3316:2: ( (lv_visibility_0_0= ruleVisibilityEnum ) )
            // InternalOptGrammar.g:3317:3: (lv_visibility_0_0= ruleVisibilityEnum )
            {
            // InternalOptGrammar.g:3317:3: (lv_visibility_0_0= ruleVisibilityEnum )
            // InternalOptGrammar.g:3318:4: lv_visibility_0_0= ruleVisibilityEnum
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getVisibilitySpecifierAccess().getVisibilityVisibilityEnumParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_visibility_0_0=ruleVisibilityEnum();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getVisibilitySpecifierRule());
              				}
              				set(
              					current,
              					"visibility",
              					lv_visibility_0_0,
              					"org.unicam.myGrammar.OptGrammar.VisibilityEnum");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVisibilitySpecifier"


    // $ANTLR start "entryRuleVariable"
    // InternalOptGrammar.g:3338:1: entryRuleVariable returns [EObject current=null] : iv_ruleVariable= ruleVariable EOF ;
    public final EObject entryRuleVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariable = null;


        try {
            // InternalOptGrammar.g:3338:49: (iv_ruleVariable= ruleVariable EOF )
            // InternalOptGrammar.g:3339:2: iv_ruleVariable= ruleVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVariable=ruleVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariable"


    // $ANTLR start "ruleVariable"
    // InternalOptGrammar.g:3345:1: ruleVariable returns [EObject current=null] : ( (lv_name_0_0= RULE_ID ) ) ;
    public final EObject ruleVariable() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:3351:2: ( ( (lv_name_0_0= RULE_ID ) ) )
            // InternalOptGrammar.g:3352:2: ( (lv_name_0_0= RULE_ID ) )
            {
            // InternalOptGrammar.g:3352:2: ( (lv_name_0_0= RULE_ID ) )
            // InternalOptGrammar.g:3353:3: (lv_name_0_0= RULE_ID )
            {
            // InternalOptGrammar.g:3353:3: (lv_name_0_0= RULE_ID )
            // InternalOptGrammar.g:3354:4: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getVariableRule());
              				}
              				setWithLastConsumed(
              					current,
              					"name",
              					lv_name_0_0,
              					"org.eclipse.xtext.common.Terminals.ID");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariable"


    // $ANTLR start "entryRuleVariableDeclarationOptionalElement"
    // InternalOptGrammar.g:3373:1: entryRuleVariableDeclarationOptionalElement returns [EObject current=null] : iv_ruleVariableDeclarationOptionalElement= ruleVariableDeclarationOptionalElement EOF ;
    public final EObject entryRuleVariableDeclarationOptionalElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclarationOptionalElement = null;


        try {
            // InternalOptGrammar.g:3373:75: (iv_ruleVariableDeclarationOptionalElement= ruleVariableDeclarationOptionalElement EOF )
            // InternalOptGrammar.g:3374:2: iv_ruleVariableDeclarationOptionalElement= ruleVariableDeclarationOptionalElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationOptionalElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVariableDeclarationOptionalElement=ruleVariableDeclarationOptionalElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclarationOptionalElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclarationOptionalElement"


    // $ANTLR start "ruleVariableDeclarationOptionalElement"
    // InternalOptGrammar.g:3380:1: ruleVariableDeclarationOptionalElement returns [EObject current=null] : (this_VisibilitySpecifier_0= ruleVisibilitySpecifier | this_IndexedSpecifer_1= ruleIndexedSpecifer | this_ConstantSpecifier_2= ruleConstantSpecifier | this_LocationSpecifier_3= ruleLocationSpecifier ) ;
    public final EObject ruleVariableDeclarationOptionalElement() throws RecognitionException {
        EObject current = null;

        EObject this_VisibilitySpecifier_0 = null;

        EObject this_IndexedSpecifer_1 = null;

        EObject this_ConstantSpecifier_2 = null;

        EObject this_LocationSpecifier_3 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:3386:2: ( (this_VisibilitySpecifier_0= ruleVisibilitySpecifier | this_IndexedSpecifer_1= ruleIndexedSpecifer | this_ConstantSpecifier_2= ruleConstantSpecifier | this_LocationSpecifier_3= ruleLocationSpecifier ) )
            // InternalOptGrammar.g:3387:2: (this_VisibilitySpecifier_0= ruleVisibilitySpecifier | this_IndexedSpecifer_1= ruleIndexedSpecifer | this_ConstantSpecifier_2= ruleConstantSpecifier | this_LocationSpecifier_3= ruleLocationSpecifier )
            {
            // InternalOptGrammar.g:3387:2: (this_VisibilitySpecifier_0= ruleVisibilitySpecifier | this_IndexedSpecifer_1= ruleIndexedSpecifer | this_ConstantSpecifier_2= ruleConstantSpecifier | this_LocationSpecifier_3= ruleLocationSpecifier )
            int alt74=4;
            switch ( input.LA(1) ) {
            case 180:
            case 181:
            case 182:
            case 183:
                {
                alt74=1;
                }
                break;
            case 47:
                {
                alt74=2;
                }
                break;
            case 27:
                {
                alt74=3;
                }
                break;
            case 177:
            case 178:
            case 179:
                {
                alt74=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;
            }

            switch (alt74) {
                case 1 :
                    // InternalOptGrammar.g:3388:3: this_VisibilitySpecifier_0= ruleVisibilitySpecifier
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVariableDeclarationOptionalElementAccess().getVisibilitySpecifierParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_VisibilitySpecifier_0=ruleVisibilitySpecifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VisibilitySpecifier_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:3397:3: this_IndexedSpecifer_1= ruleIndexedSpecifer
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVariableDeclarationOptionalElementAccess().getIndexedSpeciferParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IndexedSpecifer_1=ruleIndexedSpecifer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IndexedSpecifer_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalOptGrammar.g:3406:3: this_ConstantSpecifier_2= ruleConstantSpecifier
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVariableDeclarationOptionalElementAccess().getConstantSpecifierParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ConstantSpecifier_2=ruleConstantSpecifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ConstantSpecifier_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalOptGrammar.g:3415:3: this_LocationSpecifier_3= ruleLocationSpecifier
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVariableDeclarationOptionalElementAccess().getLocationSpecifierParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LocationSpecifier_3=ruleLocationSpecifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LocationSpecifier_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclarationOptionalElement"


    // $ANTLR start "entryRuleIndexedSpecifer"
    // InternalOptGrammar.g:3427:1: entryRuleIndexedSpecifer returns [EObject current=null] : iv_ruleIndexedSpecifer= ruleIndexedSpecifer EOF ;
    public final EObject entryRuleIndexedSpecifer() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIndexedSpecifer = null;


        try {
            // InternalOptGrammar.g:3427:56: (iv_ruleIndexedSpecifer= ruleIndexedSpecifer EOF )
            // InternalOptGrammar.g:3428:2: iv_ruleIndexedSpecifer= ruleIndexedSpecifer EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIndexedSpeciferRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIndexedSpecifer=ruleIndexedSpecifer();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIndexedSpecifer; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIndexedSpecifer"


    // $ANTLR start "ruleIndexedSpecifer"
    // InternalOptGrammar.g:3434:1: ruleIndexedSpecifer returns [EObject current=null] : (otherlv_0= 'indexed' () ) ;
    public final EObject ruleIndexedSpecifer() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:3440:2: ( (otherlv_0= 'indexed' () ) )
            // InternalOptGrammar.g:3441:2: (otherlv_0= 'indexed' () )
            {
            // InternalOptGrammar.g:3441:2: (otherlv_0= 'indexed' () )
            // InternalOptGrammar.g:3442:3: otherlv_0= 'indexed' ()
            {
            otherlv_0=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIndexedSpeciferAccess().getIndexedKeyword_0());
              		
            }
            // InternalOptGrammar.g:3446:3: ()
            // InternalOptGrammar.g:3447:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getIndexedSpeciferAccess().getIndexedSpeciferAction_1(),
              					current);
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIndexedSpecifer"


    // $ANTLR start "entryRuleConstantSpecifier"
    // InternalOptGrammar.g:3457:1: entryRuleConstantSpecifier returns [EObject current=null] : iv_ruleConstantSpecifier= ruleConstantSpecifier EOF ;
    public final EObject entryRuleConstantSpecifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstantSpecifier = null;


        try {
            // InternalOptGrammar.g:3457:58: (iv_ruleConstantSpecifier= ruleConstantSpecifier EOF )
            // InternalOptGrammar.g:3458:2: iv_ruleConstantSpecifier= ruleConstantSpecifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstantSpecifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstantSpecifier=ruleConstantSpecifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstantSpecifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstantSpecifier"


    // $ANTLR start "ruleConstantSpecifier"
    // InternalOptGrammar.g:3464:1: ruleConstantSpecifier returns [EObject current=null] : (otherlv_0= 'constant' () ) ;
    public final EObject ruleConstantSpecifier() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:3470:2: ( (otherlv_0= 'constant' () ) )
            // InternalOptGrammar.g:3471:2: (otherlv_0= 'constant' () )
            {
            // InternalOptGrammar.g:3471:2: (otherlv_0= 'constant' () )
            // InternalOptGrammar.g:3472:3: otherlv_0= 'constant' ()
            {
            otherlv_0=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getConstantSpecifierAccess().getConstantKeyword_0());
              		
            }
            // InternalOptGrammar.g:3476:3: ()
            // InternalOptGrammar.g:3477:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getConstantSpecifierAccess().getConstantSpecifierAction_1(),
              					current);
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstantSpecifier"


    // $ANTLR start "entryRuleLocationSpecifier"
    // InternalOptGrammar.g:3487:1: entryRuleLocationSpecifier returns [EObject current=null] : iv_ruleLocationSpecifier= ruleLocationSpecifier EOF ;
    public final EObject entryRuleLocationSpecifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLocationSpecifier = null;


        try {
            // InternalOptGrammar.g:3487:58: (iv_ruleLocationSpecifier= ruleLocationSpecifier EOF )
            // InternalOptGrammar.g:3488:2: iv_ruleLocationSpecifier= ruleLocationSpecifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocationSpecifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLocationSpecifier=ruleLocationSpecifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocationSpecifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocationSpecifier"


    // $ANTLR start "ruleLocationSpecifier"
    // InternalOptGrammar.g:3494:1: ruleLocationSpecifier returns [EObject current=null] : ( (lv_location_0_0= ruleLocationSpecifierEnum ) ) ;
    public final EObject ruleLocationSpecifier() throws RecognitionException {
        EObject current = null;

        EObject lv_location_0_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:3500:2: ( ( (lv_location_0_0= ruleLocationSpecifierEnum ) ) )
            // InternalOptGrammar.g:3501:2: ( (lv_location_0_0= ruleLocationSpecifierEnum ) )
            {
            // InternalOptGrammar.g:3501:2: ( (lv_location_0_0= ruleLocationSpecifierEnum ) )
            // InternalOptGrammar.g:3502:3: (lv_location_0_0= ruleLocationSpecifierEnum )
            {
            // InternalOptGrammar.g:3502:3: (lv_location_0_0= ruleLocationSpecifierEnum )
            // InternalOptGrammar.g:3503:4: lv_location_0_0= ruleLocationSpecifierEnum
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getLocationSpecifierAccess().getLocationLocationSpecifierEnumParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_location_0_0=ruleLocationSpecifierEnum();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getLocationSpecifierRule());
              				}
              				set(
              					current,
              					"location",
              					lv_location_0_0,
              					"org.unicam.myGrammar.OptGrammar.LocationSpecifierEnum");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocationSpecifier"


    // $ANTLR start "entryRuleType"
    // InternalOptGrammar.g:3523:1: entryRuleType returns [EObject current=null] : iv_ruleType= ruleType EOF ;
    public final EObject entryRuleType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleType = null;


        try {
            // InternalOptGrammar.g:3523:45: (iv_ruleType= ruleType EOF )
            // InternalOptGrammar.g:3524:2: iv_ruleType= ruleType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleType=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleType"


    // $ANTLR start "ruleType"
    // InternalOptGrammar.g:3530:1: ruleType returns [EObject current=null] : (this_StandardType_0= ruleStandardType | ( (lv_isVarType_1_0= ruleVarType ) ) ) ;
    public final EObject ruleType() throws RecognitionException {
        EObject current = null;

        EObject this_StandardType_0 = null;

        AntlrDatatypeRuleToken lv_isVarType_1_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:3536:2: ( (this_StandardType_0= ruleStandardType | ( (lv_isVarType_1_0= ruleVarType ) ) ) )
            // InternalOptGrammar.g:3537:2: (this_StandardType_0= ruleStandardType | ( (lv_isVarType_1_0= ruleVarType ) ) )
            {
            // InternalOptGrammar.g:3537:2: (this_StandardType_0= ruleStandardType | ( (lv_isVarType_1_0= ruleVarType ) ) )
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==RULE_ID||(LA75_0>=28 && LA75_0<=29)||LA75_0==33||(LA75_0>=75 && LA75_0<=177)||(LA75_0>=180 && LA75_0<=183)) ) {
                alt75=1;
            }
            else if ( (LA75_0==48) ) {
                alt75=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;
            }
            switch (alt75) {
                case 1 :
                    // InternalOptGrammar.g:3538:3: this_StandardType_0= ruleStandardType
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeAccess().getStandardTypeParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StandardType_0=ruleStandardType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StandardType_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:3547:3: ( (lv_isVarType_1_0= ruleVarType ) )
                    {
                    // InternalOptGrammar.g:3547:3: ( (lv_isVarType_1_0= ruleVarType ) )
                    // InternalOptGrammar.g:3548:4: (lv_isVarType_1_0= ruleVarType )
                    {
                    // InternalOptGrammar.g:3548:4: (lv_isVarType_1_0= ruleVarType )
                    // InternalOptGrammar.g:3549:5: lv_isVarType_1_0= ruleVarType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeAccess().getIsVarTypeVarTypeParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_isVarType_1_0=ruleVarType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeRule());
                      					}
                      					set(
                      						current,
                      						"isVarType",
                      						true,
                      						"org.unicam.myGrammar.OptGrammar.VarType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleType"


    // $ANTLR start "entryRuleStandardType"
    // InternalOptGrammar.g:3570:1: entryRuleStandardType returns [EObject current=null] : iv_ruleStandardType= ruleStandardType EOF ;
    public final EObject entryRuleStandardType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStandardType = null;


        try {
            // InternalOptGrammar.g:3570:53: (iv_ruleStandardType= ruleStandardType EOF )
            // InternalOptGrammar.g:3571:2: iv_ruleStandardType= ruleStandardType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStandardTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStandardType=ruleStandardType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStandardType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStandardType"


    // $ANTLR start "ruleStandardType"
    // InternalOptGrammar.g:3577:1: ruleStandardType returns [EObject current=null] : ( (this_ElementaryType_0= ruleElementaryType ( (lv_dimension_1_0= ruleArrayDimensions ) )? ) | this_MappingDeclaration_2= ruleMappingDeclaration | this_QualifiedIdentifier_3= ruleQualifiedIdentifier ) ;
    public final EObject ruleStandardType() throws RecognitionException {
        EObject current = null;

        EObject this_ElementaryType_0 = null;

        EObject lv_dimension_1_0 = null;

        EObject this_MappingDeclaration_2 = null;

        EObject this_QualifiedIdentifier_3 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:3583:2: ( ( (this_ElementaryType_0= ruleElementaryType ( (lv_dimension_1_0= ruleArrayDimensions ) )? ) | this_MappingDeclaration_2= ruleMappingDeclaration | this_QualifiedIdentifier_3= ruleQualifiedIdentifier ) )
            // InternalOptGrammar.g:3584:2: ( (this_ElementaryType_0= ruleElementaryType ( (lv_dimension_1_0= ruleArrayDimensions ) )? ) | this_MappingDeclaration_2= ruleMappingDeclaration | this_QualifiedIdentifier_3= ruleQualifiedIdentifier )
            {
            // InternalOptGrammar.g:3584:2: ( (this_ElementaryType_0= ruleElementaryType ( (lv_dimension_1_0= ruleArrayDimensions ) )? ) | this_MappingDeclaration_2= ruleMappingDeclaration | this_QualifiedIdentifier_3= ruleQualifiedIdentifier )
            int alt77=3;
            switch ( input.LA(1) ) {
            case 28:
            case 29:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 123:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 176:
                {
                alt77=1;
                }
                break;
            case 33:
            case 177:
            case 180:
            case 181:
            case 182:
            case 183:
                {
                alt77=2;
                }
                break;
            case RULE_ID:
                {
                alt77=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 77, 0, input);

                throw nvae;
            }

            switch (alt77) {
                case 1 :
                    // InternalOptGrammar.g:3585:3: (this_ElementaryType_0= ruleElementaryType ( (lv_dimension_1_0= ruleArrayDimensions ) )? )
                    {
                    // InternalOptGrammar.g:3585:3: (this_ElementaryType_0= ruleElementaryType ( (lv_dimension_1_0= ruleArrayDimensions ) )? )
                    // InternalOptGrammar.g:3586:4: this_ElementaryType_0= ruleElementaryType ( (lv_dimension_1_0= ruleArrayDimensions ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getStandardTypeAccess().getElementaryTypeParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_24);
                    this_ElementaryType_0=ruleElementaryType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ElementaryType_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalOptGrammar.g:3594:4: ( (lv_dimension_1_0= ruleArrayDimensions ) )?
                    int alt76=2;
                    int LA76_0 = input.LA(1);

                    if ( (LA76_0==25) ) {
                        alt76=1;
                    }
                    switch (alt76) {
                        case 1 :
                            // InternalOptGrammar.g:3595:5: (lv_dimension_1_0= ruleArrayDimensions )
                            {
                            // InternalOptGrammar.g:3595:5: (lv_dimension_1_0= ruleArrayDimensions )
                            // InternalOptGrammar.g:3596:6: lv_dimension_1_0= ruleArrayDimensions
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getStandardTypeAccess().getDimensionArrayDimensionsParserRuleCall_0_1_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_dimension_1_0=ruleArrayDimensions();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getStandardTypeRule());
                              						}
                              						set(
                              							current,
                              							"dimension",
                              							lv_dimension_1_0,
                              							"org.unicam.myGrammar.OptGrammar.ArrayDimensions");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:3615:3: this_MappingDeclaration_2= ruleMappingDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStandardTypeAccess().getMappingDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MappingDeclaration_2=ruleMappingDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MappingDeclaration_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalOptGrammar.g:3624:3: this_QualifiedIdentifier_3= ruleQualifiedIdentifier
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStandardTypeAccess().getQualifiedIdentifierParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_QualifiedIdentifier_3=ruleQualifiedIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QualifiedIdentifier_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStandardType"


    // $ANTLR start "entryRuleStandardTypeWithoutQualifiedIdentifier"
    // InternalOptGrammar.g:3636:1: entryRuleStandardTypeWithoutQualifiedIdentifier returns [EObject current=null] : iv_ruleStandardTypeWithoutQualifiedIdentifier= ruleStandardTypeWithoutQualifiedIdentifier EOF ;
    public final EObject entryRuleStandardTypeWithoutQualifiedIdentifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStandardTypeWithoutQualifiedIdentifier = null;


        try {
            // InternalOptGrammar.g:3636:79: (iv_ruleStandardTypeWithoutQualifiedIdentifier= ruleStandardTypeWithoutQualifiedIdentifier EOF )
            // InternalOptGrammar.g:3637:2: iv_ruleStandardTypeWithoutQualifiedIdentifier= ruleStandardTypeWithoutQualifiedIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStandardTypeWithoutQualifiedIdentifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStandardTypeWithoutQualifiedIdentifier=ruleStandardTypeWithoutQualifiedIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStandardTypeWithoutQualifiedIdentifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStandardTypeWithoutQualifiedIdentifier"


    // $ANTLR start "ruleStandardTypeWithoutQualifiedIdentifier"
    // InternalOptGrammar.g:3643:1: ruleStandardTypeWithoutQualifiedIdentifier returns [EObject current=null] : ( (this_ElementaryType_0= ruleElementaryType ( (lv_dimension_1_0= ruleArrayDimensions ) )? ) | this_MappingDeclaration_2= ruleMappingDeclaration ) ;
    public final EObject ruleStandardTypeWithoutQualifiedIdentifier() throws RecognitionException {
        EObject current = null;

        EObject this_ElementaryType_0 = null;

        EObject lv_dimension_1_0 = null;

        EObject this_MappingDeclaration_2 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:3649:2: ( ( (this_ElementaryType_0= ruleElementaryType ( (lv_dimension_1_0= ruleArrayDimensions ) )? ) | this_MappingDeclaration_2= ruleMappingDeclaration ) )
            // InternalOptGrammar.g:3650:2: ( (this_ElementaryType_0= ruleElementaryType ( (lv_dimension_1_0= ruleArrayDimensions ) )? ) | this_MappingDeclaration_2= ruleMappingDeclaration )
            {
            // InternalOptGrammar.g:3650:2: ( (this_ElementaryType_0= ruleElementaryType ( (lv_dimension_1_0= ruleArrayDimensions ) )? ) | this_MappingDeclaration_2= ruleMappingDeclaration )
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( ((LA79_0>=28 && LA79_0<=29)||(LA79_0>=75 && LA79_0<=176)) ) {
                alt79=1;
            }
            else if ( (LA79_0==33||LA79_0==177||(LA79_0>=180 && LA79_0<=183)) ) {
                alt79=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 79, 0, input);

                throw nvae;
            }
            switch (alt79) {
                case 1 :
                    // InternalOptGrammar.g:3651:3: (this_ElementaryType_0= ruleElementaryType ( (lv_dimension_1_0= ruleArrayDimensions ) )? )
                    {
                    // InternalOptGrammar.g:3651:3: (this_ElementaryType_0= ruleElementaryType ( (lv_dimension_1_0= ruleArrayDimensions ) )? )
                    // InternalOptGrammar.g:3652:4: this_ElementaryType_0= ruleElementaryType ( (lv_dimension_1_0= ruleArrayDimensions ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getElementaryTypeParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_24);
                    this_ElementaryType_0=ruleElementaryType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ElementaryType_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalOptGrammar.g:3660:4: ( (lv_dimension_1_0= ruleArrayDimensions ) )?
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( (LA78_0==25) ) {
                        alt78=1;
                    }
                    switch (alt78) {
                        case 1 :
                            // InternalOptGrammar.g:3661:5: (lv_dimension_1_0= ruleArrayDimensions )
                            {
                            // InternalOptGrammar.g:3661:5: (lv_dimension_1_0= ruleArrayDimensions )
                            // InternalOptGrammar.g:3662:6: lv_dimension_1_0= ruleArrayDimensions
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getDimensionArrayDimensionsParserRuleCall_0_1_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_dimension_1_0=ruleArrayDimensions();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getStandardTypeWithoutQualifiedIdentifierRule());
                              						}
                              						set(
                              							current,
                              							"dimension",
                              							lv_dimension_1_0,
                              							"org.unicam.myGrammar.OptGrammar.ArrayDimensions");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:3681:3: this_MappingDeclaration_2= ruleMappingDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStandardTypeWithoutQualifiedIdentifierAccess().getMappingDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MappingDeclaration_2=ruleMappingDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MappingDeclaration_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStandardTypeWithoutQualifiedIdentifier"


    // $ANTLR start "entryRuleElementaryType"
    // InternalOptGrammar.g:3693:1: entryRuleElementaryType returns [EObject current=null] : iv_ruleElementaryType= ruleElementaryType EOF ;
    public final EObject entryRuleElementaryType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElementaryType = null;


        try {
            // InternalOptGrammar.g:3693:55: (iv_ruleElementaryType= ruleElementaryType EOF )
            // InternalOptGrammar.g:3694:2: iv_ruleElementaryType= ruleElementaryType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementaryTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElementaryType=ruleElementaryType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElementaryType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElementaryType"


    // $ANTLR start "ruleElementaryType"
    // InternalOptGrammar.g:3700:1: ruleElementaryType returns [EObject current=null] : ( (lv_name_0_0= ruleElementaryTypeNameEnum ) ) ;
    public final EObject ruleElementaryType() throws RecognitionException {
        EObject current = null;

        EObject lv_name_0_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:3706:2: ( ( (lv_name_0_0= ruleElementaryTypeNameEnum ) ) )
            // InternalOptGrammar.g:3707:2: ( (lv_name_0_0= ruleElementaryTypeNameEnum ) )
            {
            // InternalOptGrammar.g:3707:2: ( (lv_name_0_0= ruleElementaryTypeNameEnum ) )
            // InternalOptGrammar.g:3708:3: (lv_name_0_0= ruleElementaryTypeNameEnum )
            {
            // InternalOptGrammar.g:3708:3: (lv_name_0_0= ruleElementaryTypeNameEnum )
            // InternalOptGrammar.g:3709:4: lv_name_0_0= ruleElementaryTypeNameEnum
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getElementaryTypeAccess().getNameElementaryTypeNameEnumParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=ruleElementaryTypeNameEnum();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getElementaryTypeRule());
              				}
              				set(
              					current,
              					"name",
              					lv_name_0_0,
              					"org.unicam.myGrammar.OptGrammar.ElementaryTypeNameEnum");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementaryType"


    // $ANTLR start "entryRuleArrayDimensions"
    // InternalOptGrammar.g:3729:1: entryRuleArrayDimensions returns [EObject current=null] : iv_ruleArrayDimensions= ruleArrayDimensions EOF ;
    public final EObject entryRuleArrayDimensions() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayDimensions = null;


        try {
            // InternalOptGrammar.g:3729:56: (iv_ruleArrayDimensions= ruleArrayDimensions EOF )
            // InternalOptGrammar.g:3730:2: iv_ruleArrayDimensions= ruleArrayDimensions EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayDimensionsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayDimensions=ruleArrayDimensions();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayDimensions; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayDimensions"


    // $ANTLR start "ruleArrayDimensions"
    // InternalOptGrammar.g:3736:1: ruleArrayDimensions returns [EObject current=null] : (otherlv_0= '[' () ( (lv_value_2_0= ruleLogicalOperations ) )? otherlv_3= ']' (otherlv_4= '[' ( (lv_value_5_0= ruleLogicalOperations ) )? otherlv_6= ']' )* ) ;
    public final EObject ruleArrayDimensions() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_value_2_0 = null;

        EObject lv_value_5_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:3742:2: ( (otherlv_0= '[' () ( (lv_value_2_0= ruleLogicalOperations ) )? otherlv_3= ']' (otherlv_4= '[' ( (lv_value_5_0= ruleLogicalOperations ) )? otherlv_6= ']' )* ) )
            // InternalOptGrammar.g:3743:2: (otherlv_0= '[' () ( (lv_value_2_0= ruleLogicalOperations ) )? otherlv_3= ']' (otherlv_4= '[' ( (lv_value_5_0= ruleLogicalOperations ) )? otherlv_6= ']' )* )
            {
            // InternalOptGrammar.g:3743:2: (otherlv_0= '[' () ( (lv_value_2_0= ruleLogicalOperations ) )? otherlv_3= ']' (otherlv_4= '[' ( (lv_value_5_0= ruleLogicalOperations ) )? otherlv_6= ']' )* )
            // InternalOptGrammar.g:3744:3: otherlv_0= '[' () ( (lv_value_2_0= ruleLogicalOperations ) )? otherlv_3= ']' (otherlv_4= '[' ( (lv_value_5_0= ruleLogicalOperations ) )? otherlv_6= ']' )*
            {
            otherlv_0=(Token)match(input,25,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getArrayDimensionsAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalOptGrammar.g:3748:3: ()
            // InternalOptGrammar.g:3749:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getArrayDimensionsAccess().getArrayDimensionsAction_1(),
              					current);
              			
            }

            }

            // InternalOptGrammar.g:3755:3: ( (lv_value_2_0= ruleLogicalOperations ) )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( ((LA80_0>=RULE_INT && LA80_0<=RULE_TX)||(LA80_0>=59 && LA80_0<=60)||(LA80_0>=62 && LA80_0<=69)||LA80_0==74||(LA80_0>=192 && LA80_0<=193)) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalOptGrammar.g:3756:4: (lv_value_2_0= ruleLogicalOperations )
                    {
                    // InternalOptGrammar.g:3756:4: (lv_value_2_0= ruleLogicalOperations )
                    // InternalOptGrammar.g:3757:5: lv_value_2_0= ruleLogicalOperations
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getArrayDimensionsAccess().getValueLogicalOperationsParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_23);
                    lv_value_2_0=ruleLogicalOperations();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getArrayDimensionsRule());
                      					}
                      					add(
                      						current,
                      						"value",
                      						lv_value_2_0,
                      						"org.unicam.myGrammar.OptGrammar.LogicalOperations");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,26,FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getArrayDimensionsAccess().getRightSquareBracketKeyword_3());
              		
            }
            // InternalOptGrammar.g:3778:3: (otherlv_4= '[' ( (lv_value_5_0= ruleLogicalOperations ) )? otherlv_6= ']' )*
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==25) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    // InternalOptGrammar.g:3779:4: otherlv_4= '[' ( (lv_value_5_0= ruleLogicalOperations ) )? otherlv_6= ']'
            	    {
            	    otherlv_4=(Token)match(input,25,FOLLOW_15); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getArrayDimensionsAccess().getLeftSquareBracketKeyword_4_0());
            	      			
            	    }
            	    // InternalOptGrammar.g:3783:4: ( (lv_value_5_0= ruleLogicalOperations ) )?
            	    int alt81=2;
            	    int LA81_0 = input.LA(1);

            	    if ( ((LA81_0>=RULE_INT && LA81_0<=RULE_TX)||(LA81_0>=59 && LA81_0<=60)||(LA81_0>=62 && LA81_0<=69)||LA81_0==74||(LA81_0>=192 && LA81_0<=193)) ) {
            	        alt81=1;
            	    }
            	    switch (alt81) {
            	        case 1 :
            	            // InternalOptGrammar.g:3784:5: (lv_value_5_0= ruleLogicalOperations )
            	            {
            	            // InternalOptGrammar.g:3784:5: (lv_value_5_0= ruleLogicalOperations )
            	            // InternalOptGrammar.g:3785:6: lv_value_5_0= ruleLogicalOperations
            	            {
            	            if ( state.backtracking==0 ) {

            	              						newCompositeNode(grammarAccess.getArrayDimensionsAccess().getValueLogicalOperationsParserRuleCall_4_1_0());
            	              					
            	            }
            	            pushFollow(FOLLOW_23);
            	            lv_value_5_0=ruleLogicalOperations();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						if (current==null) {
            	              							current = createModelElementForParent(grammarAccess.getArrayDimensionsRule());
            	              						}
            	              						add(
            	              							current,
            	              							"value",
            	              							lv_value_5_0,
            	              							"org.unicam.myGrammar.OptGrammar.LogicalOperations");
            	              						afterParserOrEnumRuleCall();
            	              					
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    otherlv_6=(Token)match(input,26,FOLLOW_24); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getArrayDimensionsAccess().getRightSquareBracketKeyword_4_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayDimensions"


    // $ANTLR start "entryRuleVarType"
    // InternalOptGrammar.g:3811:1: entryRuleVarType returns [String current=null] : iv_ruleVarType= ruleVarType EOF ;
    public final String entryRuleVarType() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleVarType = null;


        try {
            // InternalOptGrammar.g:3811:47: (iv_ruleVarType= ruleVarType EOF )
            // InternalOptGrammar.g:3812:2: iv_ruleVarType= ruleVarType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVarType=ruleVarType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVarType.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVarType"


    // $ANTLR start "ruleVarType"
    // InternalOptGrammar.g:3818:1: ruleVarType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'var' ;
    public final AntlrDatatypeRuleToken ruleVarType() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:3824:2: (kw= 'var' )
            // InternalOptGrammar.g:3825:2: kw= 'var'
            {
            kw=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getVarTypeAccess().getVarKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVarType"


    // $ANTLR start "entryRuleTuple"
    // InternalOptGrammar.g:3833:1: entryRuleTuple returns [EObject current=null] : iv_ruleTuple= ruleTuple EOF ;
    public final EObject entryRuleTuple() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTuple = null;


        try {
            // InternalOptGrammar.g:3833:46: (iv_ruleTuple= ruleTuple EOF )
            // InternalOptGrammar.g:3834:2: iv_ruleTuple= ruleTuple EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTupleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTuple=ruleTuple();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTuple; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTuple"


    // $ANTLR start "ruleTuple"
    // InternalOptGrammar.g:3840:1: ruleTuple returns [EObject current=null] : (otherlv_0= '(' () ( ( (lv_members_2_0= ruleLogicalOperations ) )? ( ( (lv_members_3_0= ruleTupleSeparator ) ) ( (lv_members_4_0= ruleLogicalOperations ) )? )+ )? otherlv_5= ')' ) ;
    public final EObject ruleTuple() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_5=null;
        EObject lv_members_2_0 = null;

        EObject lv_members_3_0 = null;

        EObject lv_members_4_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:3846:2: ( (otherlv_0= '(' () ( ( (lv_members_2_0= ruleLogicalOperations ) )? ( ( (lv_members_3_0= ruleTupleSeparator ) ) ( (lv_members_4_0= ruleLogicalOperations ) )? )+ )? otherlv_5= ')' ) )
            // InternalOptGrammar.g:3847:2: (otherlv_0= '(' () ( ( (lv_members_2_0= ruleLogicalOperations ) )? ( ( (lv_members_3_0= ruleTupleSeparator ) ) ( (lv_members_4_0= ruleLogicalOperations ) )? )+ )? otherlv_5= ')' )
            {
            // InternalOptGrammar.g:3847:2: (otherlv_0= '(' () ( ( (lv_members_2_0= ruleLogicalOperations ) )? ( ( (lv_members_3_0= ruleTupleSeparator ) ) ( (lv_members_4_0= ruleLogicalOperations ) )? )+ )? otherlv_5= ')' )
            // InternalOptGrammar.g:3848:3: otherlv_0= '(' () ( ( (lv_members_2_0= ruleLogicalOperations ) )? ( ( (lv_members_3_0= ruleTupleSeparator ) ) ( (lv_members_4_0= ruleLogicalOperations ) )? )+ )? otherlv_5= ')'
            {
            otherlv_0=(Token)match(input,34,FOLLOW_61); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTupleAccess().getLeftParenthesisKeyword_0());
              		
            }
            // InternalOptGrammar.g:3852:3: ()
            // InternalOptGrammar.g:3853:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getTupleAccess().getTupleAction_1(),
              					current);
              			
            }

            }

            // InternalOptGrammar.g:3859:3: ( ( (lv_members_2_0= ruleLogicalOperations ) )? ( ( (lv_members_3_0= ruleTupleSeparator ) ) ( (lv_members_4_0= ruleLogicalOperations ) )? )+ )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( ((LA86_0>=RULE_INT && LA86_0<=RULE_TX)||LA86_0==22||(LA86_0>=59 && LA86_0<=60)||(LA86_0>=62 && LA86_0<=69)||LA86_0==74||(LA86_0>=192 && LA86_0<=193)) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalOptGrammar.g:3860:4: ( (lv_members_2_0= ruleLogicalOperations ) )? ( ( (lv_members_3_0= ruleTupleSeparator ) ) ( (lv_members_4_0= ruleLogicalOperations ) )? )+
                    {
                    // InternalOptGrammar.g:3860:4: ( (lv_members_2_0= ruleLogicalOperations ) )?
                    int alt83=2;
                    int LA83_0 = input.LA(1);

                    if ( ((LA83_0>=RULE_INT && LA83_0<=RULE_TX)||(LA83_0>=59 && LA83_0<=60)||(LA83_0>=62 && LA83_0<=69)||LA83_0==74||(LA83_0>=192 && LA83_0<=193)) ) {
                        alt83=1;
                    }
                    switch (alt83) {
                        case 1 :
                            // InternalOptGrammar.g:3861:5: (lv_members_2_0= ruleLogicalOperations )
                            {
                            // InternalOptGrammar.g:3861:5: (lv_members_2_0= ruleLogicalOperations )
                            // InternalOptGrammar.g:3862:6: lv_members_2_0= ruleLogicalOperations
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTupleAccess().getMembersLogicalOperationsParserRuleCall_2_0_0());
                              					
                            }
                            pushFollow(FOLLOW_62);
                            lv_members_2_0=ruleLogicalOperations();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTupleRule());
                              						}
                              						add(
                              							current,
                              							"members",
                              							lv_members_2_0,
                              							"org.unicam.myGrammar.OptGrammar.LogicalOperations");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalOptGrammar.g:3879:4: ( ( (lv_members_3_0= ruleTupleSeparator ) ) ( (lv_members_4_0= ruleLogicalOperations ) )? )+
                    int cnt85=0;
                    loop85:
                    do {
                        int alt85=2;
                        int LA85_0 = input.LA(1);

                        if ( (LA85_0==22) ) {
                            alt85=1;
                        }


                        switch (alt85) {
                    	case 1 :
                    	    // InternalOptGrammar.g:3880:5: ( (lv_members_3_0= ruleTupleSeparator ) ) ( (lv_members_4_0= ruleLogicalOperations ) )?
                    	    {
                    	    // InternalOptGrammar.g:3880:5: ( (lv_members_3_0= ruleTupleSeparator ) )
                    	    // InternalOptGrammar.g:3881:6: (lv_members_3_0= ruleTupleSeparator )
                    	    {
                    	    // InternalOptGrammar.g:3881:6: (lv_members_3_0= ruleTupleSeparator )
                    	    // InternalOptGrammar.g:3882:7: lv_members_3_0= ruleTupleSeparator
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTupleAccess().getMembersTupleSeparatorParserRuleCall_2_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_61);
                    	    lv_members_3_0=ruleTupleSeparator();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTupleRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"members",
                    	      								lv_members_3_0,
                    	      								"org.unicam.myGrammar.OptGrammar.TupleSeparator");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalOptGrammar.g:3899:5: ( (lv_members_4_0= ruleLogicalOperations ) )?
                    	    int alt84=2;
                    	    int LA84_0 = input.LA(1);

                    	    if ( ((LA84_0>=RULE_INT && LA84_0<=RULE_TX)||(LA84_0>=59 && LA84_0<=60)||(LA84_0>=62 && LA84_0<=69)||LA84_0==74||(LA84_0>=192 && LA84_0<=193)) ) {
                    	        alt84=1;
                    	    }
                    	    switch (alt84) {
                    	        case 1 :
                    	            // InternalOptGrammar.g:3900:6: (lv_members_4_0= ruleLogicalOperations )
                    	            {
                    	            // InternalOptGrammar.g:3900:6: (lv_members_4_0= ruleLogicalOperations )
                    	            // InternalOptGrammar.g:3901:7: lv_members_4_0= ruleLogicalOperations
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              							newCompositeNode(grammarAccess.getTupleAccess().getMembersLogicalOperationsParserRuleCall_2_1_1_0());
                    	              						
                    	            }
                    	            pushFollow(FOLLOW_61);
                    	            lv_members_4_0=ruleLogicalOperations();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              							if (current==null) {
                    	              								current = createModelElementForParent(grammarAccess.getTupleRule());
                    	              							}
                    	              							add(
                    	              								current,
                    	              								"members",
                    	              								lv_members_4_0,
                    	              								"org.unicam.myGrammar.OptGrammar.LogicalOperations");
                    	              							afterParserOrEnumRuleCall();
                    	              						
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt85 >= 1 ) break loop85;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(85, input);
                                throw eee;
                        }
                        cnt85++;
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getTupleAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTuple"


    // $ANTLR start "entryRuleTupleSeparator"
    // InternalOptGrammar.g:3928:1: entryRuleTupleSeparator returns [EObject current=null] : iv_ruleTupleSeparator= ruleTupleSeparator EOF ;
    public final EObject entryRuleTupleSeparator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTupleSeparator = null;


        try {
            // InternalOptGrammar.g:3928:55: (iv_ruleTupleSeparator= ruleTupleSeparator EOF )
            // InternalOptGrammar.g:3929:2: iv_ruleTupleSeparator= ruleTupleSeparator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTupleSeparatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTupleSeparator=ruleTupleSeparator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTupleSeparator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTupleSeparator"


    // $ANTLR start "ruleTupleSeparator"
    // InternalOptGrammar.g:3935:1: ruleTupleSeparator returns [EObject current=null] : (otherlv_0= ',' () ) ;
    public final EObject ruleTupleSeparator() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:3941:2: ( (otherlv_0= ',' () ) )
            // InternalOptGrammar.g:3942:2: (otherlv_0= ',' () )
            {
            // InternalOptGrammar.g:3942:2: (otherlv_0= ',' () )
            // InternalOptGrammar.g:3943:3: otherlv_0= ',' ()
            {
            otherlv_0=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTupleSeparatorAccess().getCommaKeyword_0());
              		
            }
            // InternalOptGrammar.g:3947:3: ()
            // InternalOptGrammar.g:3948:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getTupleSeparatorAccess().getTupleSeparatorAction_1(),
              					current);
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTupleSeparator"


    // $ANTLR start "entryRuleSimpleStatement"
    // InternalOptGrammar.g:3958:1: entryRuleSimpleStatement returns [EObject current=null] : iv_ruleSimpleStatement= ruleSimpleStatement EOF ;
    public final EObject entryRuleSimpleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleStatement = null;


        try {
            // InternalOptGrammar.g:3958:56: (iv_ruleSimpleStatement= ruleSimpleStatement EOF )
            // InternalOptGrammar.g:3959:2: iv_ruleSimpleStatement= ruleSimpleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleStatement=ruleSimpleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleStatement"


    // $ANTLR start "ruleSimpleStatement"
    // InternalOptGrammar.g:3965:1: ruleSimpleStatement returns [EObject current=null] : ( ( (this_StandardTypeWithoutQualifiedIdentifier_0= ruleStandardTypeWithoutQualifiedIdentifier ( () ( (lv_ptionalElements_2_0= ruleVariableDeclarationOptionalElement ) )* ( (lv_variable_3_0= ruleVariable ) ) (otherlv_4= '=' ( (lv_expression_5_0= ruleLogicalOperations ) ) )? ) ) | ( ruleVarType ( ( () ( (lv_variable_8_0= ruleVariable ) ) (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) ) ) | ( () ( (lv_tuple_12_0= ruleTuple ) ) (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) ) ) ) ) | this_ExpressionStatement_15= ruleExpressionStatement ) ( (lv_semicolon_16_0= ';' ) ) ) ;
    public final EObject ruleSimpleStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_9=null;
        Token otherlv_13=null;
        Token lv_semicolon_16_0=null;
        EObject this_StandardTypeWithoutQualifiedIdentifier_0 = null;

        EObject lv_ptionalElements_2_0 = null;

        EObject lv_variable_3_0 = null;

        EObject lv_expression_5_0 = null;

        EObject lv_variable_8_0 = null;

        EObject lv_expression_10_0 = null;

        EObject lv_tuple_12_0 = null;

        EObject lv_expression_14_0 = null;

        EObject this_ExpressionStatement_15 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:3971:2: ( ( ( (this_StandardTypeWithoutQualifiedIdentifier_0= ruleStandardTypeWithoutQualifiedIdentifier ( () ( (lv_ptionalElements_2_0= ruleVariableDeclarationOptionalElement ) )* ( (lv_variable_3_0= ruleVariable ) ) (otherlv_4= '=' ( (lv_expression_5_0= ruleLogicalOperations ) ) )? ) ) | ( ruleVarType ( ( () ( (lv_variable_8_0= ruleVariable ) ) (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) ) ) | ( () ( (lv_tuple_12_0= ruleTuple ) ) (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) ) ) ) ) | this_ExpressionStatement_15= ruleExpressionStatement ) ( (lv_semicolon_16_0= ';' ) ) ) )
            // InternalOptGrammar.g:3972:2: ( ( (this_StandardTypeWithoutQualifiedIdentifier_0= ruleStandardTypeWithoutQualifiedIdentifier ( () ( (lv_ptionalElements_2_0= ruleVariableDeclarationOptionalElement ) )* ( (lv_variable_3_0= ruleVariable ) ) (otherlv_4= '=' ( (lv_expression_5_0= ruleLogicalOperations ) ) )? ) ) | ( ruleVarType ( ( () ( (lv_variable_8_0= ruleVariable ) ) (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) ) ) | ( () ( (lv_tuple_12_0= ruleTuple ) ) (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) ) ) ) ) | this_ExpressionStatement_15= ruleExpressionStatement ) ( (lv_semicolon_16_0= ';' ) ) )
            {
            // InternalOptGrammar.g:3972:2: ( ( (this_StandardTypeWithoutQualifiedIdentifier_0= ruleStandardTypeWithoutQualifiedIdentifier ( () ( (lv_ptionalElements_2_0= ruleVariableDeclarationOptionalElement ) )* ( (lv_variable_3_0= ruleVariable ) ) (otherlv_4= '=' ( (lv_expression_5_0= ruleLogicalOperations ) ) )? ) ) | ( ruleVarType ( ( () ( (lv_variable_8_0= ruleVariable ) ) (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) ) ) | ( () ( (lv_tuple_12_0= ruleTuple ) ) (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) ) ) ) ) | this_ExpressionStatement_15= ruleExpressionStatement ) ( (lv_semicolon_16_0= ';' ) ) )
            // InternalOptGrammar.g:3973:3: ( (this_StandardTypeWithoutQualifiedIdentifier_0= ruleStandardTypeWithoutQualifiedIdentifier ( () ( (lv_ptionalElements_2_0= ruleVariableDeclarationOptionalElement ) )* ( (lv_variable_3_0= ruleVariable ) ) (otherlv_4= '=' ( (lv_expression_5_0= ruleLogicalOperations ) ) )? ) ) | ( ruleVarType ( ( () ( (lv_variable_8_0= ruleVariable ) ) (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) ) ) | ( () ( (lv_tuple_12_0= ruleTuple ) ) (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) ) ) ) ) | this_ExpressionStatement_15= ruleExpressionStatement ) ( (lv_semicolon_16_0= ';' ) )
            {
            // InternalOptGrammar.g:3973:3: ( (this_StandardTypeWithoutQualifiedIdentifier_0= ruleStandardTypeWithoutQualifiedIdentifier ( () ( (lv_ptionalElements_2_0= ruleVariableDeclarationOptionalElement ) )* ( (lv_variable_3_0= ruleVariable ) ) (otherlv_4= '=' ( (lv_expression_5_0= ruleLogicalOperations ) ) )? ) ) | ( ruleVarType ( ( () ( (lv_variable_8_0= ruleVariable ) ) (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) ) ) | ( () ( (lv_tuple_12_0= ruleTuple ) ) (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) ) ) ) ) | this_ExpressionStatement_15= ruleExpressionStatement )
            int alt90=3;
            switch ( input.LA(1) ) {
            case 28:
            case 29:
            case 33:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 123:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 176:
            case 177:
            case 180:
            case 181:
            case 182:
            case 183:
                {
                alt90=1;
                }
                break;
            case 48:
                {
                alt90=2;
                }
                break;
            case RULE_INT:
            case RULE_STRING:
            case RULE_HEX:
            case RULE_DECIMAL:
            case RULE_BLOCK:
            case RULE_MSG:
            case RULE_TX:
            case 59:
            case 60:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 74:
            case 192:
            case 193:
                {
                alt90=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 90, 0, input);

                throw nvae;
            }

            switch (alt90) {
                case 1 :
                    // InternalOptGrammar.g:3974:4: (this_StandardTypeWithoutQualifiedIdentifier_0= ruleStandardTypeWithoutQualifiedIdentifier ( () ( (lv_ptionalElements_2_0= ruleVariableDeclarationOptionalElement ) )* ( (lv_variable_3_0= ruleVariable ) ) (otherlv_4= '=' ( (lv_expression_5_0= ruleLogicalOperations ) ) )? ) )
                    {
                    // InternalOptGrammar.g:3974:4: (this_StandardTypeWithoutQualifiedIdentifier_0= ruleStandardTypeWithoutQualifiedIdentifier ( () ( (lv_ptionalElements_2_0= ruleVariableDeclarationOptionalElement ) )* ( (lv_variable_3_0= ruleVariable ) ) (otherlv_4= '=' ( (lv_expression_5_0= ruleLogicalOperations ) ) )? ) )
                    // InternalOptGrammar.g:3975:5: this_StandardTypeWithoutQualifiedIdentifier_0= ruleStandardTypeWithoutQualifiedIdentifier ( () ( (lv_ptionalElements_2_0= ruleVariableDeclarationOptionalElement ) )* ( (lv_variable_3_0= ruleVariable ) ) (otherlv_4= '=' ( (lv_expression_5_0= ruleLogicalOperations ) ) )? )
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStatementAccess().getStandardTypeWithoutQualifiedIdentifierParserRuleCall_0_0_0());
                      				
                    }
                    pushFollow(FOLLOW_63);
                    this_StandardTypeWithoutQualifiedIdentifier_0=ruleStandardTypeWithoutQualifiedIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current = this_StandardTypeWithoutQualifiedIdentifier_0;
                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalOptGrammar.g:3983:5: ( () ( (lv_ptionalElements_2_0= ruleVariableDeclarationOptionalElement ) )* ( (lv_variable_3_0= ruleVariable ) ) (otherlv_4= '=' ( (lv_expression_5_0= ruleLogicalOperations ) ) )? )
                    // InternalOptGrammar.g:3984:6: () ( (lv_ptionalElements_2_0= ruleVariableDeclarationOptionalElement ) )* ( (lv_variable_3_0= ruleVariable ) ) (otherlv_4= '=' ( (lv_expression_5_0= ruleLogicalOperations ) ) )?
                    {
                    // InternalOptGrammar.g:3984:6: ()
                    // InternalOptGrammar.g:3985:7: 
                    {
                    if ( state.backtracking==0 ) {

                      							current = forceCreateModelElementAndSet(
                      								grammarAccess.getSimpleStatementAccess().getStandardVariableDeclarationTypeAction_0_0_1_0(),
                      								current);
                      						
                    }

                    }

                    // InternalOptGrammar.g:3991:6: ( (lv_ptionalElements_2_0= ruleVariableDeclarationOptionalElement ) )*
                    loop87:
                    do {
                        int alt87=2;
                        int LA87_0 = input.LA(1);

                        if ( (LA87_0==27||LA87_0==47||(LA87_0>=177 && LA87_0<=183)) ) {
                            alt87=1;
                        }


                        switch (alt87) {
                    	case 1 :
                    	    // InternalOptGrammar.g:3992:7: (lv_ptionalElements_2_0= ruleVariableDeclarationOptionalElement )
                    	    {
                    	    // InternalOptGrammar.g:3992:7: (lv_ptionalElements_2_0= ruleVariableDeclarationOptionalElement )
                    	    // InternalOptGrammar.g:3993:8: lv_ptionalElements_2_0= ruleVariableDeclarationOptionalElement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getSimpleStatementAccess().getPtionalElementsVariableDeclarationOptionalElementParserRuleCall_0_0_1_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_63);
                    	    lv_ptionalElements_2_0=ruleVariableDeclarationOptionalElement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getSimpleStatementRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"ptionalElements",
                    	      									lv_ptionalElements_2_0,
                    	      									"org.unicam.myGrammar.OptGrammar.VariableDeclarationOptionalElement");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop87;
                        }
                    } while (true);

                    // InternalOptGrammar.g:4010:6: ( (lv_variable_3_0= ruleVariable ) )
                    // InternalOptGrammar.g:4011:7: (lv_variable_3_0= ruleVariable )
                    {
                    // InternalOptGrammar.g:4011:7: (lv_variable_3_0= ruleVariable )
                    // InternalOptGrammar.g:4012:8: lv_variable_3_0= ruleVariable
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getSimpleStatementAccess().getVariableVariableParserRuleCall_0_0_1_2_0());
                      							
                    }
                    pushFollow(FOLLOW_64);
                    lv_variable_3_0=ruleVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getSimpleStatementRule());
                      								}
                      								set(
                      									current,
                      									"variable",
                      									lv_variable_3_0,
                      									"org.unicam.myGrammar.OptGrammar.Variable");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalOptGrammar.g:4029:6: (otherlv_4= '=' ( (lv_expression_5_0= ruleLogicalOperations ) ) )?
                    int alt88=2;
                    int LA88_0 = input.LA(1);

                    if ( (LA88_0==23) ) {
                        alt88=1;
                    }
                    switch (alt88) {
                        case 1 :
                            // InternalOptGrammar.g:4030:7: otherlv_4= '=' ( (lv_expression_5_0= ruleLogicalOperations ) )
                            {
                            otherlv_4=(Token)match(input,23,FOLLOW_17); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_4, grammarAccess.getSimpleStatementAccess().getEqualsSignKeyword_0_0_1_3_0());
                              						
                            }
                            // InternalOptGrammar.g:4034:7: ( (lv_expression_5_0= ruleLogicalOperations ) )
                            // InternalOptGrammar.g:4035:8: (lv_expression_5_0= ruleLogicalOperations )
                            {
                            // InternalOptGrammar.g:4035:8: (lv_expression_5_0= ruleLogicalOperations )
                            // InternalOptGrammar.g:4036:9: lv_expression_5_0= ruleLogicalOperations
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSimpleStatementAccess().getExpressionLogicalOperationsParserRuleCall_0_0_1_3_1_0());
                              								
                            }
                            pushFollow(FOLLOW_7);
                            lv_expression_5_0=ruleLogicalOperations();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSimpleStatementRule());
                              									}
                              									set(
                              										current,
                              										"expression",
                              										lv_expression_5_0,
                              										"org.unicam.myGrammar.OptGrammar.LogicalOperations");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:4057:4: ( ruleVarType ( ( () ( (lv_variable_8_0= ruleVariable ) ) (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) ) ) | ( () ( (lv_tuple_12_0= ruleTuple ) ) (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) ) ) ) )
                    {
                    // InternalOptGrammar.g:4057:4: ( ruleVarType ( ( () ( (lv_variable_8_0= ruleVariable ) ) (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) ) ) | ( () ( (lv_tuple_12_0= ruleTuple ) ) (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) ) ) ) )
                    // InternalOptGrammar.g:4058:5: ruleVarType ( ( () ( (lv_variable_8_0= ruleVariable ) ) (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) ) ) | ( () ( (lv_tuple_12_0= ruleTuple ) ) (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) ) ) )
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStatementAccess().getVarTypeParserRuleCall_0_1_0());
                      				
                    }
                    pushFollow(FOLLOW_65);
                    ruleVarType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }
                    // InternalOptGrammar.g:4065:5: ( ( () ( (lv_variable_8_0= ruleVariable ) ) (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) ) ) | ( () ( (lv_tuple_12_0= ruleTuple ) ) (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) ) ) )
                    int alt89=2;
                    int LA89_0 = input.LA(1);

                    if ( (LA89_0==RULE_ID) ) {
                        alt89=1;
                    }
                    else if ( (LA89_0==34) ) {
                        alt89=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 89, 0, input);

                        throw nvae;
                    }
                    switch (alt89) {
                        case 1 :
                            // InternalOptGrammar.g:4066:6: ( () ( (lv_variable_8_0= ruleVariable ) ) (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) ) )
                            {
                            // InternalOptGrammar.g:4066:6: ( () ( (lv_variable_8_0= ruleVariable ) ) (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) ) )
                            // InternalOptGrammar.g:4067:7: () ( (lv_variable_8_0= ruleVariable ) ) (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) )
                            {
                            // InternalOptGrammar.g:4067:7: ()
                            // InternalOptGrammar.g:4068:8: 
                            {
                            if ( state.backtracking==0 ) {

                              								current = forceCreateModelElement(
                              									grammarAccess.getSimpleStatementAccess().getVarVariableTypeDeclarationAction_0_1_1_0_0(),
                              									current);
                              							
                            }

                            }

                            // InternalOptGrammar.g:4074:7: ( (lv_variable_8_0= ruleVariable ) )
                            // InternalOptGrammar.g:4075:8: (lv_variable_8_0= ruleVariable )
                            {
                            // InternalOptGrammar.g:4075:8: (lv_variable_8_0= ruleVariable )
                            // InternalOptGrammar.g:4076:9: lv_variable_8_0= ruleVariable
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSimpleStatementAccess().getVariableVariableParserRuleCall_0_1_1_0_1_0());
                              								
                            }
                            pushFollow(FOLLOW_58);
                            lv_variable_8_0=ruleVariable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSimpleStatementRule());
                              									}
                              									set(
                              										current,
                              										"variable",
                              										lv_variable_8_0,
                              										"org.unicam.myGrammar.OptGrammar.Variable");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            // InternalOptGrammar.g:4093:7: (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) )
                            // InternalOptGrammar.g:4094:8: otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) )
                            {
                            otherlv_9=(Token)match(input,23,FOLLOW_17); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(otherlv_9, grammarAccess.getSimpleStatementAccess().getEqualsSignKeyword_0_1_1_0_2_0());
                              							
                            }
                            // InternalOptGrammar.g:4098:8: ( (lv_expression_10_0= ruleLogicalOperations ) )
                            // InternalOptGrammar.g:4099:9: (lv_expression_10_0= ruleLogicalOperations )
                            {
                            // InternalOptGrammar.g:4099:9: (lv_expression_10_0= ruleLogicalOperations )
                            // InternalOptGrammar.g:4100:10: lv_expression_10_0= ruleLogicalOperations
                            {
                            if ( state.backtracking==0 ) {

                              										newCompositeNode(grammarAccess.getSimpleStatementAccess().getExpressionLogicalOperationsParserRuleCall_0_1_1_0_2_1_0());
                              									
                            }
                            pushFollow(FOLLOW_7);
                            lv_expression_10_0=ruleLogicalOperations();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              										if (current==null) {
                              											current = createModelElementForParent(grammarAccess.getSimpleStatementRule());
                              										}
                              										set(
                              											current,
                              											"expression",
                              											lv_expression_10_0,
                              											"org.unicam.myGrammar.OptGrammar.LogicalOperations");
                              										afterParserOrEnumRuleCall();
                              									
                            }

                            }


                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalOptGrammar.g:4120:6: ( () ( (lv_tuple_12_0= ruleTuple ) ) (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) ) )
                            {
                            // InternalOptGrammar.g:4120:6: ( () ( (lv_tuple_12_0= ruleTuple ) ) (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) ) )
                            // InternalOptGrammar.g:4121:7: () ( (lv_tuple_12_0= ruleTuple ) ) (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) )
                            {
                            // InternalOptGrammar.g:4121:7: ()
                            // InternalOptGrammar.g:4122:8: 
                            {
                            if ( state.backtracking==0 ) {

                              								current = forceCreateModelElement(
                              									grammarAccess.getSimpleStatementAccess().getVarVariableTupleVariableDeclarationAction_0_1_1_1_0(),
                              									current);
                              							
                            }

                            }

                            // InternalOptGrammar.g:4128:7: ( (lv_tuple_12_0= ruleTuple ) )
                            // InternalOptGrammar.g:4129:8: (lv_tuple_12_0= ruleTuple )
                            {
                            // InternalOptGrammar.g:4129:8: (lv_tuple_12_0= ruleTuple )
                            // InternalOptGrammar.g:4130:9: lv_tuple_12_0= ruleTuple
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSimpleStatementAccess().getTupleTupleParserRuleCall_0_1_1_1_1_0());
                              								
                            }
                            pushFollow(FOLLOW_58);
                            lv_tuple_12_0=ruleTuple();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSimpleStatementRule());
                              									}
                              									set(
                              										current,
                              										"tuple",
                              										lv_tuple_12_0,
                              										"org.unicam.myGrammar.OptGrammar.Tuple");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            // InternalOptGrammar.g:4147:7: (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) )
                            // InternalOptGrammar.g:4148:8: otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) )
                            {
                            otherlv_13=(Token)match(input,23,FOLLOW_17); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(otherlv_13, grammarAccess.getSimpleStatementAccess().getEqualsSignKeyword_0_1_1_1_2_0());
                              							
                            }
                            // InternalOptGrammar.g:4152:8: ( (lv_expression_14_0= ruleLogicalOperations ) )
                            // InternalOptGrammar.g:4153:9: (lv_expression_14_0= ruleLogicalOperations )
                            {
                            // InternalOptGrammar.g:4153:9: (lv_expression_14_0= ruleLogicalOperations )
                            // InternalOptGrammar.g:4154:10: lv_expression_14_0= ruleLogicalOperations
                            {
                            if ( state.backtracking==0 ) {

                              										newCompositeNode(grammarAccess.getSimpleStatementAccess().getExpressionLogicalOperationsParserRuleCall_0_1_1_1_2_1_0());
                              									
                            }
                            pushFollow(FOLLOW_7);
                            lv_expression_14_0=ruleLogicalOperations();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              										if (current==null) {
                              											current = createModelElementForParent(grammarAccess.getSimpleStatementRule());
                              										}
                              										set(
                              											current,
                              											"expression",
                              											lv_expression_14_0,
                              											"org.unicam.myGrammar.OptGrammar.LogicalOperations");
                              										afterParserOrEnumRuleCall();
                              									
                            }

                            }


                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalOptGrammar.g:4176:4: this_ExpressionStatement_15= ruleExpressionStatement
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSimpleStatementAccess().getExpressionStatementParserRuleCall_0_2());
                      			
                    }
                    pushFollow(FOLLOW_7);
                    this_ExpressionStatement_15=ruleExpressionStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ExpressionStatement_15;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalOptGrammar.g:4185:3: ( (lv_semicolon_16_0= ';' ) )
            // InternalOptGrammar.g:4186:4: (lv_semicolon_16_0= ';' )
            {
            // InternalOptGrammar.g:4186:4: (lv_semicolon_16_0= ';' )
            // InternalOptGrammar.g:4187:5: lv_semicolon_16_0= ';'
            {
            lv_semicolon_16_0=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_semicolon_16_0, grammarAccess.getSimpleStatementAccess().getSemicolonSemicolonKeyword_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimpleStatementRule());
              					}
              					setWithLastConsumed(current, "semicolon", true, ";");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleStatement"


    // $ANTLR start "entryRuleSimpleStatement2"
    // InternalOptGrammar.g:4203:1: entryRuleSimpleStatement2 returns [EObject current=null] : iv_ruleSimpleStatement2= ruleSimpleStatement2 EOF ;
    public final EObject entryRuleSimpleStatement2() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleStatement2 = null;


        try {
            // InternalOptGrammar.g:4203:57: (iv_ruleSimpleStatement2= ruleSimpleStatement2 EOF )
            // InternalOptGrammar.g:4204:2: iv_ruleSimpleStatement2= ruleSimpleStatement2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleStatement2Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleStatement2=ruleSimpleStatement2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleStatement2; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleStatement2"


    // $ANTLR start "ruleSimpleStatement2"
    // InternalOptGrammar.g:4210:1: ruleSimpleStatement2 returns [EObject current=null] : ( (this_StandardTypeWithoutQualifiedIdentifier_0= ruleStandardTypeWithoutQualifiedIdentifier ( () ( (lv_optionalElements_2_0= ruleVariableDeclarationOptionalElement ) )* ( (lv_variable_3_0= ruleVariable ) ) (otherlv_4= '=' ( (lv_expression_5_0= ruleLogicalOperations ) ) )? ) ) | ( ruleVarType ( ( () ( (lv_variable_8_0= ruleVariable ) ) (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) ) ) | ( () ( (lv_tuple_12_0= ruleTuple ) ) (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) ) ) ) ) | this_ExpressionStatement_15= ruleExpressionStatement ) ;
    public final EObject ruleSimpleStatement2() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_9=null;
        Token otherlv_13=null;
        EObject this_StandardTypeWithoutQualifiedIdentifier_0 = null;

        EObject lv_optionalElements_2_0 = null;

        EObject lv_variable_3_0 = null;

        EObject lv_expression_5_0 = null;

        EObject lv_variable_8_0 = null;

        EObject lv_expression_10_0 = null;

        EObject lv_tuple_12_0 = null;

        EObject lv_expression_14_0 = null;

        EObject this_ExpressionStatement_15 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:4216:2: ( ( (this_StandardTypeWithoutQualifiedIdentifier_0= ruleStandardTypeWithoutQualifiedIdentifier ( () ( (lv_optionalElements_2_0= ruleVariableDeclarationOptionalElement ) )* ( (lv_variable_3_0= ruleVariable ) ) (otherlv_4= '=' ( (lv_expression_5_0= ruleLogicalOperations ) ) )? ) ) | ( ruleVarType ( ( () ( (lv_variable_8_0= ruleVariable ) ) (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) ) ) | ( () ( (lv_tuple_12_0= ruleTuple ) ) (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) ) ) ) ) | this_ExpressionStatement_15= ruleExpressionStatement ) )
            // InternalOptGrammar.g:4217:2: ( (this_StandardTypeWithoutQualifiedIdentifier_0= ruleStandardTypeWithoutQualifiedIdentifier ( () ( (lv_optionalElements_2_0= ruleVariableDeclarationOptionalElement ) )* ( (lv_variable_3_0= ruleVariable ) ) (otherlv_4= '=' ( (lv_expression_5_0= ruleLogicalOperations ) ) )? ) ) | ( ruleVarType ( ( () ( (lv_variable_8_0= ruleVariable ) ) (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) ) ) | ( () ( (lv_tuple_12_0= ruleTuple ) ) (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) ) ) ) ) | this_ExpressionStatement_15= ruleExpressionStatement )
            {
            // InternalOptGrammar.g:4217:2: ( (this_StandardTypeWithoutQualifiedIdentifier_0= ruleStandardTypeWithoutQualifiedIdentifier ( () ( (lv_optionalElements_2_0= ruleVariableDeclarationOptionalElement ) )* ( (lv_variable_3_0= ruleVariable ) ) (otherlv_4= '=' ( (lv_expression_5_0= ruleLogicalOperations ) ) )? ) ) | ( ruleVarType ( ( () ( (lv_variable_8_0= ruleVariable ) ) (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) ) ) | ( () ( (lv_tuple_12_0= ruleTuple ) ) (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) ) ) ) ) | this_ExpressionStatement_15= ruleExpressionStatement )
            int alt94=3;
            switch ( input.LA(1) ) {
            case 28:
            case 29:
            case 33:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 123:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 176:
            case 177:
            case 180:
            case 181:
            case 182:
            case 183:
                {
                alt94=1;
                }
                break;
            case 48:
                {
                alt94=2;
                }
                break;
            case RULE_INT:
            case RULE_STRING:
            case RULE_HEX:
            case RULE_DECIMAL:
            case RULE_BLOCK:
            case RULE_MSG:
            case RULE_TX:
            case 59:
            case 60:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 74:
            case 192:
            case 193:
                {
                alt94=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 94, 0, input);

                throw nvae;
            }

            switch (alt94) {
                case 1 :
                    // InternalOptGrammar.g:4218:3: (this_StandardTypeWithoutQualifiedIdentifier_0= ruleStandardTypeWithoutQualifiedIdentifier ( () ( (lv_optionalElements_2_0= ruleVariableDeclarationOptionalElement ) )* ( (lv_variable_3_0= ruleVariable ) ) (otherlv_4= '=' ( (lv_expression_5_0= ruleLogicalOperations ) ) )? ) )
                    {
                    // InternalOptGrammar.g:4218:3: (this_StandardTypeWithoutQualifiedIdentifier_0= ruleStandardTypeWithoutQualifiedIdentifier ( () ( (lv_optionalElements_2_0= ruleVariableDeclarationOptionalElement ) )* ( (lv_variable_3_0= ruleVariable ) ) (otherlv_4= '=' ( (lv_expression_5_0= ruleLogicalOperations ) ) )? ) )
                    // InternalOptGrammar.g:4219:4: this_StandardTypeWithoutQualifiedIdentifier_0= ruleStandardTypeWithoutQualifiedIdentifier ( () ( (lv_optionalElements_2_0= ruleVariableDeclarationOptionalElement ) )* ( (lv_variable_3_0= ruleVariable ) ) (otherlv_4= '=' ( (lv_expression_5_0= ruleLogicalOperations ) ) )? )
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSimpleStatement2Access().getStandardTypeWithoutQualifiedIdentifierParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_63);
                    this_StandardTypeWithoutQualifiedIdentifier_0=ruleStandardTypeWithoutQualifiedIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_StandardTypeWithoutQualifiedIdentifier_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalOptGrammar.g:4227:4: ( () ( (lv_optionalElements_2_0= ruleVariableDeclarationOptionalElement ) )* ( (lv_variable_3_0= ruleVariable ) ) (otherlv_4= '=' ( (lv_expression_5_0= ruleLogicalOperations ) ) )? )
                    // InternalOptGrammar.g:4228:5: () ( (lv_optionalElements_2_0= ruleVariableDeclarationOptionalElement ) )* ( (lv_variable_3_0= ruleVariable ) ) (otherlv_4= '=' ( (lv_expression_5_0= ruleLogicalOperations ) ) )?
                    {
                    // InternalOptGrammar.g:4228:5: ()
                    // InternalOptGrammar.g:4229:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndSet(
                      							grammarAccess.getSimpleStatement2Access().getStandardVariableDeclarationTypeAction_0_1_0(),
                      							current);
                      					
                    }

                    }

                    // InternalOptGrammar.g:4235:5: ( (lv_optionalElements_2_0= ruleVariableDeclarationOptionalElement ) )*
                    loop91:
                    do {
                        int alt91=2;
                        int LA91_0 = input.LA(1);

                        if ( (LA91_0==27||LA91_0==47||(LA91_0>=177 && LA91_0<=183)) ) {
                            alt91=1;
                        }


                        switch (alt91) {
                    	case 1 :
                    	    // InternalOptGrammar.g:4236:6: (lv_optionalElements_2_0= ruleVariableDeclarationOptionalElement )
                    	    {
                    	    // InternalOptGrammar.g:4236:6: (lv_optionalElements_2_0= ruleVariableDeclarationOptionalElement )
                    	    // InternalOptGrammar.g:4237:7: lv_optionalElements_2_0= ruleVariableDeclarationOptionalElement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSimpleStatement2Access().getOptionalElementsVariableDeclarationOptionalElementParserRuleCall_0_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_63);
                    	    lv_optionalElements_2_0=ruleVariableDeclarationOptionalElement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSimpleStatement2Rule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"optionalElements",
                    	      								lv_optionalElements_2_0,
                    	      								"org.unicam.myGrammar.OptGrammar.VariableDeclarationOptionalElement");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop91;
                        }
                    } while (true);

                    // InternalOptGrammar.g:4254:5: ( (lv_variable_3_0= ruleVariable ) )
                    // InternalOptGrammar.g:4255:6: (lv_variable_3_0= ruleVariable )
                    {
                    // InternalOptGrammar.g:4255:6: (lv_variable_3_0= ruleVariable )
                    // InternalOptGrammar.g:4256:7: lv_variable_3_0= ruleVariable
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSimpleStatement2Access().getVariableVariableParserRuleCall_0_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_12);
                    lv_variable_3_0=ruleVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSimpleStatement2Rule());
                      							}
                      							set(
                      								current,
                      								"variable",
                      								lv_variable_3_0,
                      								"org.unicam.myGrammar.OptGrammar.Variable");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalOptGrammar.g:4273:5: (otherlv_4= '=' ( (lv_expression_5_0= ruleLogicalOperations ) ) )?
                    int alt92=2;
                    int LA92_0 = input.LA(1);

                    if ( (LA92_0==23) ) {
                        alt92=1;
                    }
                    switch (alt92) {
                        case 1 :
                            // InternalOptGrammar.g:4274:6: otherlv_4= '=' ( (lv_expression_5_0= ruleLogicalOperations ) )
                            {
                            otherlv_4=(Token)match(input,23,FOLLOW_17); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_4, grammarAccess.getSimpleStatement2Access().getEqualsSignKeyword_0_1_3_0());
                              					
                            }
                            // InternalOptGrammar.g:4278:6: ( (lv_expression_5_0= ruleLogicalOperations ) )
                            // InternalOptGrammar.g:4279:7: (lv_expression_5_0= ruleLogicalOperations )
                            {
                            // InternalOptGrammar.g:4279:7: (lv_expression_5_0= ruleLogicalOperations )
                            // InternalOptGrammar.g:4280:8: lv_expression_5_0= ruleLogicalOperations
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSimpleStatement2Access().getExpressionLogicalOperationsParserRuleCall_0_1_3_1_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_5_0=ruleLogicalOperations();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSimpleStatement2Rule());
                              								}
                              								set(
                              									current,
                              									"expression",
                              									lv_expression_5_0,
                              									"org.unicam.myGrammar.OptGrammar.LogicalOperations");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:4301:3: ( ruleVarType ( ( () ( (lv_variable_8_0= ruleVariable ) ) (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) ) ) | ( () ( (lv_tuple_12_0= ruleTuple ) ) (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) ) ) ) )
                    {
                    // InternalOptGrammar.g:4301:3: ( ruleVarType ( ( () ( (lv_variable_8_0= ruleVariable ) ) (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) ) ) | ( () ( (lv_tuple_12_0= ruleTuple ) ) (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) ) ) ) )
                    // InternalOptGrammar.g:4302:4: ruleVarType ( ( () ( (lv_variable_8_0= ruleVariable ) ) (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) ) ) | ( () ( (lv_tuple_12_0= ruleTuple ) ) (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) ) ) )
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSimpleStatement2Access().getVarTypeParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_65);
                    ruleVarType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalOptGrammar.g:4309:4: ( ( () ( (lv_variable_8_0= ruleVariable ) ) (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) ) ) | ( () ( (lv_tuple_12_0= ruleTuple ) ) (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) ) ) )
                    int alt93=2;
                    int LA93_0 = input.LA(1);

                    if ( (LA93_0==RULE_ID) ) {
                        alt93=1;
                    }
                    else if ( (LA93_0==34) ) {
                        alt93=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 93, 0, input);

                        throw nvae;
                    }
                    switch (alt93) {
                        case 1 :
                            // InternalOptGrammar.g:4310:5: ( () ( (lv_variable_8_0= ruleVariable ) ) (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) ) )
                            {
                            // InternalOptGrammar.g:4310:5: ( () ( (lv_variable_8_0= ruleVariable ) ) (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) ) )
                            // InternalOptGrammar.g:4311:6: () ( (lv_variable_8_0= ruleVariable ) ) (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) )
                            {
                            // InternalOptGrammar.g:4311:6: ()
                            // InternalOptGrammar.g:4312:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElement(
                              								grammarAccess.getSimpleStatement2Access().getVarVariableTypeDeclarationAction_1_1_0_0(),
                              								current);
                              						
                            }

                            }

                            // InternalOptGrammar.g:4318:6: ( (lv_variable_8_0= ruleVariable ) )
                            // InternalOptGrammar.g:4319:7: (lv_variable_8_0= ruleVariable )
                            {
                            // InternalOptGrammar.g:4319:7: (lv_variable_8_0= ruleVariable )
                            // InternalOptGrammar.g:4320:8: lv_variable_8_0= ruleVariable
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSimpleStatement2Access().getVariableVariableParserRuleCall_1_1_0_1_0());
                              							
                            }
                            pushFollow(FOLLOW_58);
                            lv_variable_8_0=ruleVariable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSimpleStatement2Rule());
                              								}
                              								set(
                              									current,
                              									"variable",
                              									lv_variable_8_0,
                              									"org.unicam.myGrammar.OptGrammar.Variable");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalOptGrammar.g:4337:6: (otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) ) )
                            // InternalOptGrammar.g:4338:7: otherlv_9= '=' ( (lv_expression_10_0= ruleLogicalOperations ) )
                            {
                            otherlv_9=(Token)match(input,23,FOLLOW_17); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_9, grammarAccess.getSimpleStatement2Access().getEqualsSignKeyword_1_1_0_2_0());
                              						
                            }
                            // InternalOptGrammar.g:4342:7: ( (lv_expression_10_0= ruleLogicalOperations ) )
                            // InternalOptGrammar.g:4343:8: (lv_expression_10_0= ruleLogicalOperations )
                            {
                            // InternalOptGrammar.g:4343:8: (lv_expression_10_0= ruleLogicalOperations )
                            // InternalOptGrammar.g:4344:9: lv_expression_10_0= ruleLogicalOperations
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSimpleStatement2Access().getExpressionLogicalOperationsParserRuleCall_1_1_0_2_1_0());
                              								
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_10_0=ruleLogicalOperations();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSimpleStatement2Rule());
                              									}
                              									set(
                              										current,
                              										"expression",
                              										lv_expression_10_0,
                              										"org.unicam.myGrammar.OptGrammar.LogicalOperations");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalOptGrammar.g:4364:5: ( () ( (lv_tuple_12_0= ruleTuple ) ) (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) ) )
                            {
                            // InternalOptGrammar.g:4364:5: ( () ( (lv_tuple_12_0= ruleTuple ) ) (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) ) )
                            // InternalOptGrammar.g:4365:6: () ( (lv_tuple_12_0= ruleTuple ) ) (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) )
                            {
                            // InternalOptGrammar.g:4365:6: ()
                            // InternalOptGrammar.g:4366:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElement(
                              								grammarAccess.getSimpleStatement2Access().getVarVariableTupleVariableDeclarationAction_1_1_1_0(),
                              								current);
                              						
                            }

                            }

                            // InternalOptGrammar.g:4372:6: ( (lv_tuple_12_0= ruleTuple ) )
                            // InternalOptGrammar.g:4373:7: (lv_tuple_12_0= ruleTuple )
                            {
                            // InternalOptGrammar.g:4373:7: (lv_tuple_12_0= ruleTuple )
                            // InternalOptGrammar.g:4374:8: lv_tuple_12_0= ruleTuple
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSimpleStatement2Access().getTupleTupleParserRuleCall_1_1_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_58);
                            lv_tuple_12_0=ruleTuple();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSimpleStatement2Rule());
                              								}
                              								set(
                              									current,
                              									"tuple",
                              									lv_tuple_12_0,
                              									"org.unicam.myGrammar.OptGrammar.Tuple");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalOptGrammar.g:4391:6: (otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) ) )
                            // InternalOptGrammar.g:4392:7: otherlv_13= '=' ( (lv_expression_14_0= ruleLogicalOperations ) )
                            {
                            otherlv_13=(Token)match(input,23,FOLLOW_17); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_13, grammarAccess.getSimpleStatement2Access().getEqualsSignKeyword_1_1_1_2_0());
                              						
                            }
                            // InternalOptGrammar.g:4396:7: ( (lv_expression_14_0= ruleLogicalOperations ) )
                            // InternalOptGrammar.g:4397:8: (lv_expression_14_0= ruleLogicalOperations )
                            {
                            // InternalOptGrammar.g:4397:8: (lv_expression_14_0= ruleLogicalOperations )
                            // InternalOptGrammar.g:4398:9: lv_expression_14_0= ruleLogicalOperations
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSimpleStatement2Access().getExpressionLogicalOperationsParserRuleCall_1_1_1_2_1_0());
                              								
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_14_0=ruleLogicalOperations();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSimpleStatement2Rule());
                              									}
                              									set(
                              										current,
                              										"expression",
                              										lv_expression_14_0,
                              										"org.unicam.myGrammar.OptGrammar.LogicalOperations");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalOptGrammar.g:4420:3: this_ExpressionStatement_15= ruleExpressionStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSimpleStatement2Access().getExpressionStatementParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionStatement_15=ruleExpressionStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExpressionStatement_15;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleStatement2"


    // $ANTLR start "entryRuleExpressionStatement"
    // InternalOptGrammar.g:4432:1: entryRuleExpressionStatement returns [EObject current=null] : iv_ruleExpressionStatement= ruleExpressionStatement EOF ;
    public final EObject entryRuleExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionStatement = null;


        try {
            // InternalOptGrammar.g:4432:60: (iv_ruleExpressionStatement= ruleExpressionStatement EOF )
            // InternalOptGrammar.g:4433:2: iv_ruleExpressionStatement= ruleExpressionStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionStatement=ruleExpressionStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionStatement"


    // $ANTLR start "ruleExpressionStatement"
    // InternalOptGrammar.g:4439:1: ruleExpressionStatement returns [EObject current=null] : ( (lv_expression_0_0= ruleLogicalOperations ) ) ;
    public final EObject ruleExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:4445:2: ( ( (lv_expression_0_0= ruleLogicalOperations ) ) )
            // InternalOptGrammar.g:4446:2: ( (lv_expression_0_0= ruleLogicalOperations ) )
            {
            // InternalOptGrammar.g:4446:2: ( (lv_expression_0_0= ruleLogicalOperations ) )
            // InternalOptGrammar.g:4447:3: (lv_expression_0_0= ruleLogicalOperations )
            {
            // InternalOptGrammar.g:4447:3: (lv_expression_0_0= ruleLogicalOperations )
            // InternalOptGrammar.g:4448:4: lv_expression_0_0= ruleLogicalOperations
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getExpressionStatementAccess().getExpressionLogicalOperationsParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_expression_0_0=ruleLogicalOperations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getExpressionStatementRule());
              				}
              				set(
              					current,
              					"expression",
              					lv_expression_0_0,
              					"org.unicam.myGrammar.OptGrammar.LogicalOperations");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionStatement"


    // $ANTLR start "entryRuleQualifiedIdentifier"
    // InternalOptGrammar.g:4468:1: entryRuleQualifiedIdentifier returns [EObject current=null] : iv_ruleQualifiedIdentifier= ruleQualifiedIdentifier EOF ;
    public final EObject entryRuleQualifiedIdentifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQualifiedIdentifier = null;


        try {
            // InternalOptGrammar.g:4468:60: (iv_ruleQualifiedIdentifier= ruleQualifiedIdentifier EOF )
            // InternalOptGrammar.g:4469:2: iv_ruleQualifiedIdentifier= ruleQualifiedIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedIdentifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedIdentifier=ruleQualifiedIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedIdentifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedIdentifier"


    // $ANTLR start "ruleQualifiedIdentifier"
    // InternalOptGrammar.g:4475:1: ruleQualifiedIdentifier returns [EObject current=null] : ( ( (lv_identifier_0_0= RULE_ID ) ) ( (lv_qualifiers_1_0= ruleQualifier ) )* ) ;
    public final EObject ruleQualifiedIdentifier() throws RecognitionException {
        EObject current = null;

        Token lv_identifier_0_0=null;
        EObject lv_qualifiers_1_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:4481:2: ( ( ( (lv_identifier_0_0= RULE_ID ) ) ( (lv_qualifiers_1_0= ruleQualifier ) )* ) )
            // InternalOptGrammar.g:4482:2: ( ( (lv_identifier_0_0= RULE_ID ) ) ( (lv_qualifiers_1_0= ruleQualifier ) )* )
            {
            // InternalOptGrammar.g:4482:2: ( ( (lv_identifier_0_0= RULE_ID ) ) ( (lv_qualifiers_1_0= ruleQualifier ) )* )
            // InternalOptGrammar.g:4483:3: ( (lv_identifier_0_0= RULE_ID ) ) ( (lv_qualifiers_1_0= ruleQualifier ) )*
            {
            // InternalOptGrammar.g:4483:3: ( (lv_identifier_0_0= RULE_ID ) )
            // InternalOptGrammar.g:4484:4: (lv_identifier_0_0= RULE_ID )
            {
            // InternalOptGrammar.g:4484:4: (lv_identifier_0_0= RULE_ID )
            // InternalOptGrammar.g:4485:5: lv_identifier_0_0= RULE_ID
            {
            lv_identifier_0_0=(Token)match(input,RULE_ID,FOLLOW_66); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_identifier_0_0, grammarAccess.getQualifiedIdentifierAccess().getIdentifierIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getQualifiedIdentifierRule());
              					}
              					setWithLastConsumed(
              						current,
              						"identifier",
              						lv_identifier_0_0,
              						"org.eclipse.xtext.common.Terminals.ID");
              				
            }

            }


            }

            // InternalOptGrammar.g:4501:3: ( (lv_qualifiers_1_0= ruleQualifier ) )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( (LA95_0==25||LA95_0==32||LA95_0==34) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // InternalOptGrammar.g:4502:4: (lv_qualifiers_1_0= ruleQualifier )
            	    {
            	    // InternalOptGrammar.g:4502:4: (lv_qualifiers_1_0= ruleQualifier )
            	    // InternalOptGrammar.g:4503:5: lv_qualifiers_1_0= ruleQualifier
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getQualifiedIdentifierAccess().getQualifiersQualifierParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_66);
            	    lv_qualifiers_1_0=ruleQualifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getQualifiedIdentifierRule());
            	      					}
            	      					add(
            	      						current,
            	      						"qualifiers",
            	      						lv_qualifiers_1_0,
            	      						"org.unicam.myGrammar.OptGrammar.Qualifier");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedIdentifier"


    // $ANTLR start "entryRuleQualifier"
    // InternalOptGrammar.g:4524:1: entryRuleQualifier returns [EObject current=null] : iv_ruleQualifier= ruleQualifier EOF ;
    public final EObject entryRuleQualifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQualifier = null;


        try {
            // InternalOptGrammar.g:4524:50: (iv_ruleQualifier= ruleQualifier EOF )
            // InternalOptGrammar.g:4525:2: iv_ruleQualifier= ruleQualifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifier=ruleQualifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifier"


    // $ANTLR start "ruleQualifier"
    // InternalOptGrammar.g:4531:1: ruleQualifier returns [EObject current=null] : (this_Field_0= ruleField | this_Index_1= ruleIndex | this_Arguments_2= ruleArguments ) ;
    public final EObject ruleQualifier() throws RecognitionException {
        EObject current = null;

        EObject this_Field_0 = null;

        EObject this_Index_1 = null;

        EObject this_Arguments_2 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:4537:2: ( (this_Field_0= ruleField | this_Index_1= ruleIndex | this_Arguments_2= ruleArguments ) )
            // InternalOptGrammar.g:4538:2: (this_Field_0= ruleField | this_Index_1= ruleIndex | this_Arguments_2= ruleArguments )
            {
            // InternalOptGrammar.g:4538:2: (this_Field_0= ruleField | this_Index_1= ruleIndex | this_Arguments_2= ruleArguments )
            int alt96=3;
            switch ( input.LA(1) ) {
            case 32:
                {
                alt96=1;
                }
                break;
            case 25:
                {
                alt96=2;
                }
                break;
            case 34:
                {
                alt96=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 96, 0, input);

                throw nvae;
            }

            switch (alt96) {
                case 1 :
                    // InternalOptGrammar.g:4539:3: this_Field_0= ruleField
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQualifierAccess().getFieldParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Field_0=ruleField();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Field_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:4548:3: this_Index_1= ruleIndex
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQualifierAccess().getIndexParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Index_1=ruleIndex();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Index_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalOptGrammar.g:4557:3: this_Arguments_2= ruleArguments
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQualifierAccess().getArgumentsParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Arguments_2=ruleArguments();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Arguments_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifier"


    // $ANTLR start "entryRuleField"
    // InternalOptGrammar.g:4569:1: entryRuleField returns [EObject current=null] : iv_ruleField= ruleField EOF ;
    public final EObject entryRuleField() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleField = null;


        try {
            // InternalOptGrammar.g:4569:46: (iv_ruleField= ruleField EOF )
            // InternalOptGrammar.g:4570:2: iv_ruleField= ruleField EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFieldRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleField=ruleField();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleField; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleField"


    // $ANTLR start "ruleField"
    // InternalOptGrammar.g:4576:1: ruleField returns [EObject current=null] : (otherlv_0= '.' ( (lv_field_1_0= RULE_ID ) ) ) ;
    public final EObject ruleField() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_field_1_0=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:4582:2: ( (otherlv_0= '.' ( (lv_field_1_0= RULE_ID ) ) ) )
            // InternalOptGrammar.g:4583:2: (otherlv_0= '.' ( (lv_field_1_0= RULE_ID ) ) )
            {
            // InternalOptGrammar.g:4583:2: (otherlv_0= '.' ( (lv_field_1_0= RULE_ID ) ) )
            // InternalOptGrammar.g:4584:3: otherlv_0= '.' ( (lv_field_1_0= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,32,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFieldAccess().getFullStopKeyword_0());
              		
            }
            // InternalOptGrammar.g:4588:3: ( (lv_field_1_0= RULE_ID ) )
            // InternalOptGrammar.g:4589:4: (lv_field_1_0= RULE_ID )
            {
            // InternalOptGrammar.g:4589:4: (lv_field_1_0= RULE_ID )
            // InternalOptGrammar.g:4590:5: lv_field_1_0= RULE_ID
            {
            lv_field_1_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_field_1_0, grammarAccess.getFieldAccess().getFieldIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFieldRule());
              					}
              					setWithLastConsumed(
              						current,
              						"field",
              						lv_field_1_0,
              						"org.eclipse.xtext.common.Terminals.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleField"


    // $ANTLR start "entryRuleIndex"
    // InternalOptGrammar.g:4610:1: entryRuleIndex returns [EObject current=null] : iv_ruleIndex= ruleIndex EOF ;
    public final EObject entryRuleIndex() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIndex = null;


        try {
            // InternalOptGrammar.g:4610:46: (iv_ruleIndex= ruleIndex EOF )
            // InternalOptGrammar.g:4611:2: iv_ruleIndex= ruleIndex EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIndexRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIndex=ruleIndex();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIndex; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIndex"


    // $ANTLR start "ruleIndex"
    // InternalOptGrammar.g:4617:1: ruleIndex returns [EObject current=null] : (otherlv_0= '[' () ( (lv_value_2_0= ruleLogicalOperations ) )? otherlv_3= ']' ) ;
    public final EObject ruleIndex() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:4623:2: ( (otherlv_0= '[' () ( (lv_value_2_0= ruleLogicalOperations ) )? otherlv_3= ']' ) )
            // InternalOptGrammar.g:4624:2: (otherlv_0= '[' () ( (lv_value_2_0= ruleLogicalOperations ) )? otherlv_3= ']' )
            {
            // InternalOptGrammar.g:4624:2: (otherlv_0= '[' () ( (lv_value_2_0= ruleLogicalOperations ) )? otherlv_3= ']' )
            // InternalOptGrammar.g:4625:3: otherlv_0= '[' () ( (lv_value_2_0= ruleLogicalOperations ) )? otherlv_3= ']'
            {
            otherlv_0=(Token)match(input,25,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalOptGrammar.g:4629:3: ()
            // InternalOptGrammar.g:4630:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getIndexAccess().getIndexAction_1(),
              					current);
              			
            }

            }

            // InternalOptGrammar.g:4636:3: ( (lv_value_2_0= ruleLogicalOperations ) )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( ((LA97_0>=RULE_INT && LA97_0<=RULE_TX)||(LA97_0>=59 && LA97_0<=60)||(LA97_0>=62 && LA97_0<=69)||LA97_0==74||(LA97_0>=192 && LA97_0<=193)) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalOptGrammar.g:4637:4: (lv_value_2_0= ruleLogicalOperations )
                    {
                    // InternalOptGrammar.g:4637:4: (lv_value_2_0= ruleLogicalOperations )
                    // InternalOptGrammar.g:4638:5: lv_value_2_0= ruleLogicalOperations
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getIndexAccess().getValueLogicalOperationsParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_23);
                    lv_value_2_0=ruleLogicalOperations();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getIndexRule());
                      					}
                      					set(
                      						current,
                      						"value",
                      						lv_value_2_0,
                      						"org.unicam.myGrammar.OptGrammar.LogicalOperations");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getIndexAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIndex"


    // $ANTLR start "entryRuleArguments"
    // InternalOptGrammar.g:4663:1: entryRuleArguments returns [EObject current=null] : iv_ruleArguments= ruleArguments EOF ;
    public final EObject entryRuleArguments() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArguments = null;


        try {
            // InternalOptGrammar.g:4663:50: (iv_ruleArguments= ruleArguments EOF )
            // InternalOptGrammar.g:4664:2: iv_ruleArguments= ruleArguments EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgumentsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArguments=ruleArguments();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArguments; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArguments"


    // $ANTLR start "ruleArguments"
    // InternalOptGrammar.g:4670:1: ruleArguments returns [EObject current=null] : ( (lv_arguments_0_0= ruleFunctionCallArguments ) ) ;
    public final EObject ruleArguments() throws RecognitionException {
        EObject current = null;

        EObject lv_arguments_0_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:4676:2: ( ( (lv_arguments_0_0= ruleFunctionCallArguments ) ) )
            // InternalOptGrammar.g:4677:2: ( (lv_arguments_0_0= ruleFunctionCallArguments ) )
            {
            // InternalOptGrammar.g:4677:2: ( (lv_arguments_0_0= ruleFunctionCallArguments ) )
            // InternalOptGrammar.g:4678:3: (lv_arguments_0_0= ruleFunctionCallArguments )
            {
            // InternalOptGrammar.g:4678:3: (lv_arguments_0_0= ruleFunctionCallArguments )
            // InternalOptGrammar.g:4679:4: lv_arguments_0_0= ruleFunctionCallArguments
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getArgumentsAccess().getArgumentsFunctionCallArgumentsParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_arguments_0_0=ruleFunctionCallArguments();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getArgumentsRule());
              				}
              				set(
              					current,
              					"arguments",
              					lv_arguments_0_0,
              					"org.unicam.myGrammar.OptGrammar.FunctionCallArguments");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArguments"


    // $ANTLR start "entryRuleReturnParameterDeclaration"
    // InternalOptGrammar.g:4699:1: entryRuleReturnParameterDeclaration returns [EObject current=null] : iv_ruleReturnParameterDeclaration= ruleReturnParameterDeclaration EOF ;
    public final EObject entryRuleReturnParameterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReturnParameterDeclaration = null;


        try {
            // InternalOptGrammar.g:4699:67: (iv_ruleReturnParameterDeclaration= ruleReturnParameterDeclaration EOF )
            // InternalOptGrammar.g:4700:2: iv_ruleReturnParameterDeclaration= ruleReturnParameterDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnParameterDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReturnParameterDeclaration=ruleReturnParameterDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReturnParameterDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReturnParameterDeclaration"


    // $ANTLR start "ruleReturnParameterDeclaration"
    // InternalOptGrammar.g:4706:1: ruleReturnParameterDeclaration returns [EObject current=null] : ( ( (lv_typeRef_0_0= ruleType ) ) ( (lv_variable_1_0= ruleVariable ) )? ) ;
    public final EObject ruleReturnParameterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject lv_typeRef_0_0 = null;

        EObject lv_variable_1_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:4712:2: ( ( ( (lv_typeRef_0_0= ruleType ) ) ( (lv_variable_1_0= ruleVariable ) )? ) )
            // InternalOptGrammar.g:4713:2: ( ( (lv_typeRef_0_0= ruleType ) ) ( (lv_variable_1_0= ruleVariable ) )? )
            {
            // InternalOptGrammar.g:4713:2: ( ( (lv_typeRef_0_0= ruleType ) ) ( (lv_variable_1_0= ruleVariable ) )? )
            // InternalOptGrammar.g:4714:3: ( (lv_typeRef_0_0= ruleType ) ) ( (lv_variable_1_0= ruleVariable ) )?
            {
            // InternalOptGrammar.g:4714:3: ( (lv_typeRef_0_0= ruleType ) )
            // InternalOptGrammar.g:4715:4: (lv_typeRef_0_0= ruleType )
            {
            // InternalOptGrammar.g:4715:4: (lv_typeRef_0_0= ruleType )
            // InternalOptGrammar.g:4716:5: lv_typeRef_0_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReturnParameterDeclarationAccess().getTypeRefTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_67);
            lv_typeRef_0_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReturnParameterDeclarationRule());
              					}
              					set(
              						current,
              						"typeRef",
              						lv_typeRef_0_0,
              						"org.unicam.myGrammar.OptGrammar.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalOptGrammar.g:4733:3: ( (lv_variable_1_0= ruleVariable ) )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==RULE_ID) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalOptGrammar.g:4734:4: (lv_variable_1_0= ruleVariable )
                    {
                    // InternalOptGrammar.g:4734:4: (lv_variable_1_0= ruleVariable )
                    // InternalOptGrammar.g:4735:5: lv_variable_1_0= ruleVariable
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReturnParameterDeclarationAccess().getVariableVariableParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_variable_1_0=ruleVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReturnParameterDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"variable",
                      						lv_variable_1_0,
                      						"org.unicam.myGrammar.OptGrammar.Variable");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReturnParameterDeclaration"


    // $ANTLR start "entryRuleLoopStructures"
    // InternalOptGrammar.g:4756:1: entryRuleLoopStructures returns [EObject current=null] : iv_ruleLoopStructures= ruleLoopStructures EOF ;
    public final EObject entryRuleLoopStructures() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLoopStructures = null;


        try {
            // InternalOptGrammar.g:4756:55: (iv_ruleLoopStructures= ruleLoopStructures EOF )
            // InternalOptGrammar.g:4757:2: iv_ruleLoopStructures= ruleLoopStructures EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLoopStructuresRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLoopStructures=ruleLoopStructures();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLoopStructures; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLoopStructures"


    // $ANTLR start "ruleLoopStructures"
    // InternalOptGrammar.g:4763:1: ruleLoopStructures returns [EObject current=null] : (this_IfStatement_0= ruleIfStatement | this_WhileStatement_1= ruleWhileStatement | this_ForStatement_2= ruleForStatement ) ;
    public final EObject ruleLoopStructures() throws RecognitionException {
        EObject current = null;

        EObject this_IfStatement_0 = null;

        EObject this_WhileStatement_1 = null;

        EObject this_ForStatement_2 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:4769:2: ( (this_IfStatement_0= ruleIfStatement | this_WhileStatement_1= ruleWhileStatement | this_ForStatement_2= ruleForStatement ) )
            // InternalOptGrammar.g:4770:2: (this_IfStatement_0= ruleIfStatement | this_WhileStatement_1= ruleWhileStatement | this_ForStatement_2= ruleForStatement )
            {
            // InternalOptGrammar.g:4770:2: (this_IfStatement_0= ruleIfStatement | this_WhileStatement_1= ruleWhileStatement | this_ForStatement_2= ruleForStatement )
            int alt99=3;
            switch ( input.LA(1) ) {
            case 50:
                {
                alt99=1;
                }
                break;
            case 52:
                {
                alt99=2;
                }
                break;
            case 53:
                {
                alt99=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 99, 0, input);

                throw nvae;
            }

            switch (alt99) {
                case 1 :
                    // InternalOptGrammar.g:4771:3: this_IfStatement_0= ruleIfStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLoopStructuresAccess().getIfStatementParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IfStatement_0=ruleIfStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IfStatement_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:4780:3: this_WhileStatement_1= ruleWhileStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLoopStructuresAccess().getWhileStatementParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_WhileStatement_1=ruleWhileStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_WhileStatement_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalOptGrammar.g:4789:3: this_ForStatement_2= ruleForStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLoopStructuresAccess().getForStatementParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ForStatement_2=ruleForStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ForStatement_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLoopStructures"


    // $ANTLR start "entryRuleStatement"
    // InternalOptGrammar.g:4801:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // InternalOptGrammar.g:4801:50: (iv_ruleStatement= ruleStatement EOF )
            // InternalOptGrammar.g:4802:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalOptGrammar.g:4808:1: ruleStatement returns [EObject current=null] : (this_LoopStructures_0= ruleLoopStructures | this_Body_1= ruleBody | this_PlaceHolderStatement_2= rulePlaceHolderStatement | (this_ContinueStatement_3= ruleContinueStatement | this_BreakStatement_4= ruleBreakStatement | this_ReturnStatement_5= ruleReturnStatement | this_ThrowStatement_6= ruleThrowStatement | this_DeleteStatement_7= ruleDeleteStatement | this_SimpleStatement_8= ruleSimpleStatement ) ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        EObject this_LoopStructures_0 = null;

        EObject this_Body_1 = null;

        EObject this_PlaceHolderStatement_2 = null;

        EObject this_ContinueStatement_3 = null;

        EObject this_BreakStatement_4 = null;

        EObject this_ReturnStatement_5 = null;

        EObject this_ThrowStatement_6 = null;

        EObject this_DeleteStatement_7 = null;

        EObject this_SimpleStatement_8 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:4814:2: ( (this_LoopStructures_0= ruleLoopStructures | this_Body_1= ruleBody | this_PlaceHolderStatement_2= rulePlaceHolderStatement | (this_ContinueStatement_3= ruleContinueStatement | this_BreakStatement_4= ruleBreakStatement | this_ReturnStatement_5= ruleReturnStatement | this_ThrowStatement_6= ruleThrowStatement | this_DeleteStatement_7= ruleDeleteStatement | this_SimpleStatement_8= ruleSimpleStatement ) ) )
            // InternalOptGrammar.g:4815:2: (this_LoopStructures_0= ruleLoopStructures | this_Body_1= ruleBody | this_PlaceHolderStatement_2= rulePlaceHolderStatement | (this_ContinueStatement_3= ruleContinueStatement | this_BreakStatement_4= ruleBreakStatement | this_ReturnStatement_5= ruleReturnStatement | this_ThrowStatement_6= ruleThrowStatement | this_DeleteStatement_7= ruleDeleteStatement | this_SimpleStatement_8= ruleSimpleStatement ) )
            {
            // InternalOptGrammar.g:4815:2: (this_LoopStructures_0= ruleLoopStructures | this_Body_1= ruleBody | this_PlaceHolderStatement_2= rulePlaceHolderStatement | (this_ContinueStatement_3= ruleContinueStatement | this_BreakStatement_4= ruleBreakStatement | this_ReturnStatement_5= ruleReturnStatement | this_ThrowStatement_6= ruleThrowStatement | this_DeleteStatement_7= ruleDeleteStatement | this_SimpleStatement_8= ruleSimpleStatement ) )
            int alt101=4;
            switch ( input.LA(1) ) {
            case 50:
            case 52:
            case 53:
                {
                alt101=1;
                }
                break;
            case 17:
                {
                alt101=2;
                }
                break;
            case 58:
                {
                alt101=3;
                }
                break;
            case RULE_INT:
            case RULE_STRING:
            case RULE_HEX:
            case RULE_DECIMAL:
            case RULE_BLOCK:
            case RULE_MSG:
            case RULE_TX:
            case 28:
            case 29:
            case 33:
            case 48:
            case 49:
            case 54:
            case 55:
            case 56:
            case 57:
            case 59:
            case 60:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 123:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 176:
            case 177:
            case 180:
            case 181:
            case 182:
            case 183:
            case 192:
            case 193:
                {
                alt101=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 101, 0, input);

                throw nvae;
            }

            switch (alt101) {
                case 1 :
                    // InternalOptGrammar.g:4816:3: this_LoopStructures_0= ruleLoopStructures
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getLoopStructuresParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LoopStructures_0=ruleLoopStructures();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LoopStructures_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:4825:3: this_Body_1= ruleBody
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getBodyParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Body_1=ruleBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Body_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalOptGrammar.g:4834:3: this_PlaceHolderStatement_2= rulePlaceHolderStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getPlaceHolderStatementParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PlaceHolderStatement_2=rulePlaceHolderStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PlaceHolderStatement_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalOptGrammar.g:4843:3: (this_ContinueStatement_3= ruleContinueStatement | this_BreakStatement_4= ruleBreakStatement | this_ReturnStatement_5= ruleReturnStatement | this_ThrowStatement_6= ruleThrowStatement | this_DeleteStatement_7= ruleDeleteStatement | this_SimpleStatement_8= ruleSimpleStatement )
                    {
                    // InternalOptGrammar.g:4843:3: (this_ContinueStatement_3= ruleContinueStatement | this_BreakStatement_4= ruleBreakStatement | this_ReturnStatement_5= ruleReturnStatement | this_ThrowStatement_6= ruleThrowStatement | this_DeleteStatement_7= ruleDeleteStatement | this_SimpleStatement_8= ruleSimpleStatement )
                    int alt100=6;
                    switch ( input.LA(1) ) {
                    case 54:
                        {
                        alt100=1;
                        }
                        break;
                    case 55:
                        {
                        alt100=2;
                        }
                        break;
                    case 56:
                        {
                        alt100=3;
                        }
                        break;
                    case 57:
                        {
                        alt100=4;
                        }
                        break;
                    case 49:
                        {
                        alt100=5;
                        }
                        break;
                    case RULE_INT:
                    case RULE_STRING:
                    case RULE_HEX:
                    case RULE_DECIMAL:
                    case RULE_BLOCK:
                    case RULE_MSG:
                    case RULE_TX:
                    case 28:
                    case 29:
                    case 33:
                    case 48:
                    case 59:
                    case 60:
                    case 62:
                    case 63:
                    case 64:
                    case 65:
                    case 66:
                    case 67:
                    case 68:
                    case 69:
                    case 74:
                    case 75:
                    case 76:
                    case 77:
                    case 78:
                    case 79:
                    case 80:
                    case 81:
                    case 82:
                    case 83:
                    case 84:
                    case 85:
                    case 86:
                    case 87:
                    case 88:
                    case 89:
                    case 90:
                    case 91:
                    case 92:
                    case 93:
                    case 94:
                    case 95:
                    case 96:
                    case 97:
                    case 98:
                    case 99:
                    case 100:
                    case 101:
                    case 102:
                    case 103:
                    case 104:
                    case 105:
                    case 106:
                    case 107:
                    case 108:
                    case 109:
                    case 110:
                    case 111:
                    case 112:
                    case 113:
                    case 114:
                    case 115:
                    case 116:
                    case 117:
                    case 118:
                    case 119:
                    case 120:
                    case 121:
                    case 122:
                    case 123:
                    case 124:
                    case 125:
                    case 126:
                    case 127:
                    case 128:
                    case 129:
                    case 130:
                    case 131:
                    case 132:
                    case 133:
                    case 134:
                    case 135:
                    case 136:
                    case 137:
                    case 138:
                    case 139:
                    case 140:
                    case 141:
                    case 142:
                    case 143:
                    case 144:
                    case 145:
                    case 146:
                    case 147:
                    case 148:
                    case 149:
                    case 150:
                    case 151:
                    case 152:
                    case 153:
                    case 154:
                    case 155:
                    case 156:
                    case 157:
                    case 158:
                    case 159:
                    case 160:
                    case 161:
                    case 162:
                    case 163:
                    case 164:
                    case 165:
                    case 166:
                    case 167:
                    case 168:
                    case 169:
                    case 170:
                    case 171:
                    case 172:
                    case 173:
                    case 174:
                    case 175:
                    case 176:
                    case 177:
                    case 180:
                    case 181:
                    case 182:
                    case 183:
                    case 192:
                    case 193:
                        {
                        alt100=6;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 100, 0, input);

                        throw nvae;
                    }

                    switch (alt100) {
                        case 1 :
                            // InternalOptGrammar.g:4844:4: this_ContinueStatement_3= ruleContinueStatement
                            {
                            if ( state.backtracking==0 ) {

                              				newCompositeNode(grammarAccess.getStatementAccess().getContinueStatementParserRuleCall_3_0());
                              			
                            }
                            pushFollow(FOLLOW_2);
                            this_ContinueStatement_3=ruleContinueStatement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              				current = this_ContinueStatement_3;
                              				afterParserOrEnumRuleCall();
                              			
                            }

                            }
                            break;
                        case 2 :
                            // InternalOptGrammar.g:4853:4: this_BreakStatement_4= ruleBreakStatement
                            {
                            if ( state.backtracking==0 ) {

                              				newCompositeNode(grammarAccess.getStatementAccess().getBreakStatementParserRuleCall_3_1());
                              			
                            }
                            pushFollow(FOLLOW_2);
                            this_BreakStatement_4=ruleBreakStatement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              				current = this_BreakStatement_4;
                              				afterParserOrEnumRuleCall();
                              			
                            }

                            }
                            break;
                        case 3 :
                            // InternalOptGrammar.g:4862:4: this_ReturnStatement_5= ruleReturnStatement
                            {
                            if ( state.backtracking==0 ) {

                              				newCompositeNode(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_3_2());
                              			
                            }
                            pushFollow(FOLLOW_2);
                            this_ReturnStatement_5=ruleReturnStatement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              				current = this_ReturnStatement_5;
                              				afterParserOrEnumRuleCall();
                              			
                            }

                            }
                            break;
                        case 4 :
                            // InternalOptGrammar.g:4871:4: this_ThrowStatement_6= ruleThrowStatement
                            {
                            if ( state.backtracking==0 ) {

                              				newCompositeNode(grammarAccess.getStatementAccess().getThrowStatementParserRuleCall_3_3());
                              			
                            }
                            pushFollow(FOLLOW_2);
                            this_ThrowStatement_6=ruleThrowStatement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              				current = this_ThrowStatement_6;
                              				afterParserOrEnumRuleCall();
                              			
                            }

                            }
                            break;
                        case 5 :
                            // InternalOptGrammar.g:4880:4: this_DeleteStatement_7= ruleDeleteStatement
                            {
                            if ( state.backtracking==0 ) {

                              				newCompositeNode(grammarAccess.getStatementAccess().getDeleteStatementParserRuleCall_3_4());
                              			
                            }
                            pushFollow(FOLLOW_2);
                            this_DeleteStatement_7=ruleDeleteStatement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              				current = this_DeleteStatement_7;
                              				afterParserOrEnumRuleCall();
                              			
                            }

                            }
                            break;
                        case 6 :
                            // InternalOptGrammar.g:4889:4: this_SimpleStatement_8= ruleSimpleStatement
                            {
                            if ( state.backtracking==0 ) {

                              				newCompositeNode(grammarAccess.getStatementAccess().getSimpleStatementParserRuleCall_3_5());
                              			
                            }
                            pushFollow(FOLLOW_2);
                            this_SimpleStatement_8=ruleSimpleStatement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              				current = this_SimpleStatement_8;
                              				afterParserOrEnumRuleCall();
                              			
                            }

                            }
                            break;

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleDeleteStatement"
    // InternalOptGrammar.g:4902:1: entryRuleDeleteStatement returns [EObject current=null] : iv_ruleDeleteStatement= ruleDeleteStatement EOF ;
    public final EObject entryRuleDeleteStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeleteStatement = null;


        try {
            // InternalOptGrammar.g:4902:56: (iv_ruleDeleteStatement= ruleDeleteStatement EOF )
            // InternalOptGrammar.g:4903:2: iv_ruleDeleteStatement= ruleDeleteStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeleteStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDeleteStatement=ruleDeleteStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeleteStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeleteStatement"


    // $ANTLR start "ruleDeleteStatement"
    // InternalOptGrammar.g:4909:1: ruleDeleteStatement returns [EObject current=null] : (otherlv_0= 'delete' ( (lv_variable_1_0= ruleQualifiedIdentifier ) ) otherlv_2= ';' ) ;
    public final EObject ruleDeleteStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_variable_1_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:4915:2: ( (otherlv_0= 'delete' ( (lv_variable_1_0= ruleQualifiedIdentifier ) ) otherlv_2= ';' ) )
            // InternalOptGrammar.g:4916:2: (otherlv_0= 'delete' ( (lv_variable_1_0= ruleQualifiedIdentifier ) ) otherlv_2= ';' )
            {
            // InternalOptGrammar.g:4916:2: (otherlv_0= 'delete' ( (lv_variable_1_0= ruleQualifiedIdentifier ) ) otherlv_2= ';' )
            // InternalOptGrammar.g:4917:3: otherlv_0= 'delete' ( (lv_variable_1_0= ruleQualifiedIdentifier ) ) otherlv_2= ';'
            {
            otherlv_0=(Token)match(input,49,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDeleteStatementAccess().getDeleteKeyword_0());
              		
            }
            // InternalOptGrammar.g:4921:3: ( (lv_variable_1_0= ruleQualifiedIdentifier ) )
            // InternalOptGrammar.g:4922:4: (lv_variable_1_0= ruleQualifiedIdentifier )
            {
            // InternalOptGrammar.g:4922:4: (lv_variable_1_0= ruleQualifiedIdentifier )
            // InternalOptGrammar.g:4923:5: lv_variable_1_0= ruleQualifiedIdentifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDeleteStatementAccess().getVariableQualifiedIdentifierParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_7);
            lv_variable_1_0=ruleQualifiedIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDeleteStatementRule());
              					}
              					set(
              						current,
              						"variable",
              						lv_variable_1_0,
              						"org.unicam.myGrammar.OptGrammar.QualifiedIdentifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDeleteStatementAccess().getSemicolonKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeleteStatement"


    // $ANTLR start "entryRuleIfStatement"
    // InternalOptGrammar.g:4948:1: entryRuleIfStatement returns [EObject current=null] : iv_ruleIfStatement= ruleIfStatement EOF ;
    public final EObject entryRuleIfStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfStatement = null;


        try {
            // InternalOptGrammar.g:4948:52: (iv_ruleIfStatement= ruleIfStatement EOF )
            // InternalOptGrammar.g:4949:2: iv_ruleIfStatement= ruleIfStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIfStatement=ruleIfStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfStatement"


    // $ANTLR start "ruleIfStatement"
    // InternalOptGrammar.g:4955:1: ruleIfStatement returns [EObject current=null] : (otherlv_0= 'if' otherlv_1= '(' ( (lv_condition_2_0= ruleLogicalOperations ) ) otherlv_3= ')' ( (lv_trueBody_4_0= ruleStatement ) ) ( ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_falseBody_6_0= ruleStatement ) ) )? ) ;
    public final EObject ruleIfStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_condition_2_0 = null;

        EObject lv_trueBody_4_0 = null;

        EObject lv_falseBody_6_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:4961:2: ( (otherlv_0= 'if' otherlv_1= '(' ( (lv_condition_2_0= ruleLogicalOperations ) ) otherlv_3= ')' ( (lv_trueBody_4_0= ruleStatement ) ) ( ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_falseBody_6_0= ruleStatement ) ) )? ) )
            // InternalOptGrammar.g:4962:2: (otherlv_0= 'if' otherlv_1= '(' ( (lv_condition_2_0= ruleLogicalOperations ) ) otherlv_3= ')' ( (lv_trueBody_4_0= ruleStatement ) ) ( ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_falseBody_6_0= ruleStatement ) ) )? )
            {
            // InternalOptGrammar.g:4962:2: (otherlv_0= 'if' otherlv_1= '(' ( (lv_condition_2_0= ruleLogicalOperations ) ) otherlv_3= ')' ( (lv_trueBody_4_0= ruleStatement ) ) ( ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_falseBody_6_0= ruleStatement ) ) )? )
            // InternalOptGrammar.g:4963:3: otherlv_0= 'if' otherlv_1= '(' ( (lv_condition_2_0= ruleLogicalOperations ) ) otherlv_3= ')' ( (lv_trueBody_4_0= ruleStatement ) ) ( ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_falseBody_6_0= ruleStatement ) ) )?
            {
            otherlv_0=(Token)match(input,50,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIfStatementAccess().getIfKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,34,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalOptGrammar.g:4971:3: ( (lv_condition_2_0= ruleLogicalOperations ) )
            // InternalOptGrammar.g:4972:4: (lv_condition_2_0= ruleLogicalOperations )
            {
            // InternalOptGrammar.g:4972:4: (lv_condition_2_0= ruleLogicalOperations )
            // InternalOptGrammar.g:4973:5: lv_condition_2_0= ruleLogicalOperations
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIfStatementAccess().getConditionLogicalOperationsParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_35);
            lv_condition_2_0=ruleLogicalOperations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIfStatementRule());
              					}
              					set(
              						current,
              						"condition",
              						lv_condition_2_0,
              						"org.unicam.myGrammar.OptGrammar.LogicalOperations");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,36,FOLLOW_68); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3());
              		
            }
            // InternalOptGrammar.g:4994:3: ( (lv_trueBody_4_0= ruleStatement ) )
            // InternalOptGrammar.g:4995:4: (lv_trueBody_4_0= ruleStatement )
            {
            // InternalOptGrammar.g:4995:4: (lv_trueBody_4_0= ruleStatement )
            // InternalOptGrammar.g:4996:5: lv_trueBody_4_0= ruleStatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIfStatementAccess().getTrueBodyStatementParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_69);
            lv_trueBody_4_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIfStatementRule());
              					}
              					set(
              						current,
              						"trueBody",
              						lv_trueBody_4_0,
              						"org.unicam.myGrammar.OptGrammar.Statement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalOptGrammar.g:5013:3: ( ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_falseBody_6_0= ruleStatement ) ) )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==51) ) {
                int LA102_1 = input.LA(2);

                if ( (synpred1_InternalOptGrammar()) ) {
                    alt102=1;
                }
            }
            switch (alt102) {
                case 1 :
                    // InternalOptGrammar.g:5014:4: ( ( 'else' )=>otherlv_5= 'else' ) ( (lv_falseBody_6_0= ruleStatement ) )
                    {
                    // InternalOptGrammar.g:5014:4: ( ( 'else' )=>otherlv_5= 'else' )
                    // InternalOptGrammar.g:5015:5: ( 'else' )=>otherlv_5= 'else'
                    {
                    otherlv_5=(Token)match(input,51,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getIfStatementAccess().getElseKeyword_5_0());
                      				
                    }

                    }

                    // InternalOptGrammar.g:5021:4: ( (lv_falseBody_6_0= ruleStatement ) )
                    // InternalOptGrammar.g:5022:5: (lv_falseBody_6_0= ruleStatement )
                    {
                    // InternalOptGrammar.g:5022:5: (lv_falseBody_6_0= ruleStatement )
                    // InternalOptGrammar.g:5023:6: lv_falseBody_6_0= ruleStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIfStatementAccess().getFalseBodyStatementParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_falseBody_6_0=ruleStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIfStatementRule());
                      						}
                      						set(
                      							current,
                      							"falseBody",
                      							lv_falseBody_6_0,
                      							"org.unicam.myGrammar.OptGrammar.Statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfStatement"


    // $ANTLR start "entryRuleWhileStatement"
    // InternalOptGrammar.g:5045:1: entryRuleWhileStatement returns [EObject current=null] : iv_ruleWhileStatement= ruleWhileStatement EOF ;
    public final EObject entryRuleWhileStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhileStatement = null;


        try {
            // InternalOptGrammar.g:5045:55: (iv_ruleWhileStatement= ruleWhileStatement EOF )
            // InternalOptGrammar.g:5046:2: iv_ruleWhileStatement= ruleWhileStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWhileStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWhileStatement=ruleWhileStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWhileStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWhileStatement"


    // $ANTLR start "ruleWhileStatement"
    // InternalOptGrammar.g:5052:1: ruleWhileStatement returns [EObject current=null] : (otherlv_0= 'while' otherlv_1= '(' ( (lv_condition_2_0= ruleLogicalOperations ) ) otherlv_3= ')' ( (lv_body_4_0= ruleStatement ) ) ) ;
    public final EObject ruleWhileStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_condition_2_0 = null;

        EObject lv_body_4_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:5058:2: ( (otherlv_0= 'while' otherlv_1= '(' ( (lv_condition_2_0= ruleLogicalOperations ) ) otherlv_3= ')' ( (lv_body_4_0= ruleStatement ) ) ) )
            // InternalOptGrammar.g:5059:2: (otherlv_0= 'while' otherlv_1= '(' ( (lv_condition_2_0= ruleLogicalOperations ) ) otherlv_3= ')' ( (lv_body_4_0= ruleStatement ) ) )
            {
            // InternalOptGrammar.g:5059:2: (otherlv_0= 'while' otherlv_1= '(' ( (lv_condition_2_0= ruleLogicalOperations ) ) otherlv_3= ')' ( (lv_body_4_0= ruleStatement ) ) )
            // InternalOptGrammar.g:5060:3: otherlv_0= 'while' otherlv_1= '(' ( (lv_condition_2_0= ruleLogicalOperations ) ) otherlv_3= ')' ( (lv_body_4_0= ruleStatement ) )
            {
            otherlv_0=(Token)match(input,52,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getWhileStatementAccess().getWhileKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,34,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalOptGrammar.g:5068:3: ( (lv_condition_2_0= ruleLogicalOperations ) )
            // InternalOptGrammar.g:5069:4: (lv_condition_2_0= ruleLogicalOperations )
            {
            // InternalOptGrammar.g:5069:4: (lv_condition_2_0= ruleLogicalOperations )
            // InternalOptGrammar.g:5070:5: lv_condition_2_0= ruleLogicalOperations
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getWhileStatementAccess().getConditionLogicalOperationsParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_35);
            lv_condition_2_0=ruleLogicalOperations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getWhileStatementRule());
              					}
              					set(
              						current,
              						"condition",
              						lv_condition_2_0,
              						"org.unicam.myGrammar.OptGrammar.LogicalOperations");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,36,FOLLOW_68); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3());
              		
            }
            // InternalOptGrammar.g:5091:3: ( (lv_body_4_0= ruleStatement ) )
            // InternalOptGrammar.g:5092:4: (lv_body_4_0= ruleStatement )
            {
            // InternalOptGrammar.g:5092:4: (lv_body_4_0= ruleStatement )
            // InternalOptGrammar.g:5093:5: lv_body_4_0= ruleStatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getWhileStatementAccess().getBodyStatementParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_4_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getWhileStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_4_0,
              						"org.unicam.myGrammar.OptGrammar.Statement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhileStatement"


    // $ANTLR start "entryRuleForStatement"
    // InternalOptGrammar.g:5114:1: entryRuleForStatement returns [EObject current=null] : iv_ruleForStatement= ruleForStatement EOF ;
    public final EObject entryRuleForStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForStatement = null;


        try {
            // InternalOptGrammar.g:5114:53: (iv_ruleForStatement= ruleForStatement EOF )
            // InternalOptGrammar.g:5115:2: iv_ruleForStatement= ruleForStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleForStatement=ruleForStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForStatement"


    // $ANTLR start "ruleForStatement"
    // InternalOptGrammar.g:5121:1: ruleForStatement returns [EObject current=null] : (otherlv_0= 'for' otherlv_1= '(' ( (lv_initExpression_2_0= ruleSimpleStatement2 ) )? ( ( ';' )=>otherlv_3= ';' ) ( (lv_conditionExpression_4_0= ruleLogicalOperations ) )? otherlv_5= ';' ( (lv_loopExpression_6_0= ruleExpressionStatement ) )? otherlv_7= ')' ( (lv_body_8_0= ruleStatement ) ) ) ;
    public final EObject ruleForStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_initExpression_2_0 = null;

        EObject lv_conditionExpression_4_0 = null;

        EObject lv_loopExpression_6_0 = null;

        EObject lv_body_8_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:5127:2: ( (otherlv_0= 'for' otherlv_1= '(' ( (lv_initExpression_2_0= ruleSimpleStatement2 ) )? ( ( ';' )=>otherlv_3= ';' ) ( (lv_conditionExpression_4_0= ruleLogicalOperations ) )? otherlv_5= ';' ( (lv_loopExpression_6_0= ruleExpressionStatement ) )? otherlv_7= ')' ( (lv_body_8_0= ruleStatement ) ) ) )
            // InternalOptGrammar.g:5128:2: (otherlv_0= 'for' otherlv_1= '(' ( (lv_initExpression_2_0= ruleSimpleStatement2 ) )? ( ( ';' )=>otherlv_3= ';' ) ( (lv_conditionExpression_4_0= ruleLogicalOperations ) )? otherlv_5= ';' ( (lv_loopExpression_6_0= ruleExpressionStatement ) )? otherlv_7= ')' ( (lv_body_8_0= ruleStatement ) ) )
            {
            // InternalOptGrammar.g:5128:2: (otherlv_0= 'for' otherlv_1= '(' ( (lv_initExpression_2_0= ruleSimpleStatement2 ) )? ( ( ';' )=>otherlv_3= ';' ) ( (lv_conditionExpression_4_0= ruleLogicalOperations ) )? otherlv_5= ';' ( (lv_loopExpression_6_0= ruleExpressionStatement ) )? otherlv_7= ')' ( (lv_body_8_0= ruleStatement ) ) )
            // InternalOptGrammar.g:5129:3: otherlv_0= 'for' otherlv_1= '(' ( (lv_initExpression_2_0= ruleSimpleStatement2 ) )? ( ( ';' )=>otherlv_3= ';' ) ( (lv_conditionExpression_4_0= ruleLogicalOperations ) )? otherlv_5= ';' ( (lv_loopExpression_6_0= ruleExpressionStatement ) )? otherlv_7= ')' ( (lv_body_8_0= ruleStatement ) )
            {
            otherlv_0=(Token)match(input,53,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getForStatementAccess().getForKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,34,FOLLOW_70); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalOptGrammar.g:5137:3: ( (lv_initExpression_2_0= ruleSimpleStatement2 ) )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( ((LA103_0>=RULE_INT && LA103_0<=RULE_TX)||(LA103_0>=28 && LA103_0<=29)||LA103_0==33||LA103_0==48||(LA103_0>=59 && LA103_0<=60)||(LA103_0>=62 && LA103_0<=69)||(LA103_0>=74 && LA103_0<=177)||(LA103_0>=180 && LA103_0<=183)||(LA103_0>=192 && LA103_0<=193)) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalOptGrammar.g:5138:4: (lv_initExpression_2_0= ruleSimpleStatement2 )
                    {
                    // InternalOptGrammar.g:5138:4: (lv_initExpression_2_0= ruleSimpleStatement2 )
                    // InternalOptGrammar.g:5139:5: lv_initExpression_2_0= ruleSimpleStatement2
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForStatementAccess().getInitExpressionSimpleStatement2ParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_7);
                    lv_initExpression_2_0=ruleSimpleStatement2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForStatementRule());
                      					}
                      					set(
                      						current,
                      						"initExpression",
                      						lv_initExpression_2_0,
                      						"org.unicam.myGrammar.OptGrammar.SimpleStatement2");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalOptGrammar.g:5156:3: ( ( ';' )=>otherlv_3= ';' )
            // InternalOptGrammar.g:5157:4: ( ';' )=>otherlv_3= ';'
            {
            otherlv_3=(Token)match(input,18,FOLLOW_71); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_3, grammarAccess.getForStatementAccess().getSemicolonKeyword_3());
              			
            }

            }

            // InternalOptGrammar.g:5163:3: ( (lv_conditionExpression_4_0= ruleLogicalOperations ) )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( ((LA104_0>=RULE_INT && LA104_0<=RULE_TX)||(LA104_0>=59 && LA104_0<=60)||(LA104_0>=62 && LA104_0<=69)||LA104_0==74||(LA104_0>=192 && LA104_0<=193)) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalOptGrammar.g:5164:4: (lv_conditionExpression_4_0= ruleLogicalOperations )
                    {
                    // InternalOptGrammar.g:5164:4: (lv_conditionExpression_4_0= ruleLogicalOperations )
                    // InternalOptGrammar.g:5165:5: lv_conditionExpression_4_0= ruleLogicalOperations
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForStatementAccess().getConditionExpressionLogicalOperationsParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_7);
                    lv_conditionExpression_4_0=ruleLogicalOperations();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForStatementRule());
                      					}
                      					set(
                      						current,
                      						"conditionExpression",
                      						lv_conditionExpression_4_0,
                      						"org.unicam.myGrammar.OptGrammar.LogicalOperations");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,18,FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getForStatementAccess().getSemicolonKeyword_5());
              		
            }
            // InternalOptGrammar.g:5186:3: ( (lv_loopExpression_6_0= ruleExpressionStatement ) )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( ((LA105_0>=RULE_INT && LA105_0<=RULE_TX)||(LA105_0>=59 && LA105_0<=60)||(LA105_0>=62 && LA105_0<=69)||LA105_0==74||(LA105_0>=192 && LA105_0<=193)) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalOptGrammar.g:5187:4: (lv_loopExpression_6_0= ruleExpressionStatement )
                    {
                    // InternalOptGrammar.g:5187:4: (lv_loopExpression_6_0= ruleExpressionStatement )
                    // InternalOptGrammar.g:5188:5: lv_loopExpression_6_0= ruleExpressionStatement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForStatementAccess().getLoopExpressionExpressionStatementParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_35);
                    lv_loopExpression_6_0=ruleExpressionStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForStatementRule());
                      					}
                      					set(
                      						current,
                      						"loopExpression",
                      						lv_loopExpression_6_0,
                      						"org.unicam.myGrammar.OptGrammar.ExpressionStatement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,36,FOLLOW_68); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getForStatementAccess().getRightParenthesisKeyword_7());
              		
            }
            // InternalOptGrammar.g:5209:3: ( (lv_body_8_0= ruleStatement ) )
            // InternalOptGrammar.g:5210:4: (lv_body_8_0= ruleStatement )
            {
            // InternalOptGrammar.g:5210:4: (lv_body_8_0= ruleStatement )
            // InternalOptGrammar.g:5211:5: lv_body_8_0= ruleStatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForStatementAccess().getBodyStatementParserRuleCall_8_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_8_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_8_0,
              						"org.unicam.myGrammar.OptGrammar.Statement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForStatement"


    // $ANTLR start "entryRuleBody"
    // InternalOptGrammar.g:5232:1: entryRuleBody returns [EObject current=null] : iv_ruleBody= ruleBody EOF ;
    public final EObject entryRuleBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBody = null;


        try {
            // InternalOptGrammar.g:5232:45: (iv_ruleBody= ruleBody EOF )
            // InternalOptGrammar.g:5233:2: iv_ruleBody= ruleBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBody=ruleBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBody"


    // $ANTLR start "ruleBody"
    // InternalOptGrammar.g:5239:1: ruleBody returns [EObject current=null] : (otherlv_0= '{' () ( ( (lv_statements_2_0= ruleStatement ) ) ( (lv_statements_3_0= ruleStatement ) )* )? otherlv_4= '}' ) ;
    public final EObject ruleBody() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_4=null;
        EObject lv_statements_2_0 = null;

        EObject lv_statements_3_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:5245:2: ( (otherlv_0= '{' () ( ( (lv_statements_2_0= ruleStatement ) ) ( (lv_statements_3_0= ruleStatement ) )* )? otherlv_4= '}' ) )
            // InternalOptGrammar.g:5246:2: (otherlv_0= '{' () ( ( (lv_statements_2_0= ruleStatement ) ) ( (lv_statements_3_0= ruleStatement ) )* )? otherlv_4= '}' )
            {
            // InternalOptGrammar.g:5246:2: (otherlv_0= '{' () ( ( (lv_statements_2_0= ruleStatement ) ) ( (lv_statements_3_0= ruleStatement ) )* )? otherlv_4= '}' )
            // InternalOptGrammar.g:5247:3: otherlv_0= '{' () ( ( (lv_statements_2_0= ruleStatement ) ) ( (lv_statements_3_0= ruleStatement ) )* )? otherlv_4= '}'
            {
            otherlv_0=(Token)match(input,17,FOLLOW_73); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            // InternalOptGrammar.g:5251:3: ()
            // InternalOptGrammar.g:5252:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getBodyAccess().getBodyAction_1(),
              					current);
              			
            }

            }

            // InternalOptGrammar.g:5258:3: ( ( (lv_statements_2_0= ruleStatement ) ) ( (lv_statements_3_0= ruleStatement ) )* )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( ((LA107_0>=RULE_INT && LA107_0<=RULE_TX)||LA107_0==17||(LA107_0>=28 && LA107_0<=29)||LA107_0==33||(LA107_0>=48 && LA107_0<=50)||(LA107_0>=52 && LA107_0<=60)||(LA107_0>=62 && LA107_0<=69)||(LA107_0>=74 && LA107_0<=177)||(LA107_0>=180 && LA107_0<=183)||(LA107_0>=192 && LA107_0<=193)) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalOptGrammar.g:5259:4: ( (lv_statements_2_0= ruleStatement ) ) ( (lv_statements_3_0= ruleStatement ) )*
                    {
                    // InternalOptGrammar.g:5259:4: ( (lv_statements_2_0= ruleStatement ) )
                    // InternalOptGrammar.g:5260:5: (lv_statements_2_0= ruleStatement )
                    {
                    // InternalOptGrammar.g:5260:5: (lv_statements_2_0= ruleStatement )
                    // InternalOptGrammar.g:5261:6: lv_statements_2_0= ruleStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBodyAccess().getStatementsStatementParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_73);
                    lv_statements_2_0=ruleStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBodyRule());
                      						}
                      						add(
                      							current,
                      							"statements",
                      							lv_statements_2_0,
                      							"org.unicam.myGrammar.OptGrammar.Statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalOptGrammar.g:5278:4: ( (lv_statements_3_0= ruleStatement ) )*
                    loop106:
                    do {
                        int alt106=2;
                        int LA106_0 = input.LA(1);

                        if ( ((LA106_0>=RULE_INT && LA106_0<=RULE_TX)||LA106_0==17||(LA106_0>=28 && LA106_0<=29)||LA106_0==33||(LA106_0>=48 && LA106_0<=50)||(LA106_0>=52 && LA106_0<=60)||(LA106_0>=62 && LA106_0<=69)||(LA106_0>=74 && LA106_0<=177)||(LA106_0>=180 && LA106_0<=183)||(LA106_0>=192 && LA106_0<=193)) ) {
                            alt106=1;
                        }


                        switch (alt106) {
                    	case 1 :
                    	    // InternalOptGrammar.g:5279:5: (lv_statements_3_0= ruleStatement )
                    	    {
                    	    // InternalOptGrammar.g:5279:5: (lv_statements_3_0= ruleStatement )
                    	    // InternalOptGrammar.g:5280:6: lv_statements_3_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getBodyAccess().getStatementsStatementParserRuleCall_2_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_73);
                    	    lv_statements_3_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getBodyRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_3_0,
                    	      							"org.unicam.myGrammar.OptGrammar.Statement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop106;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_4=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBody"


    // $ANTLR start "entryRuleContinueStatement"
    // InternalOptGrammar.g:5306:1: entryRuleContinueStatement returns [EObject current=null] : iv_ruleContinueStatement= ruleContinueStatement EOF ;
    public final EObject entryRuleContinueStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleContinueStatement = null;


        try {
            // InternalOptGrammar.g:5306:58: (iv_ruleContinueStatement= ruleContinueStatement EOF )
            // InternalOptGrammar.g:5307:2: iv_ruleContinueStatement= ruleContinueStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getContinueStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleContinueStatement=ruleContinueStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleContinueStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleContinueStatement"


    // $ANTLR start "ruleContinueStatement"
    // InternalOptGrammar.g:5313:1: ruleContinueStatement returns [EObject current=null] : (otherlv_0= 'continue' () otherlv_2= ';' ) ;
    public final EObject ruleContinueStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:5319:2: ( (otherlv_0= 'continue' () otherlv_2= ';' ) )
            // InternalOptGrammar.g:5320:2: (otherlv_0= 'continue' () otherlv_2= ';' )
            {
            // InternalOptGrammar.g:5320:2: (otherlv_0= 'continue' () otherlv_2= ';' )
            // InternalOptGrammar.g:5321:3: otherlv_0= 'continue' () otherlv_2= ';'
            {
            otherlv_0=(Token)match(input,54,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getContinueStatementAccess().getContinueKeyword_0());
              		
            }
            // InternalOptGrammar.g:5325:3: ()
            // InternalOptGrammar.g:5326:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getContinueStatementAccess().getContinueAction_1(),
              					current);
              			
            }

            }

            otherlv_2=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getContinueStatementAccess().getSemicolonKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleContinueStatement"


    // $ANTLR start "entryRuleBreakStatement"
    // InternalOptGrammar.g:5340:1: entryRuleBreakStatement returns [EObject current=null] : iv_ruleBreakStatement= ruleBreakStatement EOF ;
    public final EObject entryRuleBreakStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBreakStatement = null;


        try {
            // InternalOptGrammar.g:5340:55: (iv_ruleBreakStatement= ruleBreakStatement EOF )
            // InternalOptGrammar.g:5341:2: iv_ruleBreakStatement= ruleBreakStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBreakStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBreakStatement=ruleBreakStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBreakStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBreakStatement"


    // $ANTLR start "ruleBreakStatement"
    // InternalOptGrammar.g:5347:1: ruleBreakStatement returns [EObject current=null] : (otherlv_0= 'break' () otherlv_2= ';' ) ;
    public final EObject ruleBreakStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:5353:2: ( (otherlv_0= 'break' () otherlv_2= ';' ) )
            // InternalOptGrammar.g:5354:2: (otherlv_0= 'break' () otherlv_2= ';' )
            {
            // InternalOptGrammar.g:5354:2: (otherlv_0= 'break' () otherlv_2= ';' )
            // InternalOptGrammar.g:5355:3: otherlv_0= 'break' () otherlv_2= ';'
            {
            otherlv_0=(Token)match(input,55,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getBreakStatementAccess().getBreakKeyword_0());
              		
            }
            // InternalOptGrammar.g:5359:3: ()
            // InternalOptGrammar.g:5360:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getBreakStatementAccess().getBreakStatementAction_1(),
              					current);
              			
            }

            }

            otherlv_2=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getBreakStatementAccess().getSemicolonKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBreakStatement"


    // $ANTLR start "entryRuleReturnStatement"
    // InternalOptGrammar.g:5374:1: entryRuleReturnStatement returns [EObject current=null] : iv_ruleReturnStatement= ruleReturnStatement EOF ;
    public final EObject entryRuleReturnStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReturnStatement = null;


        try {
            // InternalOptGrammar.g:5374:56: (iv_ruleReturnStatement= ruleReturnStatement EOF )
            // InternalOptGrammar.g:5375:2: iv_ruleReturnStatement= ruleReturnStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReturnStatement=ruleReturnStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReturnStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReturnStatement"


    // $ANTLR start "ruleReturnStatement"
    // InternalOptGrammar.g:5381:1: ruleReturnStatement returns [EObject current=null] : (otherlv_0= 'return' () ( (lv_expression_2_0= ruleLogicalOperations ) )? otherlv_3= ';' ) ;
    public final EObject ruleReturnStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:5387:2: ( (otherlv_0= 'return' () ( (lv_expression_2_0= ruleLogicalOperations ) )? otherlv_3= ';' ) )
            // InternalOptGrammar.g:5388:2: (otherlv_0= 'return' () ( (lv_expression_2_0= ruleLogicalOperations ) )? otherlv_3= ';' )
            {
            // InternalOptGrammar.g:5388:2: (otherlv_0= 'return' () ( (lv_expression_2_0= ruleLogicalOperations ) )? otherlv_3= ';' )
            // InternalOptGrammar.g:5389:3: otherlv_0= 'return' () ( (lv_expression_2_0= ruleLogicalOperations ) )? otherlv_3= ';'
            {
            otherlv_0=(Token)match(input,56,FOLLOW_71); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getReturnStatementAccess().getReturnKeyword_0());
              		
            }
            // InternalOptGrammar.g:5393:3: ()
            // InternalOptGrammar.g:5394:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getReturnStatementAccess().getReturnStatementAction_1(),
              					current);
              			
            }

            }

            // InternalOptGrammar.g:5400:3: ( (lv_expression_2_0= ruleLogicalOperations ) )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( ((LA108_0>=RULE_INT && LA108_0<=RULE_TX)||(LA108_0>=59 && LA108_0<=60)||(LA108_0>=62 && LA108_0<=69)||LA108_0==74||(LA108_0>=192 && LA108_0<=193)) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalOptGrammar.g:5401:4: (lv_expression_2_0= ruleLogicalOperations )
                    {
                    // InternalOptGrammar.g:5401:4: (lv_expression_2_0= ruleLogicalOperations )
                    // InternalOptGrammar.g:5402:5: lv_expression_2_0= ruleLogicalOperations
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReturnStatementAccess().getExpressionLogicalOperationsParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_7);
                    lv_expression_2_0=ruleLogicalOperations();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReturnStatementRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_2_0,
                      						"org.unicam.myGrammar.OptGrammar.LogicalOperations");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getReturnStatementAccess().getSemicolonKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReturnStatement"


    // $ANTLR start "entryRuleThrowStatement"
    // InternalOptGrammar.g:5427:1: entryRuleThrowStatement returns [EObject current=null] : iv_ruleThrowStatement= ruleThrowStatement EOF ;
    public final EObject entryRuleThrowStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThrowStatement = null;


        try {
            // InternalOptGrammar.g:5427:55: (iv_ruleThrowStatement= ruleThrowStatement EOF )
            // InternalOptGrammar.g:5428:2: iv_ruleThrowStatement= ruleThrowStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThrowStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleThrowStatement=ruleThrowStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThrowStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleThrowStatement"


    // $ANTLR start "ruleThrowStatement"
    // InternalOptGrammar.g:5434:1: ruleThrowStatement returns [EObject current=null] : (otherlv_0= 'throw' () otherlv_2= ';' ) ;
    public final EObject ruleThrowStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:5440:2: ( (otherlv_0= 'throw' () otherlv_2= ';' ) )
            // InternalOptGrammar.g:5441:2: (otherlv_0= 'throw' () otherlv_2= ';' )
            {
            // InternalOptGrammar.g:5441:2: (otherlv_0= 'throw' () otherlv_2= ';' )
            // InternalOptGrammar.g:5442:3: otherlv_0= 'throw' () otherlv_2= ';'
            {
            otherlv_0=(Token)match(input,57,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getThrowStatementAccess().getThrowKeyword_0());
              		
            }
            // InternalOptGrammar.g:5446:3: ()
            // InternalOptGrammar.g:5447:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getThrowStatementAccess().getThrowStatementAction_1(),
              					current);
              			
            }

            }

            otherlv_2=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getThrowStatementAccess().getSemicolonKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleThrowStatement"


    // $ANTLR start "entryRulePlaceHolderStatement"
    // InternalOptGrammar.g:5461:1: entryRulePlaceHolderStatement returns [EObject current=null] : iv_rulePlaceHolderStatement= rulePlaceHolderStatement EOF ;
    public final EObject entryRulePlaceHolderStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePlaceHolderStatement = null;


        try {
            // InternalOptGrammar.g:5461:61: (iv_rulePlaceHolderStatement= rulePlaceHolderStatement EOF )
            // InternalOptGrammar.g:5462:2: iv_rulePlaceHolderStatement= rulePlaceHolderStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPlaceHolderStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePlaceHolderStatement=rulePlaceHolderStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePlaceHolderStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePlaceHolderStatement"


    // $ANTLR start "rulePlaceHolderStatement"
    // InternalOptGrammar.g:5468:1: rulePlaceHolderStatement returns [EObject current=null] : (otherlv_0= '_' () (otherlv_2= ';' )? ) ;
    public final EObject rulePlaceHolderStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:5474:2: ( (otherlv_0= '_' () (otherlv_2= ';' )? ) )
            // InternalOptGrammar.g:5475:2: (otherlv_0= '_' () (otherlv_2= ';' )? )
            {
            // InternalOptGrammar.g:5475:2: (otherlv_0= '_' () (otherlv_2= ';' )? )
            // InternalOptGrammar.g:5476:3: otherlv_0= '_' () (otherlv_2= ';' )?
            {
            otherlv_0=(Token)match(input,58,FOLLOW_74); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPlaceHolderStatementAccess().get_Keyword_0());
              		
            }
            // InternalOptGrammar.g:5480:3: ()
            // InternalOptGrammar.g:5481:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPlaceHolderStatementAccess().getPlaceHolderStatementAction_1(),
              					current);
              			
            }

            }

            // InternalOptGrammar.g:5487:3: (otherlv_2= ';' )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==18) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalOptGrammar.g:5488:4: otherlv_2= ';'
                    {
                    otherlv_2=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPlaceHolderStatementAccess().getSemicolonKeyword_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePlaceHolderStatement"


    // $ANTLR start "entryRuleLogicalOperations"
    // InternalOptGrammar.g:5497:1: entryRuleLogicalOperations returns [EObject current=null] : iv_ruleLogicalOperations= ruleLogicalOperations EOF ;
    public final EObject entryRuleLogicalOperations() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalOperations = null;


        try {
            // InternalOptGrammar.g:5497:58: (iv_ruleLogicalOperations= ruleLogicalOperations EOF )
            // InternalOptGrammar.g:5498:2: iv_ruleLogicalOperations= ruleLogicalOperations EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalOperationsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLogicalOperations=ruleLogicalOperations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalOperations; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalOperations"


    // $ANTLR start "ruleLogicalOperations"
    // InternalOptGrammar.g:5504:1: ruleLogicalOperations returns [EObject current=null] : ( ( ( (lv_first_0_0= ruleLiteral ) ) ( (lv_operations_1_0= ruleConditionOperation ) )* ) | ( ( (lv_negate_2_0= 'NOT' ) ) ( (lv_first_3_0= ruleLiteral ) ) ( (lv_operations_4_0= ruleConditionOperation ) )* ) | ( ( (lv_ternary_5_0= 'TERNARY' ) ) ( (lv_first_6_0= ruleLiteral ) ) otherlv_7= '?' ( (lv_true_8_0= ruleLiteral ) ) otherlv_9= ':' ( (lv_false_10_0= ruleLiteral ) ) ) ) ;
    public final EObject ruleLogicalOperations() throws RecognitionException {
        EObject current = null;

        Token lv_negate_2_0=null;
        Token lv_ternary_5_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_first_0_0 = null;

        EObject lv_operations_1_0 = null;

        EObject lv_first_3_0 = null;

        EObject lv_operations_4_0 = null;

        EObject lv_first_6_0 = null;

        EObject lv_true_8_0 = null;

        EObject lv_false_10_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:5510:2: ( ( ( ( (lv_first_0_0= ruleLiteral ) ) ( (lv_operations_1_0= ruleConditionOperation ) )* ) | ( ( (lv_negate_2_0= 'NOT' ) ) ( (lv_first_3_0= ruleLiteral ) ) ( (lv_operations_4_0= ruleConditionOperation ) )* ) | ( ( (lv_ternary_5_0= 'TERNARY' ) ) ( (lv_first_6_0= ruleLiteral ) ) otherlv_7= '?' ( (lv_true_8_0= ruleLiteral ) ) otherlv_9= ':' ( (lv_false_10_0= ruleLiteral ) ) ) ) )
            // InternalOptGrammar.g:5511:2: ( ( ( (lv_first_0_0= ruleLiteral ) ) ( (lv_operations_1_0= ruleConditionOperation ) )* ) | ( ( (lv_negate_2_0= 'NOT' ) ) ( (lv_first_3_0= ruleLiteral ) ) ( (lv_operations_4_0= ruleConditionOperation ) )* ) | ( ( (lv_ternary_5_0= 'TERNARY' ) ) ( (lv_first_6_0= ruleLiteral ) ) otherlv_7= '?' ( (lv_true_8_0= ruleLiteral ) ) otherlv_9= ':' ( (lv_false_10_0= ruleLiteral ) ) ) )
            {
            // InternalOptGrammar.g:5511:2: ( ( ( (lv_first_0_0= ruleLiteral ) ) ( (lv_operations_1_0= ruleConditionOperation ) )* ) | ( ( (lv_negate_2_0= 'NOT' ) ) ( (lv_first_3_0= ruleLiteral ) ) ( (lv_operations_4_0= ruleConditionOperation ) )* ) | ( ( (lv_ternary_5_0= 'TERNARY' ) ) ( (lv_first_6_0= ruleLiteral ) ) otherlv_7= '?' ( (lv_true_8_0= ruleLiteral ) ) otherlv_9= ':' ( (lv_false_10_0= ruleLiteral ) ) ) )
            int alt112=3;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case RULE_STRING:
            case RULE_HEX:
            case RULE_DECIMAL:
            case RULE_BLOCK:
            case RULE_MSG:
            case RULE_TX:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 74:
            case 192:
            case 193:
                {
                alt112=1;
                }
                break;
            case 59:
                {
                alt112=2;
                }
                break;
            case 60:
                {
                alt112=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 112, 0, input);

                throw nvae;
            }

            switch (alt112) {
                case 1 :
                    // InternalOptGrammar.g:5512:3: ( ( (lv_first_0_0= ruleLiteral ) ) ( (lv_operations_1_0= ruleConditionOperation ) )* )
                    {
                    // InternalOptGrammar.g:5512:3: ( ( (lv_first_0_0= ruleLiteral ) ) ( (lv_operations_1_0= ruleConditionOperation ) )* )
                    // InternalOptGrammar.g:5513:4: ( (lv_first_0_0= ruleLiteral ) ) ( (lv_operations_1_0= ruleConditionOperation ) )*
                    {
                    // InternalOptGrammar.g:5513:4: ( (lv_first_0_0= ruleLiteral ) )
                    // InternalOptGrammar.g:5514:5: (lv_first_0_0= ruleLiteral )
                    {
                    // InternalOptGrammar.g:5514:5: (lv_first_0_0= ruleLiteral )
                    // InternalOptGrammar.g:5515:6: lv_first_0_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLogicalOperationsAccess().getFirstLiteralParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_75);
                    lv_first_0_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLogicalOperationsRule());
                      						}
                      						set(
                      							current,
                      							"first",
                      							lv_first_0_0,
                      							"org.unicam.myGrammar.OptGrammar.Literal");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalOptGrammar.g:5532:4: ( (lv_operations_1_0= ruleConditionOperation ) )*
                    loop110:
                    do {
                        int alt110=2;
                        int LA110_0 = input.LA(1);

                        if ( ((LA110_0>=184 && LA110_0<=191)) ) {
                            alt110=1;
                        }


                        switch (alt110) {
                    	case 1 :
                    	    // InternalOptGrammar.g:5533:5: (lv_operations_1_0= ruleConditionOperation )
                    	    {
                    	    // InternalOptGrammar.g:5533:5: (lv_operations_1_0= ruleConditionOperation )
                    	    // InternalOptGrammar.g:5534:6: lv_operations_1_0= ruleConditionOperation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getLogicalOperationsAccess().getOperationsConditionOperationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_75);
                    	    lv_operations_1_0=ruleConditionOperation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getLogicalOperationsRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"operations",
                    	      							lv_operations_1_0,
                    	      							"org.unicam.myGrammar.OptGrammar.ConditionOperation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop110;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:5553:3: ( ( (lv_negate_2_0= 'NOT' ) ) ( (lv_first_3_0= ruleLiteral ) ) ( (lv_operations_4_0= ruleConditionOperation ) )* )
                    {
                    // InternalOptGrammar.g:5553:3: ( ( (lv_negate_2_0= 'NOT' ) ) ( (lv_first_3_0= ruleLiteral ) ) ( (lv_operations_4_0= ruleConditionOperation ) )* )
                    // InternalOptGrammar.g:5554:4: ( (lv_negate_2_0= 'NOT' ) ) ( (lv_first_3_0= ruleLiteral ) ) ( (lv_operations_4_0= ruleConditionOperation ) )*
                    {
                    // InternalOptGrammar.g:5554:4: ( (lv_negate_2_0= 'NOT' ) )
                    // InternalOptGrammar.g:5555:5: (lv_negate_2_0= 'NOT' )
                    {
                    // InternalOptGrammar.g:5555:5: (lv_negate_2_0= 'NOT' )
                    // InternalOptGrammar.g:5556:6: lv_negate_2_0= 'NOT'
                    {
                    lv_negate_2_0=(Token)match(input,59,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_negate_2_0, grammarAccess.getLogicalOperationsAccess().getNegateNOTKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getLogicalOperationsRule());
                      						}
                      						setWithLastConsumed(current, "negate", true, "NOT");
                      					
                    }

                    }


                    }

                    // InternalOptGrammar.g:5568:4: ( (lv_first_3_0= ruleLiteral ) )
                    // InternalOptGrammar.g:5569:5: (lv_first_3_0= ruleLiteral )
                    {
                    // InternalOptGrammar.g:5569:5: (lv_first_3_0= ruleLiteral )
                    // InternalOptGrammar.g:5570:6: lv_first_3_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLogicalOperationsAccess().getFirstLiteralParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_75);
                    lv_first_3_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLogicalOperationsRule());
                      						}
                      						set(
                      							current,
                      							"first",
                      							lv_first_3_0,
                      							"org.unicam.myGrammar.OptGrammar.Literal");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalOptGrammar.g:5587:4: ( (lv_operations_4_0= ruleConditionOperation ) )*
                    loop111:
                    do {
                        int alt111=2;
                        int LA111_0 = input.LA(1);

                        if ( ((LA111_0>=184 && LA111_0<=191)) ) {
                            alt111=1;
                        }


                        switch (alt111) {
                    	case 1 :
                    	    // InternalOptGrammar.g:5588:5: (lv_operations_4_0= ruleConditionOperation )
                    	    {
                    	    // InternalOptGrammar.g:5588:5: (lv_operations_4_0= ruleConditionOperation )
                    	    // InternalOptGrammar.g:5589:6: lv_operations_4_0= ruleConditionOperation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getLogicalOperationsAccess().getOperationsConditionOperationParserRuleCall_1_2_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_75);
                    	    lv_operations_4_0=ruleConditionOperation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getLogicalOperationsRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"operations",
                    	      							lv_operations_4_0,
                    	      							"org.unicam.myGrammar.OptGrammar.ConditionOperation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop111;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // InternalOptGrammar.g:5608:3: ( ( (lv_ternary_5_0= 'TERNARY' ) ) ( (lv_first_6_0= ruleLiteral ) ) otherlv_7= '?' ( (lv_true_8_0= ruleLiteral ) ) otherlv_9= ':' ( (lv_false_10_0= ruleLiteral ) ) )
                    {
                    // InternalOptGrammar.g:5608:3: ( ( (lv_ternary_5_0= 'TERNARY' ) ) ( (lv_first_6_0= ruleLiteral ) ) otherlv_7= '?' ( (lv_true_8_0= ruleLiteral ) ) otherlv_9= ':' ( (lv_false_10_0= ruleLiteral ) ) )
                    // InternalOptGrammar.g:5609:4: ( (lv_ternary_5_0= 'TERNARY' ) ) ( (lv_first_6_0= ruleLiteral ) ) otherlv_7= '?' ( (lv_true_8_0= ruleLiteral ) ) otherlv_9= ':' ( (lv_false_10_0= ruleLiteral ) )
                    {
                    // InternalOptGrammar.g:5609:4: ( (lv_ternary_5_0= 'TERNARY' ) )
                    // InternalOptGrammar.g:5610:5: (lv_ternary_5_0= 'TERNARY' )
                    {
                    // InternalOptGrammar.g:5610:5: (lv_ternary_5_0= 'TERNARY' )
                    // InternalOptGrammar.g:5611:6: lv_ternary_5_0= 'TERNARY'
                    {
                    lv_ternary_5_0=(Token)match(input,60,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_ternary_5_0, grammarAccess.getLogicalOperationsAccess().getTernaryTERNARYKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getLogicalOperationsRule());
                      						}
                      						setWithLastConsumed(current, "ternary", true, "TERNARY");
                      					
                    }

                    }


                    }

                    // InternalOptGrammar.g:5623:4: ( (lv_first_6_0= ruleLiteral ) )
                    // InternalOptGrammar.g:5624:5: (lv_first_6_0= ruleLiteral )
                    {
                    // InternalOptGrammar.g:5624:5: (lv_first_6_0= ruleLiteral )
                    // InternalOptGrammar.g:5625:6: lv_first_6_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLogicalOperationsAccess().getFirstLiteralParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_77);
                    lv_first_6_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLogicalOperationsRule());
                      						}
                      						set(
                      							current,
                      							"first",
                      							lv_first_6_0,
                      							"org.unicam.myGrammar.OptGrammar.Literal");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,61,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getLogicalOperationsAccess().getQuestionMarkKeyword_2_2());
                      			
                    }
                    // InternalOptGrammar.g:5646:4: ( (lv_true_8_0= ruleLiteral ) )
                    // InternalOptGrammar.g:5647:5: (lv_true_8_0= ruleLiteral )
                    {
                    // InternalOptGrammar.g:5647:5: (lv_true_8_0= ruleLiteral )
                    // InternalOptGrammar.g:5648:6: lv_true_8_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLogicalOperationsAccess().getTrueLiteralParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_46);
                    lv_true_8_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLogicalOperationsRule());
                      						}
                      						set(
                      							current,
                      							"true",
                      							lv_true_8_0,
                      							"org.unicam.myGrammar.OptGrammar.Literal");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,43,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getLogicalOperationsAccess().getColonKeyword_2_4());
                      			
                    }
                    // InternalOptGrammar.g:5669:4: ( (lv_false_10_0= ruleLiteral ) )
                    // InternalOptGrammar.g:5670:5: (lv_false_10_0= ruleLiteral )
                    {
                    // InternalOptGrammar.g:5670:5: (lv_false_10_0= ruleLiteral )
                    // InternalOptGrammar.g:5671:6: lv_false_10_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLogicalOperationsAccess().getFalseLiteralParserRuleCall_2_5_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_false_10_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLogicalOperationsRule());
                      						}
                      						set(
                      							current,
                      							"false",
                      							lv_false_10_0,
                      							"org.unicam.myGrammar.OptGrammar.Literal");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOperations"


    // $ANTLR start "entryRuleConditionOperation"
    // InternalOptGrammar.g:5693:1: entryRuleConditionOperation returns [EObject current=null] : iv_ruleConditionOperation= ruleConditionOperation EOF ;
    public final EObject entryRuleConditionOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditionOperation = null;


        try {
            // InternalOptGrammar.g:5693:59: (iv_ruleConditionOperation= ruleConditionOperation EOF )
            // InternalOptGrammar.g:5694:2: iv_ruleConditionOperation= ruleConditionOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionOperation=ruleConditionOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionOperation"


    // $ANTLR start "ruleConditionOperation"
    // InternalOptGrammar.g:5700:1: ruleConditionOperation returns [EObject current=null] : ( ( (lv_operation_0_0= ruleLogicalOperationLiteral ) ) ( (lv_negateSecond_1_0= 'NOT' ) )? ( (lv_seconds_2_0= ruleLiteral ) ) ) ;
    public final EObject ruleConditionOperation() throws RecognitionException {
        EObject current = null;

        Token lv_negateSecond_1_0=null;
        Enumerator lv_operation_0_0 = null;

        EObject lv_seconds_2_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:5706:2: ( ( ( (lv_operation_0_0= ruleLogicalOperationLiteral ) ) ( (lv_negateSecond_1_0= 'NOT' ) )? ( (lv_seconds_2_0= ruleLiteral ) ) ) )
            // InternalOptGrammar.g:5707:2: ( ( (lv_operation_0_0= ruleLogicalOperationLiteral ) ) ( (lv_negateSecond_1_0= 'NOT' ) )? ( (lv_seconds_2_0= ruleLiteral ) ) )
            {
            // InternalOptGrammar.g:5707:2: ( ( (lv_operation_0_0= ruleLogicalOperationLiteral ) ) ( (lv_negateSecond_1_0= 'NOT' ) )? ( (lv_seconds_2_0= ruleLiteral ) ) )
            // InternalOptGrammar.g:5708:3: ( (lv_operation_0_0= ruleLogicalOperationLiteral ) ) ( (lv_negateSecond_1_0= 'NOT' ) )? ( (lv_seconds_2_0= ruleLiteral ) )
            {
            // InternalOptGrammar.g:5708:3: ( (lv_operation_0_0= ruleLogicalOperationLiteral ) )
            // InternalOptGrammar.g:5709:4: (lv_operation_0_0= ruleLogicalOperationLiteral )
            {
            // InternalOptGrammar.g:5709:4: (lv_operation_0_0= ruleLogicalOperationLiteral )
            // InternalOptGrammar.g:5710:5: lv_operation_0_0= ruleLogicalOperationLiteral
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditionOperationAccess().getOperationLogicalOperationLiteralEnumRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_78);
            lv_operation_0_0=ruleLogicalOperationLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditionOperationRule());
              					}
              					set(
              						current,
              						"operation",
              						lv_operation_0_0,
              						"org.unicam.myGrammar.OptGrammar.LogicalOperationLiteral");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalOptGrammar.g:5727:3: ( (lv_negateSecond_1_0= 'NOT' ) )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==59) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalOptGrammar.g:5728:4: (lv_negateSecond_1_0= 'NOT' )
                    {
                    // InternalOptGrammar.g:5728:4: (lv_negateSecond_1_0= 'NOT' )
                    // InternalOptGrammar.g:5729:5: lv_negateSecond_1_0= 'NOT'
                    {
                    lv_negateSecond_1_0=(Token)match(input,59,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_negateSecond_1_0, grammarAccess.getConditionOperationAccess().getNegateSecondNOTKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConditionOperationRule());
                      					}
                      					setWithLastConsumed(current, "negateSecond", lv_negateSecond_1_0, "NOT");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalOptGrammar.g:5741:3: ( (lv_seconds_2_0= ruleLiteral ) )
            // InternalOptGrammar.g:5742:4: (lv_seconds_2_0= ruleLiteral )
            {
            // InternalOptGrammar.g:5742:4: (lv_seconds_2_0= ruleLiteral )
            // InternalOptGrammar.g:5743:5: lv_seconds_2_0= ruleLiteral
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditionOperationAccess().getSecondsLiteralParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_seconds_2_0=ruleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditionOperationRule());
              					}
              					set(
              						current,
              						"seconds",
              						lv_seconds_2_0,
              						"org.unicam.myGrammar.OptGrammar.Literal");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionOperation"


    // $ANTLR start "entryRuleLiteral"
    // InternalOptGrammar.g:5764:1: entryRuleLiteral returns [EObject current=null] : iv_ruleLiteral= ruleLiteral EOF ;
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteral = null;


        try {
            // InternalOptGrammar.g:5764:48: (iv_ruleLiteral= ruleLiteral EOF )
            // InternalOptGrammar.g:5765:2: iv_ruleLiteral= ruleLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteral=ruleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalOptGrammar.g:5771:1: ruleLiteral returns [EObject current=null] : (this_SpecialVariables_0= ruleSpecialVariables | this_BooleanConst_1= ruleBooleanConst | this_NumericLiteral_2= ruleNumericLiteral | this_StringLiteral_3= ruleStringLiteral | this_GasleftFunction_4= ruleGasleftFunction | this_BlockhashFunction_5= ruleBlockhashFunction | this_MathematicalFunction_6= ruleMathematicalFunction | this_HashFunction_7= ruleHashFunction | this_EcrecoverFunction_8= ruleEcrecoverFunction ) ;
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_SpecialVariables_0 = null;

        EObject this_BooleanConst_1 = null;

        EObject this_NumericLiteral_2 = null;

        EObject this_StringLiteral_3 = null;

        EObject this_GasleftFunction_4 = null;

        EObject this_BlockhashFunction_5 = null;

        EObject this_MathematicalFunction_6 = null;

        EObject this_HashFunction_7 = null;

        EObject this_EcrecoverFunction_8 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:5777:2: ( (this_SpecialVariables_0= ruleSpecialVariables | this_BooleanConst_1= ruleBooleanConst | this_NumericLiteral_2= ruleNumericLiteral | this_StringLiteral_3= ruleStringLiteral | this_GasleftFunction_4= ruleGasleftFunction | this_BlockhashFunction_5= ruleBlockhashFunction | this_MathematicalFunction_6= ruleMathematicalFunction | this_HashFunction_7= ruleHashFunction | this_EcrecoverFunction_8= ruleEcrecoverFunction ) )
            // InternalOptGrammar.g:5778:2: (this_SpecialVariables_0= ruleSpecialVariables | this_BooleanConst_1= ruleBooleanConst | this_NumericLiteral_2= ruleNumericLiteral | this_StringLiteral_3= ruleStringLiteral | this_GasleftFunction_4= ruleGasleftFunction | this_BlockhashFunction_5= ruleBlockhashFunction | this_MathematicalFunction_6= ruleMathematicalFunction | this_HashFunction_7= ruleHashFunction | this_EcrecoverFunction_8= ruleEcrecoverFunction )
            {
            // InternalOptGrammar.g:5778:2: (this_SpecialVariables_0= ruleSpecialVariables | this_BooleanConst_1= ruleBooleanConst | this_NumericLiteral_2= ruleNumericLiteral | this_StringLiteral_3= ruleStringLiteral | this_GasleftFunction_4= ruleGasleftFunction | this_BlockhashFunction_5= ruleBlockhashFunction | this_MathematicalFunction_6= ruleMathematicalFunction | this_HashFunction_7= ruleHashFunction | this_EcrecoverFunction_8= ruleEcrecoverFunction )
            int alt114=9;
            switch ( input.LA(1) ) {
            case RULE_BLOCK:
            case RULE_MSG:
            case RULE_TX:
                {
                alt114=1;
                }
                break;
            case 192:
            case 193:
                {
                alt114=2;
                }
                break;
            case RULE_INT:
            case RULE_HEX:
            case RULE_DECIMAL:
            case 74:
                {
                alt114=3;
                }
                break;
            case RULE_STRING:
                {
                alt114=4;
                }
                break;
            case 62:
                {
                alt114=5;
                }
                break;
            case 63:
                {
                alt114=6;
                }
                break;
            case 64:
            case 65:
                {
                alt114=7;
                }
                break;
            case 67:
            case 68:
            case 69:
                {
                alt114=8;
                }
                break;
            case 66:
                {
                alt114=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 114, 0, input);

                throw nvae;
            }

            switch (alt114) {
                case 1 :
                    // InternalOptGrammar.g:5779:3: this_SpecialVariables_0= ruleSpecialVariables
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralAccess().getSpecialVariablesParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SpecialVariables_0=ruleSpecialVariables();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SpecialVariables_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:5788:3: this_BooleanConst_1= ruleBooleanConst
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralAccess().getBooleanConstParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BooleanConst_1=ruleBooleanConst();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BooleanConst_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalOptGrammar.g:5797:3: this_NumericLiteral_2= ruleNumericLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralAccess().getNumericLiteralParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NumericLiteral_2=ruleNumericLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NumericLiteral_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalOptGrammar.g:5806:3: this_StringLiteral_3= ruleStringLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StringLiteral_3=ruleStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringLiteral_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalOptGrammar.g:5815:3: this_GasleftFunction_4= ruleGasleftFunction
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralAccess().getGasleftFunctionParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_GasleftFunction_4=ruleGasleftFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_GasleftFunction_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalOptGrammar.g:5824:3: this_BlockhashFunction_5= ruleBlockhashFunction
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralAccess().getBlockhashFunctionParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BlockhashFunction_5=ruleBlockhashFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BlockhashFunction_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalOptGrammar.g:5833:3: this_MathematicalFunction_6= ruleMathematicalFunction
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralAccess().getMathematicalFunctionParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MathematicalFunction_6=ruleMathematicalFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MathematicalFunction_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalOptGrammar.g:5842:3: this_HashFunction_7= ruleHashFunction
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralAccess().getHashFunctionParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_HashFunction_7=ruleHashFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_HashFunction_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalOptGrammar.g:5851:3: this_EcrecoverFunction_8= ruleEcrecoverFunction
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralAccess().getEcrecoverFunctionParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EcrecoverFunction_8=ruleEcrecoverFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EcrecoverFunction_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleGasleftFunction"
    // InternalOptGrammar.g:5863:1: entryRuleGasleftFunction returns [EObject current=null] : iv_ruleGasleftFunction= ruleGasleftFunction EOF ;
    public final EObject entryRuleGasleftFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGasleftFunction = null;


        try {
            // InternalOptGrammar.g:5863:56: (iv_ruleGasleftFunction= ruleGasleftFunction EOF )
            // InternalOptGrammar.g:5864:2: iv_ruleGasleftFunction= ruleGasleftFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGasleftFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGasleftFunction=ruleGasleftFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGasleftFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGasleftFunction"


    // $ANTLR start "ruleGasleftFunction"
    // InternalOptGrammar.g:5870:1: ruleGasleftFunction returns [EObject current=null] : ( ( (lv_name_0_0= 'gasleft' ) ) otherlv_1= '(' otherlv_2= ')' ) ;
    public final EObject ruleGasleftFunction() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:5876:2: ( ( ( (lv_name_0_0= 'gasleft' ) ) otherlv_1= '(' otherlv_2= ')' ) )
            // InternalOptGrammar.g:5877:2: ( ( (lv_name_0_0= 'gasleft' ) ) otherlv_1= '(' otherlv_2= ')' )
            {
            // InternalOptGrammar.g:5877:2: ( ( (lv_name_0_0= 'gasleft' ) ) otherlv_1= '(' otherlv_2= ')' )
            // InternalOptGrammar.g:5878:3: ( (lv_name_0_0= 'gasleft' ) ) otherlv_1= '(' otherlv_2= ')'
            {
            // InternalOptGrammar.g:5878:3: ( (lv_name_0_0= 'gasleft' ) )
            // InternalOptGrammar.g:5879:4: (lv_name_0_0= 'gasleft' )
            {
            // InternalOptGrammar.g:5879:4: (lv_name_0_0= 'gasleft' )
            // InternalOptGrammar.g:5880:5: lv_name_0_0= 'gasleft'
            {
            lv_name_0_0=(Token)match(input,62,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getGasleftFunctionAccess().getNameGasleftKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGasleftFunctionRule());
              					}
              					setWithLastConsumed(current, "name", lv_name_0_0, "gasleft");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,34,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGasleftFunctionAccess().getLeftParenthesisKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getGasleftFunctionAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGasleftFunction"


    // $ANTLR start "entryRuleBlockhashFunction"
    // InternalOptGrammar.g:5904:1: entryRuleBlockhashFunction returns [EObject current=null] : iv_ruleBlockhashFunction= ruleBlockhashFunction EOF ;
    public final EObject entryRuleBlockhashFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBlockhashFunction = null;


        try {
            // InternalOptGrammar.g:5904:58: (iv_ruleBlockhashFunction= ruleBlockhashFunction EOF )
            // InternalOptGrammar.g:5905:2: iv_ruleBlockhashFunction= ruleBlockhashFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlockhashFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBlockhashFunction=ruleBlockhashFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBlockhashFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBlockhashFunction"


    // $ANTLR start "ruleBlockhashFunction"
    // InternalOptGrammar.g:5911:1: ruleBlockhashFunction returns [EObject current=null] : (otherlv_0= 'blockhash' otherlv_1= '(' ( (lv_parameter_2_0= ruleIntParameter ) ) otherlv_3= ')' ) ;
    public final EObject ruleBlockhashFunction() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_parameter_2_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:5917:2: ( (otherlv_0= 'blockhash' otherlv_1= '(' ( (lv_parameter_2_0= ruleIntParameter ) ) otherlv_3= ')' ) )
            // InternalOptGrammar.g:5918:2: (otherlv_0= 'blockhash' otherlv_1= '(' ( (lv_parameter_2_0= ruleIntParameter ) ) otherlv_3= ')' )
            {
            // InternalOptGrammar.g:5918:2: (otherlv_0= 'blockhash' otherlv_1= '(' ( (lv_parameter_2_0= ruleIntParameter ) ) otherlv_3= ')' )
            // InternalOptGrammar.g:5919:3: otherlv_0= 'blockhash' otherlv_1= '(' ( (lv_parameter_2_0= ruleIntParameter ) ) otherlv_3= ')'
            {
            otherlv_0=(Token)match(input,63,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getBlockhashFunctionAccess().getBlockhashKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,34,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getBlockhashFunctionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalOptGrammar.g:5927:3: ( (lv_parameter_2_0= ruleIntParameter ) )
            // InternalOptGrammar.g:5928:4: (lv_parameter_2_0= ruleIntParameter )
            {
            // InternalOptGrammar.g:5928:4: (lv_parameter_2_0= ruleIntParameter )
            // InternalOptGrammar.g:5929:5: lv_parameter_2_0= ruleIntParameter
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBlockhashFunctionAccess().getParameterIntParameterParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_35);
            lv_parameter_2_0=ruleIntParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBlockhashFunctionRule());
              					}
              					set(
              						current,
              						"parameter",
              						lv_parameter_2_0,
              						"org.unicam.myGrammar.OptGrammar.IntParameter");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getBlockhashFunctionAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBlockhashFunction"


    // $ANTLR start "entryRuleMathematicalFunction"
    // InternalOptGrammar.g:5954:1: entryRuleMathematicalFunction returns [EObject current=null] : iv_ruleMathematicalFunction= ruleMathematicalFunction EOF ;
    public final EObject entryRuleMathematicalFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMathematicalFunction = null;


        try {
            // InternalOptGrammar.g:5954:61: (iv_ruleMathematicalFunction= ruleMathematicalFunction EOF )
            // InternalOptGrammar.g:5955:2: iv_ruleMathematicalFunction= ruleMathematicalFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMathematicalFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMathematicalFunction=ruleMathematicalFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMathematicalFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMathematicalFunction"


    // $ANTLR start "ruleMathematicalFunction"
    // InternalOptGrammar.g:5961:1: ruleMathematicalFunction returns [EObject current=null] : ( ( ( (lv_function_0_1= 'addmod' | lv_function_0_2= 'mulmod' ) ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleIntParameter ) ) otherlv_3= ',' ( (lv_parameters_4_0= ruleIntParameter ) ) otherlv_5= ',' ( (lv_parameters_6_0= ruleIntParameter ) ) otherlv_7= ')' ) ;
    public final EObject ruleMathematicalFunction() throws RecognitionException {
        EObject current = null;

        Token lv_function_0_1=null;
        Token lv_function_0_2=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_parameters_2_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:5967:2: ( ( ( ( (lv_function_0_1= 'addmod' | lv_function_0_2= 'mulmod' ) ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleIntParameter ) ) otherlv_3= ',' ( (lv_parameters_4_0= ruleIntParameter ) ) otherlv_5= ',' ( (lv_parameters_6_0= ruleIntParameter ) ) otherlv_7= ')' ) )
            // InternalOptGrammar.g:5968:2: ( ( ( (lv_function_0_1= 'addmod' | lv_function_0_2= 'mulmod' ) ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleIntParameter ) ) otherlv_3= ',' ( (lv_parameters_4_0= ruleIntParameter ) ) otherlv_5= ',' ( (lv_parameters_6_0= ruleIntParameter ) ) otherlv_7= ')' )
            {
            // InternalOptGrammar.g:5968:2: ( ( ( (lv_function_0_1= 'addmod' | lv_function_0_2= 'mulmod' ) ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleIntParameter ) ) otherlv_3= ',' ( (lv_parameters_4_0= ruleIntParameter ) ) otherlv_5= ',' ( (lv_parameters_6_0= ruleIntParameter ) ) otherlv_7= ')' )
            // InternalOptGrammar.g:5969:3: ( ( (lv_function_0_1= 'addmod' | lv_function_0_2= 'mulmod' ) ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleIntParameter ) ) otherlv_3= ',' ( (lv_parameters_4_0= ruleIntParameter ) ) otherlv_5= ',' ( (lv_parameters_6_0= ruleIntParameter ) ) otherlv_7= ')'
            {
            // InternalOptGrammar.g:5969:3: ( ( (lv_function_0_1= 'addmod' | lv_function_0_2= 'mulmod' ) ) )
            // InternalOptGrammar.g:5970:4: ( (lv_function_0_1= 'addmod' | lv_function_0_2= 'mulmod' ) )
            {
            // InternalOptGrammar.g:5970:4: ( (lv_function_0_1= 'addmod' | lv_function_0_2= 'mulmod' ) )
            // InternalOptGrammar.g:5971:5: (lv_function_0_1= 'addmod' | lv_function_0_2= 'mulmod' )
            {
            // InternalOptGrammar.g:5971:5: (lv_function_0_1= 'addmod' | lv_function_0_2= 'mulmod' )
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==64) ) {
                alt115=1;
            }
            else if ( (LA115_0==65) ) {
                alt115=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 115, 0, input);

                throw nvae;
            }
            switch (alt115) {
                case 1 :
                    // InternalOptGrammar.g:5972:6: lv_function_0_1= 'addmod'
                    {
                    lv_function_0_1=(Token)match(input,64,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_function_0_1, grammarAccess.getMathematicalFunctionAccess().getFunctionAddmodKeyword_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getMathematicalFunctionRule());
                      						}
                      						setWithLastConsumed(current, "function", lv_function_0_1, null);
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:5983:6: lv_function_0_2= 'mulmod'
                    {
                    lv_function_0_2=(Token)match(input,65,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_function_0_2, grammarAccess.getMathematicalFunctionAccess().getFunctionMulmodKeyword_0_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getMathematicalFunctionRule());
                      						}
                      						setWithLastConsumed(current, "function", lv_function_0_2, null);
                      					
                    }

                    }
                    break;

            }


            }


            }

            otherlv_1=(Token)match(input,34,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMathematicalFunctionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalOptGrammar.g:6000:3: ( (lv_parameters_2_0= ruleIntParameter ) )
            // InternalOptGrammar.g:6001:4: (lv_parameters_2_0= ruleIntParameter )
            {
            // InternalOptGrammar.g:6001:4: (lv_parameters_2_0= ruleIntParameter )
            // InternalOptGrammar.g:6002:5: lv_parameters_2_0= ruleIntParameter
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMathematicalFunctionAccess().getParametersIntParameterParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_80);
            lv_parameters_2_0=ruleIntParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMathematicalFunctionRule());
              					}
              					add(
              						current,
              						"parameters",
              						lv_parameters_2_0,
              						"org.unicam.myGrammar.OptGrammar.IntParameter");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,22,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getMathematicalFunctionAccess().getCommaKeyword_3());
              		
            }
            // InternalOptGrammar.g:6023:3: ( (lv_parameters_4_0= ruleIntParameter ) )
            // InternalOptGrammar.g:6024:4: (lv_parameters_4_0= ruleIntParameter )
            {
            // InternalOptGrammar.g:6024:4: (lv_parameters_4_0= ruleIntParameter )
            // InternalOptGrammar.g:6025:5: lv_parameters_4_0= ruleIntParameter
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMathematicalFunctionAccess().getParametersIntParameterParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_80);
            lv_parameters_4_0=ruleIntParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMathematicalFunctionRule());
              					}
              					add(
              						current,
              						"parameters",
              						lv_parameters_4_0,
              						"org.unicam.myGrammar.OptGrammar.IntParameter");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,22,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getMathematicalFunctionAccess().getCommaKeyword_5());
              		
            }
            // InternalOptGrammar.g:6046:3: ( (lv_parameters_6_0= ruleIntParameter ) )
            // InternalOptGrammar.g:6047:4: (lv_parameters_6_0= ruleIntParameter )
            {
            // InternalOptGrammar.g:6047:4: (lv_parameters_6_0= ruleIntParameter )
            // InternalOptGrammar.g:6048:5: lv_parameters_6_0= ruleIntParameter
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMathematicalFunctionAccess().getParametersIntParameterParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_35);
            lv_parameters_6_0=ruleIntParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMathematicalFunctionRule());
              					}
              					add(
              						current,
              						"parameters",
              						lv_parameters_6_0,
              						"org.unicam.myGrammar.OptGrammar.IntParameter");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_7=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getMathematicalFunctionAccess().getRightParenthesisKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMathematicalFunction"


    // $ANTLR start "entryRuleEcrecoverFunction"
    // InternalOptGrammar.g:6073:1: entryRuleEcrecoverFunction returns [EObject current=null] : iv_ruleEcrecoverFunction= ruleEcrecoverFunction EOF ;
    public final EObject entryRuleEcrecoverFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEcrecoverFunction = null;


        try {
            // InternalOptGrammar.g:6073:58: (iv_ruleEcrecoverFunction= ruleEcrecoverFunction EOF )
            // InternalOptGrammar.g:6074:2: iv_ruleEcrecoverFunction= ruleEcrecoverFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEcrecoverFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEcrecoverFunction=ruleEcrecoverFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEcrecoverFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEcrecoverFunction"


    // $ANTLR start "ruleEcrecoverFunction"
    // InternalOptGrammar.g:6080:1: ruleEcrecoverFunction returns [EObject current=null] : ( ( (lv_function_0_0= 'ecrecover' ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleIntParameter ) ) otherlv_3= ',' ( (lv_parameters_4_0= ruleIntParameter ) ) otherlv_5= ',' ( (lv_parameters_6_0= ruleIntParameter ) ) otherlv_7= ',' ( (lv_parameters_8_0= ruleIntParameter ) ) otherlv_9= ')' ) ;
    public final EObject ruleEcrecoverFunction() throws RecognitionException {
        EObject current = null;

        Token lv_function_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_parameters_2_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;

        EObject lv_parameters_8_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:6086:2: ( ( ( (lv_function_0_0= 'ecrecover' ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleIntParameter ) ) otherlv_3= ',' ( (lv_parameters_4_0= ruleIntParameter ) ) otherlv_5= ',' ( (lv_parameters_6_0= ruleIntParameter ) ) otherlv_7= ',' ( (lv_parameters_8_0= ruleIntParameter ) ) otherlv_9= ')' ) )
            // InternalOptGrammar.g:6087:2: ( ( (lv_function_0_0= 'ecrecover' ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleIntParameter ) ) otherlv_3= ',' ( (lv_parameters_4_0= ruleIntParameter ) ) otherlv_5= ',' ( (lv_parameters_6_0= ruleIntParameter ) ) otherlv_7= ',' ( (lv_parameters_8_0= ruleIntParameter ) ) otherlv_9= ')' )
            {
            // InternalOptGrammar.g:6087:2: ( ( (lv_function_0_0= 'ecrecover' ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleIntParameter ) ) otherlv_3= ',' ( (lv_parameters_4_0= ruleIntParameter ) ) otherlv_5= ',' ( (lv_parameters_6_0= ruleIntParameter ) ) otherlv_7= ',' ( (lv_parameters_8_0= ruleIntParameter ) ) otherlv_9= ')' )
            // InternalOptGrammar.g:6088:3: ( (lv_function_0_0= 'ecrecover' ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleIntParameter ) ) otherlv_3= ',' ( (lv_parameters_4_0= ruleIntParameter ) ) otherlv_5= ',' ( (lv_parameters_6_0= ruleIntParameter ) ) otherlv_7= ',' ( (lv_parameters_8_0= ruleIntParameter ) ) otherlv_9= ')'
            {
            // InternalOptGrammar.g:6088:3: ( (lv_function_0_0= 'ecrecover' ) )
            // InternalOptGrammar.g:6089:4: (lv_function_0_0= 'ecrecover' )
            {
            // InternalOptGrammar.g:6089:4: (lv_function_0_0= 'ecrecover' )
            // InternalOptGrammar.g:6090:5: lv_function_0_0= 'ecrecover'
            {
            lv_function_0_0=(Token)match(input,66,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_function_0_0, grammarAccess.getEcrecoverFunctionAccess().getFunctionEcrecoverKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEcrecoverFunctionRule());
              					}
              					setWithLastConsumed(current, "function", lv_function_0_0, "ecrecover");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,34,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getEcrecoverFunctionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalOptGrammar.g:6106:3: ( (lv_parameters_2_0= ruleIntParameter ) )
            // InternalOptGrammar.g:6107:4: (lv_parameters_2_0= ruleIntParameter )
            {
            // InternalOptGrammar.g:6107:4: (lv_parameters_2_0= ruleIntParameter )
            // InternalOptGrammar.g:6108:5: lv_parameters_2_0= ruleIntParameter
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEcrecoverFunctionAccess().getParametersIntParameterParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_80);
            lv_parameters_2_0=ruleIntParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEcrecoverFunctionRule());
              					}
              					add(
              						current,
              						"parameters",
              						lv_parameters_2_0,
              						"org.unicam.myGrammar.OptGrammar.IntParameter");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,22,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getEcrecoverFunctionAccess().getCommaKeyword_3());
              		
            }
            // InternalOptGrammar.g:6129:3: ( (lv_parameters_4_0= ruleIntParameter ) )
            // InternalOptGrammar.g:6130:4: (lv_parameters_4_0= ruleIntParameter )
            {
            // InternalOptGrammar.g:6130:4: (lv_parameters_4_0= ruleIntParameter )
            // InternalOptGrammar.g:6131:5: lv_parameters_4_0= ruleIntParameter
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEcrecoverFunctionAccess().getParametersIntParameterParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_80);
            lv_parameters_4_0=ruleIntParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEcrecoverFunctionRule());
              					}
              					add(
              						current,
              						"parameters",
              						lv_parameters_4_0,
              						"org.unicam.myGrammar.OptGrammar.IntParameter");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,22,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getEcrecoverFunctionAccess().getCommaKeyword_5());
              		
            }
            // InternalOptGrammar.g:6152:3: ( (lv_parameters_6_0= ruleIntParameter ) )
            // InternalOptGrammar.g:6153:4: (lv_parameters_6_0= ruleIntParameter )
            {
            // InternalOptGrammar.g:6153:4: (lv_parameters_6_0= ruleIntParameter )
            // InternalOptGrammar.g:6154:5: lv_parameters_6_0= ruleIntParameter
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEcrecoverFunctionAccess().getParametersIntParameterParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_80);
            lv_parameters_6_0=ruleIntParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEcrecoverFunctionRule());
              					}
              					add(
              						current,
              						"parameters",
              						lv_parameters_6_0,
              						"org.unicam.myGrammar.OptGrammar.IntParameter");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_7=(Token)match(input,22,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getEcrecoverFunctionAccess().getCommaKeyword_7());
              		
            }
            // InternalOptGrammar.g:6175:3: ( (lv_parameters_8_0= ruleIntParameter ) )
            // InternalOptGrammar.g:6176:4: (lv_parameters_8_0= ruleIntParameter )
            {
            // InternalOptGrammar.g:6176:4: (lv_parameters_8_0= ruleIntParameter )
            // InternalOptGrammar.g:6177:5: lv_parameters_8_0= ruleIntParameter
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEcrecoverFunctionAccess().getParametersIntParameterParserRuleCall_8_0());
              				
            }
            pushFollow(FOLLOW_35);
            lv_parameters_8_0=ruleIntParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEcrecoverFunctionRule());
              					}
              					add(
              						current,
              						"parameters",
              						lv_parameters_8_0,
              						"org.unicam.myGrammar.OptGrammar.IntParameter");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_9=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getEcrecoverFunctionAccess().getRightParenthesisKeyword_9());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEcrecoverFunction"


    // $ANTLR start "entryRuleHashFunction"
    // InternalOptGrammar.g:6202:1: entryRuleHashFunction returns [EObject current=null] : iv_ruleHashFunction= ruleHashFunction EOF ;
    public final EObject entryRuleHashFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHashFunction = null;


        try {
            // InternalOptGrammar.g:6202:53: (iv_ruleHashFunction= ruleHashFunction EOF )
            // InternalOptGrammar.g:6203:2: iv_ruleHashFunction= ruleHashFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHashFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHashFunction=ruleHashFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHashFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHashFunction"


    // $ANTLR start "ruleHashFunction"
    // InternalOptGrammar.g:6209:1: ruleHashFunction returns [EObject current=null] : ( ( ( (lv_name_0_1= 'keccak256' | lv_name_0_2= 'sha256' | lv_name_0_3= 'ripemd160' ) ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleIntParameter ) ) otherlv_3= ')' ) ;
    public final EObject ruleHashFunction() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_1=null;
        Token lv_name_0_2=null;
        Token lv_name_0_3=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_parameters_2_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:6215:2: ( ( ( ( (lv_name_0_1= 'keccak256' | lv_name_0_2= 'sha256' | lv_name_0_3= 'ripemd160' ) ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleIntParameter ) ) otherlv_3= ')' ) )
            // InternalOptGrammar.g:6216:2: ( ( ( (lv_name_0_1= 'keccak256' | lv_name_0_2= 'sha256' | lv_name_0_3= 'ripemd160' ) ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleIntParameter ) ) otherlv_3= ')' )
            {
            // InternalOptGrammar.g:6216:2: ( ( ( (lv_name_0_1= 'keccak256' | lv_name_0_2= 'sha256' | lv_name_0_3= 'ripemd160' ) ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleIntParameter ) ) otherlv_3= ')' )
            // InternalOptGrammar.g:6217:3: ( ( (lv_name_0_1= 'keccak256' | lv_name_0_2= 'sha256' | lv_name_0_3= 'ripemd160' ) ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleIntParameter ) ) otherlv_3= ')'
            {
            // InternalOptGrammar.g:6217:3: ( ( (lv_name_0_1= 'keccak256' | lv_name_0_2= 'sha256' | lv_name_0_3= 'ripemd160' ) ) )
            // InternalOptGrammar.g:6218:4: ( (lv_name_0_1= 'keccak256' | lv_name_0_2= 'sha256' | lv_name_0_3= 'ripemd160' ) )
            {
            // InternalOptGrammar.g:6218:4: ( (lv_name_0_1= 'keccak256' | lv_name_0_2= 'sha256' | lv_name_0_3= 'ripemd160' ) )
            // InternalOptGrammar.g:6219:5: (lv_name_0_1= 'keccak256' | lv_name_0_2= 'sha256' | lv_name_0_3= 'ripemd160' )
            {
            // InternalOptGrammar.g:6219:5: (lv_name_0_1= 'keccak256' | lv_name_0_2= 'sha256' | lv_name_0_3= 'ripemd160' )
            int alt116=3;
            switch ( input.LA(1) ) {
            case 67:
                {
                alt116=1;
                }
                break;
            case 68:
                {
                alt116=2;
                }
                break;
            case 69:
                {
                alt116=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 116, 0, input);

                throw nvae;
            }

            switch (alt116) {
                case 1 :
                    // InternalOptGrammar.g:6220:6: lv_name_0_1= 'keccak256'
                    {
                    lv_name_0_1=(Token)match(input,67,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_1, grammarAccess.getHashFunctionAccess().getNameKeccak256Keyword_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHashFunctionRule());
                      						}
                      						setWithLastConsumed(current, "name", lv_name_0_1, null);
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:6231:6: lv_name_0_2= 'sha256'
                    {
                    lv_name_0_2=(Token)match(input,68,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_2, grammarAccess.getHashFunctionAccess().getNameSha256Keyword_0_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHashFunctionRule());
                      						}
                      						setWithLastConsumed(current, "name", lv_name_0_2, null);
                      					
                    }

                    }
                    break;
                case 3 :
                    // InternalOptGrammar.g:6242:6: lv_name_0_3= 'ripemd160'
                    {
                    lv_name_0_3=(Token)match(input,69,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_3, grammarAccess.getHashFunctionAccess().getNameRipemd160Keyword_0_0_2());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHashFunctionRule());
                      						}
                      						setWithLastConsumed(current, "name", lv_name_0_3, null);
                      					
                    }

                    }
                    break;

            }


            }


            }

            otherlv_1=(Token)match(input,34,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getHashFunctionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalOptGrammar.g:6259:3: ( (lv_parameters_2_0= ruleIntParameter ) )
            // InternalOptGrammar.g:6260:4: (lv_parameters_2_0= ruleIntParameter )
            {
            // InternalOptGrammar.g:6260:4: (lv_parameters_2_0= ruleIntParameter )
            // InternalOptGrammar.g:6261:5: lv_parameters_2_0= ruleIntParameter
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getHashFunctionAccess().getParametersIntParameterParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_35);
            lv_parameters_2_0=ruleIntParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getHashFunctionRule());
              					}
              					set(
              						current,
              						"parameters",
              						lv_parameters_2_0,
              						"org.unicam.myGrammar.OptGrammar.IntParameter");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getHashFunctionAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHashFunction"


    // $ANTLR start "entryRuleIntParameter"
    // InternalOptGrammar.g:6286:1: entryRuleIntParameter returns [EObject current=null] : iv_ruleIntParameter= ruleIntParameter EOF ;
    public final EObject entryRuleIntParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntParameter = null;


        try {
            // InternalOptGrammar.g:6286:53: (iv_ruleIntParameter= ruleIntParameter EOF )
            // InternalOptGrammar.g:6287:2: iv_ruleIntParameter= ruleIntParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntParameter=ruleIntParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntParameter"


    // $ANTLR start "ruleIntParameter"
    // InternalOptGrammar.g:6293:1: ruleIntParameter returns [EObject current=null] : ( ( (lv_param_0_0= ruleArithmeticOperations ) ) | ( (lv_fun_1_0= ruleFunctionCall ) ) ) ;
    public final EObject ruleIntParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_param_0_0 = null;

        EObject lv_fun_1_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:6299:2: ( ( ( (lv_param_0_0= ruleArithmeticOperations ) ) | ( (lv_fun_1_0= ruleFunctionCall ) ) ) )
            // InternalOptGrammar.g:6300:2: ( ( (lv_param_0_0= ruleArithmeticOperations ) ) | ( (lv_fun_1_0= ruleFunctionCall ) ) )
            {
            // InternalOptGrammar.g:6300:2: ( ( (lv_param_0_0= ruleArithmeticOperations ) ) | ( (lv_fun_1_0= ruleFunctionCall ) ) )
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==RULE_INT||(LA117_0>=RULE_HEX && LA117_0<=RULE_DECIMAL)||LA117_0==34||LA117_0==74) ) {
                alt117=1;
            }
            else if ( (LA117_0==RULE_ID) ) {
                alt117=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 117, 0, input);

                throw nvae;
            }
            switch (alt117) {
                case 1 :
                    // InternalOptGrammar.g:6301:3: ( (lv_param_0_0= ruleArithmeticOperations ) )
                    {
                    // InternalOptGrammar.g:6301:3: ( (lv_param_0_0= ruleArithmeticOperations ) )
                    // InternalOptGrammar.g:6302:4: (lv_param_0_0= ruleArithmeticOperations )
                    {
                    // InternalOptGrammar.g:6302:4: (lv_param_0_0= ruleArithmeticOperations )
                    // InternalOptGrammar.g:6303:5: lv_param_0_0= ruleArithmeticOperations
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getIntParameterAccess().getParamArithmeticOperationsParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_param_0_0=ruleArithmeticOperations();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getIntParameterRule());
                      					}
                      					set(
                      						current,
                      						"param",
                      						lv_param_0_0,
                      						"org.unicam.myGrammar.OptGrammar.ArithmeticOperations");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:6321:3: ( (lv_fun_1_0= ruleFunctionCall ) )
                    {
                    // InternalOptGrammar.g:6321:3: ( (lv_fun_1_0= ruleFunctionCall ) )
                    // InternalOptGrammar.g:6322:4: (lv_fun_1_0= ruleFunctionCall )
                    {
                    // InternalOptGrammar.g:6322:4: (lv_fun_1_0= ruleFunctionCall )
                    // InternalOptGrammar.g:6323:5: lv_fun_1_0= ruleFunctionCall
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getIntParameterAccess().getFunFunctionCallParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_fun_1_0=ruleFunctionCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getIntParameterRule());
                      					}
                      					set(
                      						current,
                      						"fun",
                      						lv_fun_1_0,
                      						"org.unicam.myGrammar.OptGrammar.FunctionCall");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntParameter"


    // $ANTLR start "entryRuleFunctionCall"
    // InternalOptGrammar.g:6344:1: entryRuleFunctionCall returns [EObject current=null] : iv_ruleFunctionCall= ruleFunctionCall EOF ;
    public final EObject entryRuleFunctionCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCall = null;


        try {
            // InternalOptGrammar.g:6344:53: (iv_ruleFunctionCall= ruleFunctionCall EOF )
            // InternalOptGrammar.g:6345:2: iv_ruleFunctionCall= ruleFunctionCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionCall=ruleFunctionCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCall"


    // $ANTLR start "ruleFunctionCall"
    // InternalOptGrammar.g:6351:1: ruleFunctionCall returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '(' ( ( (lv_parameters_2_0= ruleLogicalOperations ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleLogicalOperations ) ) )* )? otherlv_5= ')' ) ;
    public final EObject ruleFunctionCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_parameters_2_0 = null;

        EObject lv_parameters_4_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:6357:2: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '(' ( ( (lv_parameters_2_0= ruleLogicalOperations ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleLogicalOperations ) ) )* )? otherlv_5= ')' ) )
            // InternalOptGrammar.g:6358:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '(' ( ( (lv_parameters_2_0= ruleLogicalOperations ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleLogicalOperations ) ) )* )? otherlv_5= ')' )
            {
            // InternalOptGrammar.g:6358:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '(' ( ( (lv_parameters_2_0= ruleLogicalOperations ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleLogicalOperations ) ) )* )? otherlv_5= ')' )
            // InternalOptGrammar.g:6359:3: ( (otherlv_0= RULE_ID ) ) otherlv_1= '(' ( ( (lv_parameters_2_0= ruleLogicalOperations ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleLogicalOperations ) ) )* )? otherlv_5= ')'
            {
            // InternalOptGrammar.g:6359:3: ( (otherlv_0= RULE_ID ) )
            // InternalOptGrammar.g:6360:4: (otherlv_0= RULE_ID )
            {
            // InternalOptGrammar.g:6360:4: (otherlv_0= RULE_ID )
            // InternalOptGrammar.g:6361:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFunctionCallRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getFunctionCallAccess().getNameFunctionDefinitionCrossReference_0_0());
              				
            }

            }


            }

            otherlv_1=(Token)match(input,34,FOLLOW_59); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalOptGrammar.g:6376:3: ( ( (lv_parameters_2_0= ruleLogicalOperations ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleLogicalOperations ) ) )* )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( ((LA119_0>=RULE_INT && LA119_0<=RULE_TX)||(LA119_0>=59 && LA119_0<=60)||(LA119_0>=62 && LA119_0<=69)||LA119_0==74||(LA119_0>=192 && LA119_0<=193)) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalOptGrammar.g:6377:4: ( (lv_parameters_2_0= ruleLogicalOperations ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleLogicalOperations ) ) )*
                    {
                    // InternalOptGrammar.g:6377:4: ( (lv_parameters_2_0= ruleLogicalOperations ) )
                    // InternalOptGrammar.g:6378:5: (lv_parameters_2_0= ruleLogicalOperations )
                    {
                    // InternalOptGrammar.g:6378:5: (lv_parameters_2_0= ruleLogicalOperations )
                    // InternalOptGrammar.g:6379:6: lv_parameters_2_0= ruleLogicalOperations
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersLogicalOperationsParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_50);
                    lv_parameters_2_0=ruleLogicalOperations();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_2_0,
                      							"org.unicam.myGrammar.OptGrammar.LogicalOperations");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalOptGrammar.g:6396:4: (otherlv_3= ',' ( (lv_parameters_4_0= ruleLogicalOperations ) ) )*
                    loop118:
                    do {
                        int alt118=2;
                        int LA118_0 = input.LA(1);

                        if ( (LA118_0==22) ) {
                            alt118=1;
                        }


                        switch (alt118) {
                    	case 1 :
                    	    // InternalOptGrammar.g:6397:5: otherlv_3= ',' ( (lv_parameters_4_0= ruleLogicalOperations ) )
                    	    {
                    	    otherlv_3=(Token)match(input,22,FOLLOW_17); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getFunctionCallAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalOptGrammar.g:6401:5: ( (lv_parameters_4_0= ruleLogicalOperations ) )
                    	    // InternalOptGrammar.g:6402:6: (lv_parameters_4_0= ruleLogicalOperations )
                    	    {
                    	    // InternalOptGrammar.g:6402:6: (lv_parameters_4_0= ruleLogicalOperations )
                    	    // InternalOptGrammar.g:6403:7: lv_parameters_4_0= ruleLogicalOperations
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersLogicalOperationsParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_50);
                    	    lv_parameters_4_0=ruleLogicalOperations();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_4_0,
                    	      								"org.unicam.myGrammar.OptGrammar.LogicalOperations");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop118;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCall"


    // $ANTLR start "entryRuleArithmeticOperations"
    // InternalOptGrammar.g:6430:1: entryRuleArithmeticOperations returns [EObject current=null] : iv_ruleArithmeticOperations= ruleArithmeticOperations EOF ;
    public final EObject entryRuleArithmeticOperations() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArithmeticOperations = null;


        try {
            // InternalOptGrammar.g:6430:61: (iv_ruleArithmeticOperations= ruleArithmeticOperations EOF )
            // InternalOptGrammar.g:6431:2: iv_ruleArithmeticOperations= ruleArithmeticOperations EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArithmeticOperationsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArithmeticOperations=ruleArithmeticOperations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArithmeticOperations; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArithmeticOperations"


    // $ANTLR start "ruleArithmeticOperations"
    // InternalOptGrammar.g:6437:1: ruleArithmeticOperations returns [EObject current=null] : ( ( (lv_first_0_0= rulePrimaryArithmetic ) ) ( (lv_seconds_1_0= ruleSecondOperators ) )* ) ;
    public final EObject ruleArithmeticOperations() throws RecognitionException {
        EObject current = null;

        EObject lv_first_0_0 = null;

        EObject lv_seconds_1_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:6443:2: ( ( ( (lv_first_0_0= rulePrimaryArithmetic ) ) ( (lv_seconds_1_0= ruleSecondOperators ) )* ) )
            // InternalOptGrammar.g:6444:2: ( ( (lv_first_0_0= rulePrimaryArithmetic ) ) ( (lv_seconds_1_0= ruleSecondOperators ) )* )
            {
            // InternalOptGrammar.g:6444:2: ( ( (lv_first_0_0= rulePrimaryArithmetic ) ) ( (lv_seconds_1_0= ruleSecondOperators ) )* )
            // InternalOptGrammar.g:6445:3: ( (lv_first_0_0= rulePrimaryArithmetic ) ) ( (lv_seconds_1_0= ruleSecondOperators ) )*
            {
            // InternalOptGrammar.g:6445:3: ( (lv_first_0_0= rulePrimaryArithmetic ) )
            // InternalOptGrammar.g:6446:4: (lv_first_0_0= rulePrimaryArithmetic )
            {
            // InternalOptGrammar.g:6446:4: (lv_first_0_0= rulePrimaryArithmetic )
            // InternalOptGrammar.g:6447:5: lv_first_0_0= rulePrimaryArithmetic
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getArithmeticOperationsAccess().getFirstPrimaryArithmeticParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_81);
            lv_first_0_0=rulePrimaryArithmetic();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getArithmeticOperationsRule());
              					}
              					set(
              						current,
              						"first",
              						lv_first_0_0,
              						"org.unicam.myGrammar.OptGrammar.PrimaryArithmetic");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalOptGrammar.g:6464:3: ( (lv_seconds_1_0= ruleSecondOperators ) )*
            loop120:
            do {
                int alt120=2;
                int LA120_0 = input.LA(1);

                if ( ((LA120_0>=70 && LA120_0<=73)) ) {
                    alt120=1;
                }


                switch (alt120) {
            	case 1 :
            	    // InternalOptGrammar.g:6465:4: (lv_seconds_1_0= ruleSecondOperators )
            	    {
            	    // InternalOptGrammar.g:6465:4: (lv_seconds_1_0= ruleSecondOperators )
            	    // InternalOptGrammar.g:6466:5: lv_seconds_1_0= ruleSecondOperators
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getArithmeticOperationsAccess().getSecondsSecondOperatorsParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_81);
            	    lv_seconds_1_0=ruleSecondOperators();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getArithmeticOperationsRule());
            	      					}
            	      					add(
            	      						current,
            	      						"seconds",
            	      						lv_seconds_1_0,
            	      						"org.unicam.myGrammar.OptGrammar.SecondOperators");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop120;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArithmeticOperations"


    // $ANTLR start "entryRulePrimaryArithmetic"
    // InternalOptGrammar.g:6487:1: entryRulePrimaryArithmetic returns [EObject current=null] : iv_rulePrimaryArithmetic= rulePrimaryArithmetic EOF ;
    public final EObject entryRulePrimaryArithmetic() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryArithmetic = null;


        try {
            // InternalOptGrammar.g:6487:58: (iv_rulePrimaryArithmetic= rulePrimaryArithmetic EOF )
            // InternalOptGrammar.g:6488:2: iv_rulePrimaryArithmetic= rulePrimaryArithmetic EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryArithmeticRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryArithmetic=rulePrimaryArithmetic();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryArithmetic; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryArithmetic"


    // $ANTLR start "rulePrimaryArithmetic"
    // InternalOptGrammar.g:6494:1: rulePrimaryArithmetic returns [EObject current=null] : (this_NumericLiteral_0= ruleNumericLiteral | (otherlv_1= '(' this_LogicalOperations_2= ruleLogicalOperations otherlv_3= ')' ) ) ;
    public final EObject rulePrimaryArithmetic() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_NumericLiteral_0 = null;

        EObject this_LogicalOperations_2 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:6500:2: ( (this_NumericLiteral_0= ruleNumericLiteral | (otherlv_1= '(' this_LogicalOperations_2= ruleLogicalOperations otherlv_3= ')' ) ) )
            // InternalOptGrammar.g:6501:2: (this_NumericLiteral_0= ruleNumericLiteral | (otherlv_1= '(' this_LogicalOperations_2= ruleLogicalOperations otherlv_3= ')' ) )
            {
            // InternalOptGrammar.g:6501:2: (this_NumericLiteral_0= ruleNumericLiteral | (otherlv_1= '(' this_LogicalOperations_2= ruleLogicalOperations otherlv_3= ')' ) )
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==RULE_INT||(LA121_0>=RULE_HEX && LA121_0<=RULE_DECIMAL)||LA121_0==74) ) {
                alt121=1;
            }
            else if ( (LA121_0==34) ) {
                alt121=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 121, 0, input);

                throw nvae;
            }
            switch (alt121) {
                case 1 :
                    // InternalOptGrammar.g:6502:3: this_NumericLiteral_0= ruleNumericLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryArithmeticAccess().getNumericLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NumericLiteral_0=ruleNumericLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NumericLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:6511:3: (otherlv_1= '(' this_LogicalOperations_2= ruleLogicalOperations otherlv_3= ')' )
                    {
                    // InternalOptGrammar.g:6511:3: (otherlv_1= '(' this_LogicalOperations_2= ruleLogicalOperations otherlv_3= ')' )
                    // InternalOptGrammar.g:6512:4: otherlv_1= '(' this_LogicalOperations_2= ruleLogicalOperations otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,34,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getPrimaryArithmeticAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryArithmeticAccess().getLogicalOperationsParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_35);
                    this_LogicalOperations_2=ruleLogicalOperations();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_LogicalOperations_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_3=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getPrimaryArithmeticAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryArithmetic"


    // $ANTLR start "entryRuleSecondOperators"
    // InternalOptGrammar.g:6533:1: entryRuleSecondOperators returns [EObject current=null] : iv_ruleSecondOperators= ruleSecondOperators EOF ;
    public final EObject entryRuleSecondOperators() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSecondOperators = null;


        try {
            // InternalOptGrammar.g:6533:56: (iv_ruleSecondOperators= ruleSecondOperators EOF )
            // InternalOptGrammar.g:6534:2: iv_ruleSecondOperators= ruleSecondOperators EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSecondOperatorsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSecondOperators=ruleSecondOperators();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSecondOperators; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSecondOperators"


    // $ANTLR start "ruleSecondOperators"
    // InternalOptGrammar.g:6540:1: ruleSecondOperators returns [EObject current=null] : ( ( ( (lv_operator_0_1= '+' | lv_operator_0_2= '-' | lv_operator_0_3= '/' | lv_operator_0_4= '*' ) ) ) ( (lv_value_1_0= rulePrimaryArithmetic ) ) ) ;
    public final EObject ruleSecondOperators() throws RecognitionException {
        EObject current = null;

        Token lv_operator_0_1=null;
        Token lv_operator_0_2=null;
        Token lv_operator_0_3=null;
        Token lv_operator_0_4=null;
        EObject lv_value_1_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:6546:2: ( ( ( ( (lv_operator_0_1= '+' | lv_operator_0_2= '-' | lv_operator_0_3= '/' | lv_operator_0_4= '*' ) ) ) ( (lv_value_1_0= rulePrimaryArithmetic ) ) ) )
            // InternalOptGrammar.g:6547:2: ( ( ( (lv_operator_0_1= '+' | lv_operator_0_2= '-' | lv_operator_0_3= '/' | lv_operator_0_4= '*' ) ) ) ( (lv_value_1_0= rulePrimaryArithmetic ) ) )
            {
            // InternalOptGrammar.g:6547:2: ( ( ( (lv_operator_0_1= '+' | lv_operator_0_2= '-' | lv_operator_0_3= '/' | lv_operator_0_4= '*' ) ) ) ( (lv_value_1_0= rulePrimaryArithmetic ) ) )
            // InternalOptGrammar.g:6548:3: ( ( (lv_operator_0_1= '+' | lv_operator_0_2= '-' | lv_operator_0_3= '/' | lv_operator_0_4= '*' ) ) ) ( (lv_value_1_0= rulePrimaryArithmetic ) )
            {
            // InternalOptGrammar.g:6548:3: ( ( (lv_operator_0_1= '+' | lv_operator_0_2= '-' | lv_operator_0_3= '/' | lv_operator_0_4= '*' ) ) )
            // InternalOptGrammar.g:6549:4: ( (lv_operator_0_1= '+' | lv_operator_0_2= '-' | lv_operator_0_3= '/' | lv_operator_0_4= '*' ) )
            {
            // InternalOptGrammar.g:6549:4: ( (lv_operator_0_1= '+' | lv_operator_0_2= '-' | lv_operator_0_3= '/' | lv_operator_0_4= '*' ) )
            // InternalOptGrammar.g:6550:5: (lv_operator_0_1= '+' | lv_operator_0_2= '-' | lv_operator_0_3= '/' | lv_operator_0_4= '*' )
            {
            // InternalOptGrammar.g:6550:5: (lv_operator_0_1= '+' | lv_operator_0_2= '-' | lv_operator_0_3= '/' | lv_operator_0_4= '*' )
            int alt122=4;
            switch ( input.LA(1) ) {
            case 70:
                {
                alt122=1;
                }
                break;
            case 71:
                {
                alt122=2;
                }
                break;
            case 72:
                {
                alt122=3;
                }
                break;
            case 73:
                {
                alt122=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 122, 0, input);

                throw nvae;
            }

            switch (alt122) {
                case 1 :
                    // InternalOptGrammar.g:6551:6: lv_operator_0_1= '+'
                    {
                    lv_operator_0_1=(Token)match(input,70,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_operator_0_1, grammarAccess.getSecondOperatorsAccess().getOperatorPlusSignKeyword_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSecondOperatorsRule());
                      						}
                      						setWithLastConsumed(current, "operator", lv_operator_0_1, null);
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:6562:6: lv_operator_0_2= '-'
                    {
                    lv_operator_0_2=(Token)match(input,71,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_operator_0_2, grammarAccess.getSecondOperatorsAccess().getOperatorHyphenMinusKeyword_0_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSecondOperatorsRule());
                      						}
                      						setWithLastConsumed(current, "operator", lv_operator_0_2, null);
                      					
                    }

                    }
                    break;
                case 3 :
                    // InternalOptGrammar.g:6573:6: lv_operator_0_3= '/'
                    {
                    lv_operator_0_3=(Token)match(input,72,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_operator_0_3, grammarAccess.getSecondOperatorsAccess().getOperatorSolidusKeyword_0_0_2());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSecondOperatorsRule());
                      						}
                      						setWithLastConsumed(current, "operator", lv_operator_0_3, null);
                      					
                    }

                    }
                    break;
                case 4 :
                    // InternalOptGrammar.g:6584:6: lv_operator_0_4= '*'
                    {
                    lv_operator_0_4=(Token)match(input,73,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_operator_0_4, grammarAccess.getSecondOperatorsAccess().getOperatorAsteriskKeyword_0_0_3());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSecondOperatorsRule());
                      						}
                      						setWithLastConsumed(current, "operator", lv_operator_0_4, null);
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalOptGrammar.g:6597:3: ( (lv_value_1_0= rulePrimaryArithmetic ) )
            // InternalOptGrammar.g:6598:4: (lv_value_1_0= rulePrimaryArithmetic )
            {
            // InternalOptGrammar.g:6598:4: (lv_value_1_0= rulePrimaryArithmetic )
            // InternalOptGrammar.g:6599:5: lv_value_1_0= rulePrimaryArithmetic
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSecondOperatorsAccess().getValuePrimaryArithmeticParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_1_0=rulePrimaryArithmetic();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSecondOperatorsRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.unicam.myGrammar.OptGrammar.PrimaryArithmetic");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSecondOperators"


    // $ANTLR start "entryRuleBooleanConst"
    // InternalOptGrammar.g:6620:1: entryRuleBooleanConst returns [EObject current=null] : iv_ruleBooleanConst= ruleBooleanConst EOF ;
    public final EObject entryRuleBooleanConst() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBooleanConst = null;


        try {
            // InternalOptGrammar.g:6620:53: (iv_ruleBooleanConst= ruleBooleanConst EOF )
            // InternalOptGrammar.g:6621:2: iv_ruleBooleanConst= ruleBooleanConst EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanConstRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBooleanConst=ruleBooleanConst();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanConst; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBooleanConst"


    // $ANTLR start "ruleBooleanConst"
    // InternalOptGrammar.g:6627:1: ruleBooleanConst returns [EObject current=null] : ( (lv_value_0_0= ruleBooleanLiteralEnum ) ) ;
    public final EObject ruleBooleanConst() throws RecognitionException {
        EObject current = null;

        Enumerator lv_value_0_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:6633:2: ( ( (lv_value_0_0= ruleBooleanLiteralEnum ) ) )
            // InternalOptGrammar.g:6634:2: ( (lv_value_0_0= ruleBooleanLiteralEnum ) )
            {
            // InternalOptGrammar.g:6634:2: ( (lv_value_0_0= ruleBooleanLiteralEnum ) )
            // InternalOptGrammar.g:6635:3: (lv_value_0_0= ruleBooleanLiteralEnum )
            {
            // InternalOptGrammar.g:6635:3: (lv_value_0_0= ruleBooleanLiteralEnum )
            // InternalOptGrammar.g:6636:4: lv_value_0_0= ruleBooleanLiteralEnum
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getBooleanConstAccess().getValueBooleanLiteralEnumEnumRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_value_0_0=ruleBooleanLiteralEnum();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getBooleanConstRule());
              				}
              				set(
              					current,
              					"value",
              					lv_value_0_0,
              					"org.unicam.myGrammar.OptGrammar.BooleanLiteralEnum");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBooleanConst"


    // $ANTLR start "entryRuleNumericLiteral"
    // InternalOptGrammar.g:6656:1: entryRuleNumericLiteral returns [EObject current=null] : iv_ruleNumericLiteral= ruleNumericLiteral EOF ;
    public final EObject entryRuleNumericLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumericLiteral = null;


        try {
            // InternalOptGrammar.g:6656:55: (iv_ruleNumericLiteral= ruleNumericLiteral EOF )
            // InternalOptGrammar.g:6657:2: iv_ruleNumericLiteral= ruleNumericLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumericLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumericLiteral=ruleNumericLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumericLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumericLiteral"


    // $ANTLR start "ruleNumericLiteral"
    // InternalOptGrammar.g:6663:1: ruleNumericLiteral returns [EObject current=null] : ( ( ( (lv_intValue_0_0= ruleNumberDimensionless ) ) | ( (lv_hexValue_1_0= ruleHexLiteral ) ) | ( (lv_decimalValue_2_0= ruleDecimalLiteral ) ) | ( (lv_now_3_0= ruleNow ) ) ) ( (lv_etherUnit_4_0= ruleUnitTypes ) )? ) ;
    public final EObject ruleNumericLiteral() throws RecognitionException {
        EObject current = null;

        EObject lv_intValue_0_0 = null;

        EObject lv_hexValue_1_0 = null;

        EObject lv_decimalValue_2_0 = null;

        EObject lv_now_3_0 = null;

        EObject lv_etherUnit_4_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:6669:2: ( ( ( ( (lv_intValue_0_0= ruleNumberDimensionless ) ) | ( (lv_hexValue_1_0= ruleHexLiteral ) ) | ( (lv_decimalValue_2_0= ruleDecimalLiteral ) ) | ( (lv_now_3_0= ruleNow ) ) ) ( (lv_etherUnit_4_0= ruleUnitTypes ) )? ) )
            // InternalOptGrammar.g:6670:2: ( ( ( (lv_intValue_0_0= ruleNumberDimensionless ) ) | ( (lv_hexValue_1_0= ruleHexLiteral ) ) | ( (lv_decimalValue_2_0= ruleDecimalLiteral ) ) | ( (lv_now_3_0= ruleNow ) ) ) ( (lv_etherUnit_4_0= ruleUnitTypes ) )? )
            {
            // InternalOptGrammar.g:6670:2: ( ( ( (lv_intValue_0_0= ruleNumberDimensionless ) ) | ( (lv_hexValue_1_0= ruleHexLiteral ) ) | ( (lv_decimalValue_2_0= ruleDecimalLiteral ) ) | ( (lv_now_3_0= ruleNow ) ) ) ( (lv_etherUnit_4_0= ruleUnitTypes ) )? )
            // InternalOptGrammar.g:6671:3: ( ( (lv_intValue_0_0= ruleNumberDimensionless ) ) | ( (lv_hexValue_1_0= ruleHexLiteral ) ) | ( (lv_decimalValue_2_0= ruleDecimalLiteral ) ) | ( (lv_now_3_0= ruleNow ) ) ) ( (lv_etherUnit_4_0= ruleUnitTypes ) )?
            {
            // InternalOptGrammar.g:6671:3: ( ( (lv_intValue_0_0= ruleNumberDimensionless ) ) | ( (lv_hexValue_1_0= ruleHexLiteral ) ) | ( (lv_decimalValue_2_0= ruleDecimalLiteral ) ) | ( (lv_now_3_0= ruleNow ) ) )
            int alt123=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt123=1;
                }
                break;
            case RULE_HEX:
                {
                alt123=2;
                }
                break;
            case RULE_DECIMAL:
                {
                alt123=3;
                }
                break;
            case 74:
                {
                alt123=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 123, 0, input);

                throw nvae;
            }

            switch (alt123) {
                case 1 :
                    // InternalOptGrammar.g:6672:4: ( (lv_intValue_0_0= ruleNumberDimensionless ) )
                    {
                    // InternalOptGrammar.g:6672:4: ( (lv_intValue_0_0= ruleNumberDimensionless ) )
                    // InternalOptGrammar.g:6673:5: (lv_intValue_0_0= ruleNumberDimensionless )
                    {
                    // InternalOptGrammar.g:6673:5: (lv_intValue_0_0= ruleNumberDimensionless )
                    // InternalOptGrammar.g:6674:6: lv_intValue_0_0= ruleNumberDimensionless
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNumericLiteralAccess().getIntValueNumberDimensionlessParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_83);
                    lv_intValue_0_0=ruleNumberDimensionless();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNumericLiteralRule());
                      						}
                      						set(
                      							current,
                      							"intValue",
                      							lv_intValue_0_0,
                      							"org.unicam.myGrammar.OptGrammar.NumberDimensionless");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:6692:4: ( (lv_hexValue_1_0= ruleHexLiteral ) )
                    {
                    // InternalOptGrammar.g:6692:4: ( (lv_hexValue_1_0= ruleHexLiteral ) )
                    // InternalOptGrammar.g:6693:5: (lv_hexValue_1_0= ruleHexLiteral )
                    {
                    // InternalOptGrammar.g:6693:5: (lv_hexValue_1_0= ruleHexLiteral )
                    // InternalOptGrammar.g:6694:6: lv_hexValue_1_0= ruleHexLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNumericLiteralAccess().getHexValueHexLiteralParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_83);
                    lv_hexValue_1_0=ruleHexLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNumericLiteralRule());
                      						}
                      						set(
                      							current,
                      							"hexValue",
                      							lv_hexValue_1_0,
                      							"org.unicam.myGrammar.OptGrammar.HexLiteral");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalOptGrammar.g:6712:4: ( (lv_decimalValue_2_0= ruleDecimalLiteral ) )
                    {
                    // InternalOptGrammar.g:6712:4: ( (lv_decimalValue_2_0= ruleDecimalLiteral ) )
                    // InternalOptGrammar.g:6713:5: (lv_decimalValue_2_0= ruleDecimalLiteral )
                    {
                    // InternalOptGrammar.g:6713:5: (lv_decimalValue_2_0= ruleDecimalLiteral )
                    // InternalOptGrammar.g:6714:6: lv_decimalValue_2_0= ruleDecimalLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNumericLiteralAccess().getDecimalValueDecimalLiteralParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_83);
                    lv_decimalValue_2_0=ruleDecimalLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNumericLiteralRule());
                      						}
                      						set(
                      							current,
                      							"decimalValue",
                      							lv_decimalValue_2_0,
                      							"org.unicam.myGrammar.OptGrammar.DecimalLiteral");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalOptGrammar.g:6732:4: ( (lv_now_3_0= ruleNow ) )
                    {
                    // InternalOptGrammar.g:6732:4: ( (lv_now_3_0= ruleNow ) )
                    // InternalOptGrammar.g:6733:5: (lv_now_3_0= ruleNow )
                    {
                    // InternalOptGrammar.g:6733:5: (lv_now_3_0= ruleNow )
                    // InternalOptGrammar.g:6734:6: lv_now_3_0= ruleNow
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNumericLiteralAccess().getNowNowParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FOLLOW_83);
                    lv_now_3_0=ruleNow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNumericLiteralRule());
                      						}
                      						set(
                      							current,
                      							"now",
                      							lv_now_3_0,
                      							"org.unicam.myGrammar.OptGrammar.Now");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOptGrammar.g:6752:3: ( (lv_etherUnit_4_0= ruleUnitTypes ) )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==RULE_INT) ) {
                alt124=1;
            }
            switch (alt124) {
                case 1 :
                    // InternalOptGrammar.g:6753:4: (lv_etherUnit_4_0= ruleUnitTypes )
                    {
                    // InternalOptGrammar.g:6753:4: (lv_etherUnit_4_0= ruleUnitTypes )
                    // InternalOptGrammar.g:6754:5: lv_etherUnit_4_0= ruleUnitTypes
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getNumericLiteralAccess().getEtherUnitUnitTypesParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_etherUnit_4_0=ruleUnitTypes();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getNumericLiteralRule());
                      					}
                      					set(
                      						current,
                      						"etherUnit",
                      						lv_etherUnit_4_0,
                      						"org.unicam.myGrammar.OptGrammar.UnitTypes");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumericLiteral"


    // $ANTLR start "entryRuleNow"
    // InternalOptGrammar.g:6775:1: entryRuleNow returns [EObject current=null] : iv_ruleNow= ruleNow EOF ;
    public final EObject entryRuleNow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNow = null;


        try {
            // InternalOptGrammar.g:6775:44: (iv_ruleNow= ruleNow EOF )
            // InternalOptGrammar.g:6776:2: iv_ruleNow= ruleNow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNow=ruleNow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNow"


    // $ANTLR start "ruleNow"
    // InternalOptGrammar.g:6782:1: ruleNow returns [EObject current=null] : ( () otherlv_1= 'now' ) ;
    public final EObject ruleNow() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:6788:2: ( ( () otherlv_1= 'now' ) )
            // InternalOptGrammar.g:6789:2: ( () otherlv_1= 'now' )
            {
            // InternalOptGrammar.g:6789:2: ( () otherlv_1= 'now' )
            // InternalOptGrammar.g:6790:3: () otherlv_1= 'now'
            {
            // InternalOptGrammar.g:6790:3: ()
            // InternalOptGrammar.g:6791:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNowAccess().getNowAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNowAccess().getNowKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNow"


    // $ANTLR start "entryRuleUnitTypes"
    // InternalOptGrammar.g:6805:1: entryRuleUnitTypes returns [EObject current=null] : iv_ruleUnitTypes= ruleUnitTypes EOF ;
    public final EObject entryRuleUnitTypes() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnitTypes = null;


        try {
            // InternalOptGrammar.g:6805:50: (iv_ruleUnitTypes= ruleUnitTypes EOF )
            // InternalOptGrammar.g:6806:2: iv_ruleUnitTypes= ruleUnitTypes EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitTypesRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnitTypes=ruleUnitTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnitTypes; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnitTypes"


    // $ANTLR start "ruleUnitTypes"
    // InternalOptGrammar.g:6812:1: ruleUnitTypes returns [EObject current=null] : ( ( (lv_time_0_0= ruleTime ) ) | ( (lv_units_1_0= ruleEther ) ) ) ;
    public final EObject ruleUnitTypes() throws RecognitionException {
        EObject current = null;

        EObject lv_time_0_0 = null;

        EObject lv_units_1_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:6818:2: ( ( ( (lv_time_0_0= ruleTime ) ) | ( (lv_units_1_0= ruleEther ) ) ) )
            // InternalOptGrammar.g:6819:2: ( ( (lv_time_0_0= ruleTime ) ) | ( (lv_units_1_0= ruleEther ) ) )
            {
            // InternalOptGrammar.g:6819:2: ( ( (lv_time_0_0= ruleTime ) ) | ( (lv_units_1_0= ruleEther ) ) )
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==RULE_INT) ) {
                int LA125_1 = input.LA(2);

                if ( ((LA125_1>=194 && LA125_1<=197)) ) {
                    alt125=2;
                }
                else if ( ((LA125_1>=198 && LA125_1<=203)) ) {
                    alt125=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 125, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 125, 0, input);

                throw nvae;
            }
            switch (alt125) {
                case 1 :
                    // InternalOptGrammar.g:6820:3: ( (lv_time_0_0= ruleTime ) )
                    {
                    // InternalOptGrammar.g:6820:3: ( (lv_time_0_0= ruleTime ) )
                    // InternalOptGrammar.g:6821:4: (lv_time_0_0= ruleTime )
                    {
                    // InternalOptGrammar.g:6821:4: (lv_time_0_0= ruleTime )
                    // InternalOptGrammar.g:6822:5: lv_time_0_0= ruleTime
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnitTypesAccess().getTimeTimeParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_time_0_0=ruleTime();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUnitTypesRule());
                      					}
                      					set(
                      						current,
                      						"time",
                      						lv_time_0_0,
                      						"org.unicam.myGrammar.OptGrammar.Time");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:6840:3: ( (lv_units_1_0= ruleEther ) )
                    {
                    // InternalOptGrammar.g:6840:3: ( (lv_units_1_0= ruleEther ) )
                    // InternalOptGrammar.g:6841:4: (lv_units_1_0= ruleEther )
                    {
                    // InternalOptGrammar.g:6841:4: (lv_units_1_0= ruleEther )
                    // InternalOptGrammar.g:6842:5: lv_units_1_0= ruleEther
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnitTypesAccess().getUnitsEtherParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_units_1_0=ruleEther();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUnitTypesRule());
                      					}
                      					set(
                      						current,
                      						"units",
                      						lv_units_1_0,
                      						"org.unicam.myGrammar.OptGrammar.Ether");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitTypes"


    // $ANTLR start "entryRuleNumberDimensionless"
    // InternalOptGrammar.g:6863:1: entryRuleNumberDimensionless returns [EObject current=null] : iv_ruleNumberDimensionless= ruleNumberDimensionless EOF ;
    public final EObject entryRuleNumberDimensionless() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumberDimensionless = null;


        try {
            // InternalOptGrammar.g:6863:60: (iv_ruleNumberDimensionless= ruleNumberDimensionless EOF )
            // InternalOptGrammar.g:6864:2: iv_ruleNumberDimensionless= ruleNumberDimensionless EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberDimensionlessRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumberDimensionless=ruleNumberDimensionless();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumberDimensionless; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumberDimensionless"


    // $ANTLR start "ruleNumberDimensionless"
    // InternalOptGrammar.g:6870:1: ruleNumberDimensionless returns [EObject current=null] : ( (lv_value_0_0= RULE_INT ) ) ;
    public final EObject ruleNumberDimensionless() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:6876:2: ( ( (lv_value_0_0= RULE_INT ) ) )
            // InternalOptGrammar.g:6877:2: ( (lv_value_0_0= RULE_INT ) )
            {
            // InternalOptGrammar.g:6877:2: ( (lv_value_0_0= RULE_INT ) )
            // InternalOptGrammar.g:6878:3: (lv_value_0_0= RULE_INT )
            {
            // InternalOptGrammar.g:6878:3: (lv_value_0_0= RULE_INT )
            // InternalOptGrammar.g:6879:4: lv_value_0_0= RULE_INT
            {
            lv_value_0_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getNumberDimensionlessAccess().getValueINTTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getNumberDimensionlessRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"org.eclipse.xtext.common.Terminals.INT");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumberDimensionless"


    // $ANTLR start "entryRuleEther"
    // InternalOptGrammar.g:6898:1: entryRuleEther returns [EObject current=null] : iv_ruleEther= ruleEther EOF ;
    public final EObject entryRuleEther() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEther = null;


        try {
            // InternalOptGrammar.g:6898:46: (iv_ruleEther= ruleEther EOF )
            // InternalOptGrammar.g:6899:2: iv_ruleEther= ruleEther EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEtherRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEther=ruleEther();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEther; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEther"


    // $ANTLR start "ruleEther"
    // InternalOptGrammar.g:6905:1: ruleEther returns [EObject current=null] : ( ( (lv_value_0_0= RULE_INT ) ) ( (lv_ether_1_0= ruleEtherSubDenominationEnum ) ) ) ;
    public final EObject ruleEther() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;
        Enumerator lv_ether_1_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:6911:2: ( ( ( (lv_value_0_0= RULE_INT ) ) ( (lv_ether_1_0= ruleEtherSubDenominationEnum ) ) ) )
            // InternalOptGrammar.g:6912:2: ( ( (lv_value_0_0= RULE_INT ) ) ( (lv_ether_1_0= ruleEtherSubDenominationEnum ) ) )
            {
            // InternalOptGrammar.g:6912:2: ( ( (lv_value_0_0= RULE_INT ) ) ( (lv_ether_1_0= ruleEtherSubDenominationEnum ) ) )
            // InternalOptGrammar.g:6913:3: ( (lv_value_0_0= RULE_INT ) ) ( (lv_ether_1_0= ruleEtherSubDenominationEnum ) )
            {
            // InternalOptGrammar.g:6913:3: ( (lv_value_0_0= RULE_INT ) )
            // InternalOptGrammar.g:6914:4: (lv_value_0_0= RULE_INT )
            {
            // InternalOptGrammar.g:6914:4: (lv_value_0_0= RULE_INT )
            // InternalOptGrammar.g:6915:5: lv_value_0_0= RULE_INT
            {
            lv_value_0_0=(Token)match(input,RULE_INT,FOLLOW_84); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_value_0_0, grammarAccess.getEtherAccess().getValueINTTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEtherRule());
              					}
              					setWithLastConsumed(
              						current,
              						"value",
              						lv_value_0_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            // InternalOptGrammar.g:6931:3: ( (lv_ether_1_0= ruleEtherSubDenominationEnum ) )
            // InternalOptGrammar.g:6932:4: (lv_ether_1_0= ruleEtherSubDenominationEnum )
            {
            // InternalOptGrammar.g:6932:4: (lv_ether_1_0= ruleEtherSubDenominationEnum )
            // InternalOptGrammar.g:6933:5: lv_ether_1_0= ruleEtherSubDenominationEnum
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEtherAccess().getEtherEtherSubDenominationEnumEnumRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ether_1_0=ruleEtherSubDenominationEnum();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEtherRule());
              					}
              					set(
              						current,
              						"ether",
              						lv_ether_1_0,
              						"org.unicam.myGrammar.OptGrammar.EtherSubDenominationEnum");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEther"


    // $ANTLR start "entryRuleTime"
    // InternalOptGrammar.g:6954:1: entryRuleTime returns [EObject current=null] : iv_ruleTime= ruleTime EOF ;
    public final EObject entryRuleTime() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTime = null;


        try {
            // InternalOptGrammar.g:6954:45: (iv_ruleTime= ruleTime EOF )
            // InternalOptGrammar.g:6955:2: iv_ruleTime= ruleTime EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTimeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTime=ruleTime();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTime; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTime"


    // $ANTLR start "ruleTime"
    // InternalOptGrammar.g:6961:1: ruleTime returns [EObject current=null] : ( ( (lv_value_0_0= RULE_INT ) ) ( (lv_time_1_0= ruleTimeSubdenominationEnum ) ) ) ;
    public final EObject ruleTime() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;
        Enumerator lv_time_1_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:6967:2: ( ( ( (lv_value_0_0= RULE_INT ) ) ( (lv_time_1_0= ruleTimeSubdenominationEnum ) ) ) )
            // InternalOptGrammar.g:6968:2: ( ( (lv_value_0_0= RULE_INT ) ) ( (lv_time_1_0= ruleTimeSubdenominationEnum ) ) )
            {
            // InternalOptGrammar.g:6968:2: ( ( (lv_value_0_0= RULE_INT ) ) ( (lv_time_1_0= ruleTimeSubdenominationEnum ) ) )
            // InternalOptGrammar.g:6969:3: ( (lv_value_0_0= RULE_INT ) ) ( (lv_time_1_0= ruleTimeSubdenominationEnum ) )
            {
            // InternalOptGrammar.g:6969:3: ( (lv_value_0_0= RULE_INT ) )
            // InternalOptGrammar.g:6970:4: (lv_value_0_0= RULE_INT )
            {
            // InternalOptGrammar.g:6970:4: (lv_value_0_0= RULE_INT )
            // InternalOptGrammar.g:6971:5: lv_value_0_0= RULE_INT
            {
            lv_value_0_0=(Token)match(input,RULE_INT,FOLLOW_85); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_value_0_0, grammarAccess.getTimeAccess().getValueINTTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTimeRule());
              					}
              					setWithLastConsumed(
              						current,
              						"value",
              						lv_value_0_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            // InternalOptGrammar.g:6987:3: ( (lv_time_1_0= ruleTimeSubdenominationEnum ) )
            // InternalOptGrammar.g:6988:4: (lv_time_1_0= ruleTimeSubdenominationEnum )
            {
            // InternalOptGrammar.g:6988:4: (lv_time_1_0= ruleTimeSubdenominationEnum )
            // InternalOptGrammar.g:6989:5: lv_time_1_0= ruleTimeSubdenominationEnum
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTimeAccess().getTimeTimeSubdenominationEnumEnumRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_time_1_0=ruleTimeSubdenominationEnum();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTimeRule());
              					}
              					set(
              						current,
              						"time",
              						lv_time_1_0,
              						"org.unicam.myGrammar.OptGrammar.TimeSubdenominationEnum");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTime"


    // $ANTLR start "entryRuleStringLiteral"
    // InternalOptGrammar.g:7010:1: entryRuleStringLiteral returns [EObject current=null] : iv_ruleStringLiteral= ruleStringLiteral EOF ;
    public final EObject entryRuleStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringLiteral = null;


        try {
            // InternalOptGrammar.g:7010:54: (iv_ruleStringLiteral= ruleStringLiteral EOF )
            // InternalOptGrammar.g:7011:2: iv_ruleStringLiteral= ruleStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStringLiteral=ruleStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringLiteral"


    // $ANTLR start "ruleStringLiteral"
    // InternalOptGrammar.g:7017:1: ruleStringLiteral returns [EObject current=null] : ( (lv_value_0_0= RULE_STRING ) ) ;
    public final EObject ruleStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:7023:2: ( ( (lv_value_0_0= RULE_STRING ) ) )
            // InternalOptGrammar.g:7024:2: ( (lv_value_0_0= RULE_STRING ) )
            {
            // InternalOptGrammar.g:7024:2: ( (lv_value_0_0= RULE_STRING ) )
            // InternalOptGrammar.g:7025:3: (lv_value_0_0= RULE_STRING )
            {
            // InternalOptGrammar.g:7025:3: (lv_value_0_0= RULE_STRING )
            // InternalOptGrammar.g:7026:4: lv_value_0_0= RULE_STRING
            {
            lv_value_0_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getStringLiteralRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"org.eclipse.xtext.common.Terminals.STRING");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringLiteral"


    // $ANTLR start "entryRuleIntLiteral"
    // InternalOptGrammar.g:7045:1: entryRuleIntLiteral returns [EObject current=null] : iv_ruleIntLiteral= ruleIntLiteral EOF ;
    public final EObject entryRuleIntLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntLiteral = null;


        try {
            // InternalOptGrammar.g:7045:51: (iv_ruleIntLiteral= ruleIntLiteral EOF )
            // InternalOptGrammar.g:7046:2: iv_ruleIntLiteral= ruleIntLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntLiteral=ruleIntLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntLiteral"


    // $ANTLR start "ruleIntLiteral"
    // InternalOptGrammar.g:7052:1: ruleIntLiteral returns [EObject current=null] : ( (lv_value_0_0= RULE_INT ) ) ;
    public final EObject ruleIntLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:7058:2: ( ( (lv_value_0_0= RULE_INT ) ) )
            // InternalOptGrammar.g:7059:2: ( (lv_value_0_0= RULE_INT ) )
            {
            // InternalOptGrammar.g:7059:2: ( (lv_value_0_0= RULE_INT ) )
            // InternalOptGrammar.g:7060:3: (lv_value_0_0= RULE_INT )
            {
            // InternalOptGrammar.g:7060:3: (lv_value_0_0= RULE_INT )
            // InternalOptGrammar.g:7061:4: lv_value_0_0= RULE_INT
            {
            lv_value_0_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getIntLiteralRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"org.eclipse.xtext.common.Terminals.INT");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntLiteral"


    // $ANTLR start "entryRuleHexLiteral"
    // InternalOptGrammar.g:7080:1: entryRuleHexLiteral returns [EObject current=null] : iv_ruleHexLiteral= ruleHexLiteral EOF ;
    public final EObject entryRuleHexLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHexLiteral = null;


        try {
            // InternalOptGrammar.g:7080:51: (iv_ruleHexLiteral= ruleHexLiteral EOF )
            // InternalOptGrammar.g:7081:2: iv_ruleHexLiteral= ruleHexLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHexLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHexLiteral=ruleHexLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHexLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHexLiteral"


    // $ANTLR start "ruleHexLiteral"
    // InternalOptGrammar.g:7087:1: ruleHexLiteral returns [EObject current=null] : ( (lv_value_0_0= RULE_HEX ) ) ;
    public final EObject ruleHexLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:7093:2: ( ( (lv_value_0_0= RULE_HEX ) ) )
            // InternalOptGrammar.g:7094:2: ( (lv_value_0_0= RULE_HEX ) )
            {
            // InternalOptGrammar.g:7094:2: ( (lv_value_0_0= RULE_HEX ) )
            // InternalOptGrammar.g:7095:3: (lv_value_0_0= RULE_HEX )
            {
            // InternalOptGrammar.g:7095:3: (lv_value_0_0= RULE_HEX )
            // InternalOptGrammar.g:7096:4: lv_value_0_0= RULE_HEX
            {
            lv_value_0_0=(Token)match(input,RULE_HEX,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getHexLiteralAccess().getValueHEXTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getHexLiteralRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"org.unicam.myGrammar.OptGrammar.HEX");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHexLiteral"


    // $ANTLR start "entryRuleDecimalLiteral"
    // InternalOptGrammar.g:7115:1: entryRuleDecimalLiteral returns [EObject current=null] : iv_ruleDecimalLiteral= ruleDecimalLiteral EOF ;
    public final EObject entryRuleDecimalLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDecimalLiteral = null;


        try {
            // InternalOptGrammar.g:7115:55: (iv_ruleDecimalLiteral= ruleDecimalLiteral EOF )
            // InternalOptGrammar.g:7116:2: iv_ruleDecimalLiteral= ruleDecimalLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDecimalLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDecimalLiteral=ruleDecimalLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDecimalLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDecimalLiteral"


    // $ANTLR start "ruleDecimalLiteral"
    // InternalOptGrammar.g:7122:1: ruleDecimalLiteral returns [EObject current=null] : ( (lv_value_0_0= RULE_DECIMAL ) ) ;
    public final EObject ruleDecimalLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:7128:2: ( ( (lv_value_0_0= RULE_DECIMAL ) ) )
            // InternalOptGrammar.g:7129:2: ( (lv_value_0_0= RULE_DECIMAL ) )
            {
            // InternalOptGrammar.g:7129:2: ( (lv_value_0_0= RULE_DECIMAL ) )
            // InternalOptGrammar.g:7130:3: (lv_value_0_0= RULE_DECIMAL )
            {
            // InternalOptGrammar.g:7130:3: (lv_value_0_0= RULE_DECIMAL )
            // InternalOptGrammar.g:7131:4: lv_value_0_0= RULE_DECIMAL
            {
            lv_value_0_0=(Token)match(input,RULE_DECIMAL,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getDecimalLiteralAccess().getValueDECIMALTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getDecimalLiteralRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"org.unicam.myGrammar.OptGrammar.DECIMAL");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDecimalLiteral"


    // $ANTLR start "entryRuleSpecialVariables"
    // InternalOptGrammar.g:7150:1: entryRuleSpecialVariables returns [EObject current=null] : iv_ruleSpecialVariables= ruleSpecialVariables EOF ;
    public final EObject entryRuleSpecialVariables() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSpecialVariables = null;


        try {
            // InternalOptGrammar.g:7150:57: (iv_ruleSpecialVariables= ruleSpecialVariables EOF )
            // InternalOptGrammar.g:7151:2: iv_ruleSpecialVariables= ruleSpecialVariables EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSpecialVariablesRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSpecialVariables=ruleSpecialVariables();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSpecialVariables; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSpecialVariables"


    // $ANTLR start "ruleSpecialVariables"
    // InternalOptGrammar.g:7157:1: ruleSpecialVariables returns [EObject current=null] : ( ( (lv_type_0_0= ruleSpecialVariablesTypeEnum ) ) otherlv_1= '.' ( (lv_field_2_0= RULE_ID ) ) ( (lv_qualifiers_3_0= ruleQualifier ) )* ) ;
    public final EObject ruleSpecialVariables() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_field_2_0=null;
        EObject lv_type_0_0 = null;

        EObject lv_qualifiers_3_0 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:7163:2: ( ( ( (lv_type_0_0= ruleSpecialVariablesTypeEnum ) ) otherlv_1= '.' ( (lv_field_2_0= RULE_ID ) ) ( (lv_qualifiers_3_0= ruleQualifier ) )* ) )
            // InternalOptGrammar.g:7164:2: ( ( (lv_type_0_0= ruleSpecialVariablesTypeEnum ) ) otherlv_1= '.' ( (lv_field_2_0= RULE_ID ) ) ( (lv_qualifiers_3_0= ruleQualifier ) )* )
            {
            // InternalOptGrammar.g:7164:2: ( ( (lv_type_0_0= ruleSpecialVariablesTypeEnum ) ) otherlv_1= '.' ( (lv_field_2_0= RULE_ID ) ) ( (lv_qualifiers_3_0= ruleQualifier ) )* )
            // InternalOptGrammar.g:7165:3: ( (lv_type_0_0= ruleSpecialVariablesTypeEnum ) ) otherlv_1= '.' ( (lv_field_2_0= RULE_ID ) ) ( (lv_qualifiers_3_0= ruleQualifier ) )*
            {
            // InternalOptGrammar.g:7165:3: ( (lv_type_0_0= ruleSpecialVariablesTypeEnum ) )
            // InternalOptGrammar.g:7166:4: (lv_type_0_0= ruleSpecialVariablesTypeEnum )
            {
            // InternalOptGrammar.g:7166:4: (lv_type_0_0= ruleSpecialVariablesTypeEnum )
            // InternalOptGrammar.g:7167:5: lv_type_0_0= ruleSpecialVariablesTypeEnum
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSpecialVariablesAccess().getTypeSpecialVariablesTypeEnumParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_28);
            lv_type_0_0=ruleSpecialVariablesTypeEnum();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSpecialVariablesRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_0_0,
              						"org.unicam.myGrammar.OptGrammar.SpecialVariablesTypeEnum");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,32,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSpecialVariablesAccess().getFullStopKeyword_1());
              		
            }
            // InternalOptGrammar.g:7188:3: ( (lv_field_2_0= RULE_ID ) )
            // InternalOptGrammar.g:7189:4: (lv_field_2_0= RULE_ID )
            {
            // InternalOptGrammar.g:7189:4: (lv_field_2_0= RULE_ID )
            // InternalOptGrammar.g:7190:5: lv_field_2_0= RULE_ID
            {
            lv_field_2_0=(Token)match(input,RULE_ID,FOLLOW_66); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_field_2_0, grammarAccess.getSpecialVariablesAccess().getFieldIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSpecialVariablesRule());
              					}
              					setWithLastConsumed(
              						current,
              						"field",
              						lv_field_2_0,
              						"org.eclipse.xtext.common.Terminals.ID");
              				
            }

            }


            }

            // InternalOptGrammar.g:7206:3: ( (lv_qualifiers_3_0= ruleQualifier ) )*
            loop126:
            do {
                int alt126=2;
                int LA126_0 = input.LA(1);

                if ( (LA126_0==25||LA126_0==32||LA126_0==34) ) {
                    alt126=1;
                }


                switch (alt126) {
            	case 1 :
            	    // InternalOptGrammar.g:7207:4: (lv_qualifiers_3_0= ruleQualifier )
            	    {
            	    // InternalOptGrammar.g:7207:4: (lv_qualifiers_3_0= ruleQualifier )
            	    // InternalOptGrammar.g:7208:5: lv_qualifiers_3_0= ruleQualifier
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSpecialVariablesAccess().getQualifiersQualifierParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_66);
            	    lv_qualifiers_3_0=ruleQualifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSpecialVariablesRule());
            	      					}
            	      					add(
            	      						current,
            	      						"qualifiers",
            	      						lv_qualifiers_3_0,
            	      						"org.unicam.myGrammar.OptGrammar.Qualifier");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop126;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSpecialVariables"


    // $ANTLR start "entryRuleElementaryTypeNameEnum"
    // InternalOptGrammar.g:7229:1: entryRuleElementaryTypeNameEnum returns [EObject current=null] : iv_ruleElementaryTypeNameEnum= ruleElementaryTypeNameEnum EOF ;
    public final EObject entryRuleElementaryTypeNameEnum() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElementaryTypeNameEnum = null;


        try {
            // InternalOptGrammar.g:7229:63: (iv_ruleElementaryTypeNameEnum= ruleElementaryTypeNameEnum EOF )
            // InternalOptGrammar.g:7230:2: iv_ruleElementaryTypeNameEnum= ruleElementaryTypeNameEnum EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementaryTypeNameEnumRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElementaryTypeNameEnum=ruleElementaryTypeNameEnum();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElementaryTypeNameEnum; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElementaryTypeNameEnum"


    // $ANTLR start "ruleElementaryTypeNameEnum"
    // InternalOptGrammar.g:7236:1: ruleElementaryTypeNameEnum returns [EObject current=null] : ( ( (lv_type_0_1= 'int' | lv_type_0_2= 'int16' | lv_type_0_3= 'int24' | lv_type_0_4= 'int32' | lv_type_0_5= 'int40' | lv_type_0_6= 'int48' | lv_type_0_7= 'int56' | lv_type_0_8= 'int64' | lv_type_0_9= 'int72' | lv_type_0_10= 'int80' | lv_type_0_11= 'int88' | lv_type_0_12= 'int96' | lv_type_0_13= 'int104' | lv_type_0_14= 'int112' | lv_type_0_15= 'int120' | lv_type_0_16= 'int128' | lv_type_0_17= 'int136' | lv_type_0_18= 'int144' | lv_type_0_19= 'int152' | lv_type_0_20= 'int160' | lv_type_0_21= 'int168' | lv_type_0_22= 'int178' | lv_type_0_23= 'int184' | lv_type_0_24= 'int192' | lv_type_0_25= 'int200' | lv_type_0_26= 'int208' | lv_type_0_27= 'int216' | lv_type_0_28= 'int224' | lv_type_0_29= 'int232' | lv_type_0_30= 'int240' | lv_type_0_31= 'int248' | lv_type_0_32= 'int256' | lv_type_0_33= 'uint' | lv_type_0_34= 'uint8' | lv_type_0_35= 'uint16' | lv_type_0_36= 'uint24' | lv_type_0_37= 'uint32' | lv_type_0_38= 'uint40' | lv_type_0_39= 'uint48' | lv_type_0_40= 'uint56' | lv_type_0_41= 'uint64' | lv_type_0_42= 'uint72' | lv_type_0_43= 'uint80' | lv_type_0_44= 'uint88' | lv_type_0_45= 'uint96' | lv_type_0_46= 'uint104' | lv_type_0_47= 'uint112' | lv_type_0_48= 'uint120' | lv_type_0_49= 'uint128' | lv_type_0_50= 'uint136' | lv_type_0_51= 'uint144' | lv_type_0_52= 'uint152' | lv_type_0_53= 'uint160' | lv_type_0_54= 'uint168' | lv_type_0_55= 'uint178' | lv_type_0_56= 'uint184' | lv_type_0_57= 'uint192' | lv_type_0_58= 'uint200' | lv_type_0_59= 'uint208' | lv_type_0_60= 'uint216' | lv_type_0_61= 'uint224' | lv_type_0_62= 'uint232' | lv_type_0_63= 'uint240' | lv_type_0_64= 'uint248' | lv_type_0_65= 'uint256' | lv_type_0_66= 'byte' | lv_type_0_67= 'bytes' | lv_type_0_68= 'bytes1' | lv_type_0_69= 'bytes2' | lv_type_0_70= 'bytes3' | lv_type_0_71= 'bytes4' | lv_type_0_72= 'bytes5' | lv_type_0_73= 'bytes6' | lv_type_0_74= 'bytes7' | lv_type_0_75= 'bytes8' | lv_type_0_76= 'bytes9' | lv_type_0_77= 'bytes10' | lv_type_0_78= 'bytes11' | lv_type_0_79= 'bytes12' | lv_type_0_80= 'bytes13' | lv_type_0_81= 'bytes14' | lv_type_0_82= 'bytes15' | lv_type_0_83= 'bytes16' | lv_type_0_84= 'bytes17' | lv_type_0_85= 'bytes18' | lv_type_0_86= 'bytes19' | lv_type_0_87= 'bytes20' | lv_type_0_88= 'bytes21' | lv_type_0_89= 'bytes22' | lv_type_0_90= 'bytes23' | lv_type_0_91= 'bytes24' | lv_type_0_92= 'bytes25' | lv_type_0_93= 'bytes26' | lv_type_0_94= 'bytes27' | lv_type_0_95= 'bytes28' | lv_type_0_96= 'bytes29' | lv_type_0_97= 'bytes30' | lv_type_0_98= 'bytes31' | lv_type_0_99= 'bytes32' | lv_type_0_100= 'string' | lv_type_0_101= 'address' | lv_type_0_102= 'bool' | lv_type_0_103= 'real' | lv_type_0_104= 'ureal' ) ) ) ;
    public final EObject ruleElementaryTypeNameEnum() throws RecognitionException {
        EObject current = null;

        Token lv_type_0_1=null;
        Token lv_type_0_2=null;
        Token lv_type_0_3=null;
        Token lv_type_0_4=null;
        Token lv_type_0_5=null;
        Token lv_type_0_6=null;
        Token lv_type_0_7=null;
        Token lv_type_0_8=null;
        Token lv_type_0_9=null;
        Token lv_type_0_10=null;
        Token lv_type_0_11=null;
        Token lv_type_0_12=null;
        Token lv_type_0_13=null;
        Token lv_type_0_14=null;
        Token lv_type_0_15=null;
        Token lv_type_0_16=null;
        Token lv_type_0_17=null;
        Token lv_type_0_18=null;
        Token lv_type_0_19=null;
        Token lv_type_0_20=null;
        Token lv_type_0_21=null;
        Token lv_type_0_22=null;
        Token lv_type_0_23=null;
        Token lv_type_0_24=null;
        Token lv_type_0_25=null;
        Token lv_type_0_26=null;
        Token lv_type_0_27=null;
        Token lv_type_0_28=null;
        Token lv_type_0_29=null;
        Token lv_type_0_30=null;
        Token lv_type_0_31=null;
        Token lv_type_0_32=null;
        Token lv_type_0_33=null;
        Token lv_type_0_34=null;
        Token lv_type_0_35=null;
        Token lv_type_0_36=null;
        Token lv_type_0_37=null;
        Token lv_type_0_38=null;
        Token lv_type_0_39=null;
        Token lv_type_0_40=null;
        Token lv_type_0_41=null;
        Token lv_type_0_42=null;
        Token lv_type_0_43=null;
        Token lv_type_0_44=null;
        Token lv_type_0_45=null;
        Token lv_type_0_46=null;
        Token lv_type_0_47=null;
        Token lv_type_0_48=null;
        Token lv_type_0_49=null;
        Token lv_type_0_50=null;
        Token lv_type_0_51=null;
        Token lv_type_0_52=null;
        Token lv_type_0_53=null;
        Token lv_type_0_54=null;
        Token lv_type_0_55=null;
        Token lv_type_0_56=null;
        Token lv_type_0_57=null;
        Token lv_type_0_58=null;
        Token lv_type_0_59=null;
        Token lv_type_0_60=null;
        Token lv_type_0_61=null;
        Token lv_type_0_62=null;
        Token lv_type_0_63=null;
        Token lv_type_0_64=null;
        Token lv_type_0_65=null;
        Token lv_type_0_66=null;
        Token lv_type_0_67=null;
        Token lv_type_0_68=null;
        Token lv_type_0_69=null;
        Token lv_type_0_70=null;
        Token lv_type_0_71=null;
        Token lv_type_0_72=null;
        Token lv_type_0_73=null;
        Token lv_type_0_74=null;
        Token lv_type_0_75=null;
        Token lv_type_0_76=null;
        Token lv_type_0_77=null;
        Token lv_type_0_78=null;
        Token lv_type_0_79=null;
        Token lv_type_0_80=null;
        Token lv_type_0_81=null;
        Token lv_type_0_82=null;
        Token lv_type_0_83=null;
        Token lv_type_0_84=null;
        Token lv_type_0_85=null;
        Token lv_type_0_86=null;
        Token lv_type_0_87=null;
        Token lv_type_0_88=null;
        Token lv_type_0_89=null;
        Token lv_type_0_90=null;
        Token lv_type_0_91=null;
        Token lv_type_0_92=null;
        Token lv_type_0_93=null;
        Token lv_type_0_94=null;
        Token lv_type_0_95=null;
        Token lv_type_0_96=null;
        Token lv_type_0_97=null;
        Token lv_type_0_98=null;
        Token lv_type_0_99=null;
        Token lv_type_0_100=null;
        Token lv_type_0_101=null;
        Token lv_type_0_102=null;
        Token lv_type_0_103=null;
        Token lv_type_0_104=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:7242:2: ( ( ( (lv_type_0_1= 'int' | lv_type_0_2= 'int16' | lv_type_0_3= 'int24' | lv_type_0_4= 'int32' | lv_type_0_5= 'int40' | lv_type_0_6= 'int48' | lv_type_0_7= 'int56' | lv_type_0_8= 'int64' | lv_type_0_9= 'int72' | lv_type_0_10= 'int80' | lv_type_0_11= 'int88' | lv_type_0_12= 'int96' | lv_type_0_13= 'int104' | lv_type_0_14= 'int112' | lv_type_0_15= 'int120' | lv_type_0_16= 'int128' | lv_type_0_17= 'int136' | lv_type_0_18= 'int144' | lv_type_0_19= 'int152' | lv_type_0_20= 'int160' | lv_type_0_21= 'int168' | lv_type_0_22= 'int178' | lv_type_0_23= 'int184' | lv_type_0_24= 'int192' | lv_type_0_25= 'int200' | lv_type_0_26= 'int208' | lv_type_0_27= 'int216' | lv_type_0_28= 'int224' | lv_type_0_29= 'int232' | lv_type_0_30= 'int240' | lv_type_0_31= 'int248' | lv_type_0_32= 'int256' | lv_type_0_33= 'uint' | lv_type_0_34= 'uint8' | lv_type_0_35= 'uint16' | lv_type_0_36= 'uint24' | lv_type_0_37= 'uint32' | lv_type_0_38= 'uint40' | lv_type_0_39= 'uint48' | lv_type_0_40= 'uint56' | lv_type_0_41= 'uint64' | lv_type_0_42= 'uint72' | lv_type_0_43= 'uint80' | lv_type_0_44= 'uint88' | lv_type_0_45= 'uint96' | lv_type_0_46= 'uint104' | lv_type_0_47= 'uint112' | lv_type_0_48= 'uint120' | lv_type_0_49= 'uint128' | lv_type_0_50= 'uint136' | lv_type_0_51= 'uint144' | lv_type_0_52= 'uint152' | lv_type_0_53= 'uint160' | lv_type_0_54= 'uint168' | lv_type_0_55= 'uint178' | lv_type_0_56= 'uint184' | lv_type_0_57= 'uint192' | lv_type_0_58= 'uint200' | lv_type_0_59= 'uint208' | lv_type_0_60= 'uint216' | lv_type_0_61= 'uint224' | lv_type_0_62= 'uint232' | lv_type_0_63= 'uint240' | lv_type_0_64= 'uint248' | lv_type_0_65= 'uint256' | lv_type_0_66= 'byte' | lv_type_0_67= 'bytes' | lv_type_0_68= 'bytes1' | lv_type_0_69= 'bytes2' | lv_type_0_70= 'bytes3' | lv_type_0_71= 'bytes4' | lv_type_0_72= 'bytes5' | lv_type_0_73= 'bytes6' | lv_type_0_74= 'bytes7' | lv_type_0_75= 'bytes8' | lv_type_0_76= 'bytes9' | lv_type_0_77= 'bytes10' | lv_type_0_78= 'bytes11' | lv_type_0_79= 'bytes12' | lv_type_0_80= 'bytes13' | lv_type_0_81= 'bytes14' | lv_type_0_82= 'bytes15' | lv_type_0_83= 'bytes16' | lv_type_0_84= 'bytes17' | lv_type_0_85= 'bytes18' | lv_type_0_86= 'bytes19' | lv_type_0_87= 'bytes20' | lv_type_0_88= 'bytes21' | lv_type_0_89= 'bytes22' | lv_type_0_90= 'bytes23' | lv_type_0_91= 'bytes24' | lv_type_0_92= 'bytes25' | lv_type_0_93= 'bytes26' | lv_type_0_94= 'bytes27' | lv_type_0_95= 'bytes28' | lv_type_0_96= 'bytes29' | lv_type_0_97= 'bytes30' | lv_type_0_98= 'bytes31' | lv_type_0_99= 'bytes32' | lv_type_0_100= 'string' | lv_type_0_101= 'address' | lv_type_0_102= 'bool' | lv_type_0_103= 'real' | lv_type_0_104= 'ureal' ) ) ) )
            // InternalOptGrammar.g:7243:2: ( ( (lv_type_0_1= 'int' | lv_type_0_2= 'int16' | lv_type_0_3= 'int24' | lv_type_0_4= 'int32' | lv_type_0_5= 'int40' | lv_type_0_6= 'int48' | lv_type_0_7= 'int56' | lv_type_0_8= 'int64' | lv_type_0_9= 'int72' | lv_type_0_10= 'int80' | lv_type_0_11= 'int88' | lv_type_0_12= 'int96' | lv_type_0_13= 'int104' | lv_type_0_14= 'int112' | lv_type_0_15= 'int120' | lv_type_0_16= 'int128' | lv_type_0_17= 'int136' | lv_type_0_18= 'int144' | lv_type_0_19= 'int152' | lv_type_0_20= 'int160' | lv_type_0_21= 'int168' | lv_type_0_22= 'int178' | lv_type_0_23= 'int184' | lv_type_0_24= 'int192' | lv_type_0_25= 'int200' | lv_type_0_26= 'int208' | lv_type_0_27= 'int216' | lv_type_0_28= 'int224' | lv_type_0_29= 'int232' | lv_type_0_30= 'int240' | lv_type_0_31= 'int248' | lv_type_0_32= 'int256' | lv_type_0_33= 'uint' | lv_type_0_34= 'uint8' | lv_type_0_35= 'uint16' | lv_type_0_36= 'uint24' | lv_type_0_37= 'uint32' | lv_type_0_38= 'uint40' | lv_type_0_39= 'uint48' | lv_type_0_40= 'uint56' | lv_type_0_41= 'uint64' | lv_type_0_42= 'uint72' | lv_type_0_43= 'uint80' | lv_type_0_44= 'uint88' | lv_type_0_45= 'uint96' | lv_type_0_46= 'uint104' | lv_type_0_47= 'uint112' | lv_type_0_48= 'uint120' | lv_type_0_49= 'uint128' | lv_type_0_50= 'uint136' | lv_type_0_51= 'uint144' | lv_type_0_52= 'uint152' | lv_type_0_53= 'uint160' | lv_type_0_54= 'uint168' | lv_type_0_55= 'uint178' | lv_type_0_56= 'uint184' | lv_type_0_57= 'uint192' | lv_type_0_58= 'uint200' | lv_type_0_59= 'uint208' | lv_type_0_60= 'uint216' | lv_type_0_61= 'uint224' | lv_type_0_62= 'uint232' | lv_type_0_63= 'uint240' | lv_type_0_64= 'uint248' | lv_type_0_65= 'uint256' | lv_type_0_66= 'byte' | lv_type_0_67= 'bytes' | lv_type_0_68= 'bytes1' | lv_type_0_69= 'bytes2' | lv_type_0_70= 'bytes3' | lv_type_0_71= 'bytes4' | lv_type_0_72= 'bytes5' | lv_type_0_73= 'bytes6' | lv_type_0_74= 'bytes7' | lv_type_0_75= 'bytes8' | lv_type_0_76= 'bytes9' | lv_type_0_77= 'bytes10' | lv_type_0_78= 'bytes11' | lv_type_0_79= 'bytes12' | lv_type_0_80= 'bytes13' | lv_type_0_81= 'bytes14' | lv_type_0_82= 'bytes15' | lv_type_0_83= 'bytes16' | lv_type_0_84= 'bytes17' | lv_type_0_85= 'bytes18' | lv_type_0_86= 'bytes19' | lv_type_0_87= 'bytes20' | lv_type_0_88= 'bytes21' | lv_type_0_89= 'bytes22' | lv_type_0_90= 'bytes23' | lv_type_0_91= 'bytes24' | lv_type_0_92= 'bytes25' | lv_type_0_93= 'bytes26' | lv_type_0_94= 'bytes27' | lv_type_0_95= 'bytes28' | lv_type_0_96= 'bytes29' | lv_type_0_97= 'bytes30' | lv_type_0_98= 'bytes31' | lv_type_0_99= 'bytes32' | lv_type_0_100= 'string' | lv_type_0_101= 'address' | lv_type_0_102= 'bool' | lv_type_0_103= 'real' | lv_type_0_104= 'ureal' ) ) )
            {
            // InternalOptGrammar.g:7243:2: ( ( (lv_type_0_1= 'int' | lv_type_0_2= 'int16' | lv_type_0_3= 'int24' | lv_type_0_4= 'int32' | lv_type_0_5= 'int40' | lv_type_0_6= 'int48' | lv_type_0_7= 'int56' | lv_type_0_8= 'int64' | lv_type_0_9= 'int72' | lv_type_0_10= 'int80' | lv_type_0_11= 'int88' | lv_type_0_12= 'int96' | lv_type_0_13= 'int104' | lv_type_0_14= 'int112' | lv_type_0_15= 'int120' | lv_type_0_16= 'int128' | lv_type_0_17= 'int136' | lv_type_0_18= 'int144' | lv_type_0_19= 'int152' | lv_type_0_20= 'int160' | lv_type_0_21= 'int168' | lv_type_0_22= 'int178' | lv_type_0_23= 'int184' | lv_type_0_24= 'int192' | lv_type_0_25= 'int200' | lv_type_0_26= 'int208' | lv_type_0_27= 'int216' | lv_type_0_28= 'int224' | lv_type_0_29= 'int232' | lv_type_0_30= 'int240' | lv_type_0_31= 'int248' | lv_type_0_32= 'int256' | lv_type_0_33= 'uint' | lv_type_0_34= 'uint8' | lv_type_0_35= 'uint16' | lv_type_0_36= 'uint24' | lv_type_0_37= 'uint32' | lv_type_0_38= 'uint40' | lv_type_0_39= 'uint48' | lv_type_0_40= 'uint56' | lv_type_0_41= 'uint64' | lv_type_0_42= 'uint72' | lv_type_0_43= 'uint80' | lv_type_0_44= 'uint88' | lv_type_0_45= 'uint96' | lv_type_0_46= 'uint104' | lv_type_0_47= 'uint112' | lv_type_0_48= 'uint120' | lv_type_0_49= 'uint128' | lv_type_0_50= 'uint136' | lv_type_0_51= 'uint144' | lv_type_0_52= 'uint152' | lv_type_0_53= 'uint160' | lv_type_0_54= 'uint168' | lv_type_0_55= 'uint178' | lv_type_0_56= 'uint184' | lv_type_0_57= 'uint192' | lv_type_0_58= 'uint200' | lv_type_0_59= 'uint208' | lv_type_0_60= 'uint216' | lv_type_0_61= 'uint224' | lv_type_0_62= 'uint232' | lv_type_0_63= 'uint240' | lv_type_0_64= 'uint248' | lv_type_0_65= 'uint256' | lv_type_0_66= 'byte' | lv_type_0_67= 'bytes' | lv_type_0_68= 'bytes1' | lv_type_0_69= 'bytes2' | lv_type_0_70= 'bytes3' | lv_type_0_71= 'bytes4' | lv_type_0_72= 'bytes5' | lv_type_0_73= 'bytes6' | lv_type_0_74= 'bytes7' | lv_type_0_75= 'bytes8' | lv_type_0_76= 'bytes9' | lv_type_0_77= 'bytes10' | lv_type_0_78= 'bytes11' | lv_type_0_79= 'bytes12' | lv_type_0_80= 'bytes13' | lv_type_0_81= 'bytes14' | lv_type_0_82= 'bytes15' | lv_type_0_83= 'bytes16' | lv_type_0_84= 'bytes17' | lv_type_0_85= 'bytes18' | lv_type_0_86= 'bytes19' | lv_type_0_87= 'bytes20' | lv_type_0_88= 'bytes21' | lv_type_0_89= 'bytes22' | lv_type_0_90= 'bytes23' | lv_type_0_91= 'bytes24' | lv_type_0_92= 'bytes25' | lv_type_0_93= 'bytes26' | lv_type_0_94= 'bytes27' | lv_type_0_95= 'bytes28' | lv_type_0_96= 'bytes29' | lv_type_0_97= 'bytes30' | lv_type_0_98= 'bytes31' | lv_type_0_99= 'bytes32' | lv_type_0_100= 'string' | lv_type_0_101= 'address' | lv_type_0_102= 'bool' | lv_type_0_103= 'real' | lv_type_0_104= 'ureal' ) ) )
            // InternalOptGrammar.g:7244:3: ( (lv_type_0_1= 'int' | lv_type_0_2= 'int16' | lv_type_0_3= 'int24' | lv_type_0_4= 'int32' | lv_type_0_5= 'int40' | lv_type_0_6= 'int48' | lv_type_0_7= 'int56' | lv_type_0_8= 'int64' | lv_type_0_9= 'int72' | lv_type_0_10= 'int80' | lv_type_0_11= 'int88' | lv_type_0_12= 'int96' | lv_type_0_13= 'int104' | lv_type_0_14= 'int112' | lv_type_0_15= 'int120' | lv_type_0_16= 'int128' | lv_type_0_17= 'int136' | lv_type_0_18= 'int144' | lv_type_0_19= 'int152' | lv_type_0_20= 'int160' | lv_type_0_21= 'int168' | lv_type_0_22= 'int178' | lv_type_0_23= 'int184' | lv_type_0_24= 'int192' | lv_type_0_25= 'int200' | lv_type_0_26= 'int208' | lv_type_0_27= 'int216' | lv_type_0_28= 'int224' | lv_type_0_29= 'int232' | lv_type_0_30= 'int240' | lv_type_0_31= 'int248' | lv_type_0_32= 'int256' | lv_type_0_33= 'uint' | lv_type_0_34= 'uint8' | lv_type_0_35= 'uint16' | lv_type_0_36= 'uint24' | lv_type_0_37= 'uint32' | lv_type_0_38= 'uint40' | lv_type_0_39= 'uint48' | lv_type_0_40= 'uint56' | lv_type_0_41= 'uint64' | lv_type_0_42= 'uint72' | lv_type_0_43= 'uint80' | lv_type_0_44= 'uint88' | lv_type_0_45= 'uint96' | lv_type_0_46= 'uint104' | lv_type_0_47= 'uint112' | lv_type_0_48= 'uint120' | lv_type_0_49= 'uint128' | lv_type_0_50= 'uint136' | lv_type_0_51= 'uint144' | lv_type_0_52= 'uint152' | lv_type_0_53= 'uint160' | lv_type_0_54= 'uint168' | lv_type_0_55= 'uint178' | lv_type_0_56= 'uint184' | lv_type_0_57= 'uint192' | lv_type_0_58= 'uint200' | lv_type_0_59= 'uint208' | lv_type_0_60= 'uint216' | lv_type_0_61= 'uint224' | lv_type_0_62= 'uint232' | lv_type_0_63= 'uint240' | lv_type_0_64= 'uint248' | lv_type_0_65= 'uint256' | lv_type_0_66= 'byte' | lv_type_0_67= 'bytes' | lv_type_0_68= 'bytes1' | lv_type_0_69= 'bytes2' | lv_type_0_70= 'bytes3' | lv_type_0_71= 'bytes4' | lv_type_0_72= 'bytes5' | lv_type_0_73= 'bytes6' | lv_type_0_74= 'bytes7' | lv_type_0_75= 'bytes8' | lv_type_0_76= 'bytes9' | lv_type_0_77= 'bytes10' | lv_type_0_78= 'bytes11' | lv_type_0_79= 'bytes12' | lv_type_0_80= 'bytes13' | lv_type_0_81= 'bytes14' | lv_type_0_82= 'bytes15' | lv_type_0_83= 'bytes16' | lv_type_0_84= 'bytes17' | lv_type_0_85= 'bytes18' | lv_type_0_86= 'bytes19' | lv_type_0_87= 'bytes20' | lv_type_0_88= 'bytes21' | lv_type_0_89= 'bytes22' | lv_type_0_90= 'bytes23' | lv_type_0_91= 'bytes24' | lv_type_0_92= 'bytes25' | lv_type_0_93= 'bytes26' | lv_type_0_94= 'bytes27' | lv_type_0_95= 'bytes28' | lv_type_0_96= 'bytes29' | lv_type_0_97= 'bytes30' | lv_type_0_98= 'bytes31' | lv_type_0_99= 'bytes32' | lv_type_0_100= 'string' | lv_type_0_101= 'address' | lv_type_0_102= 'bool' | lv_type_0_103= 'real' | lv_type_0_104= 'ureal' ) )
            {
            // InternalOptGrammar.g:7244:3: ( (lv_type_0_1= 'int' | lv_type_0_2= 'int16' | lv_type_0_3= 'int24' | lv_type_0_4= 'int32' | lv_type_0_5= 'int40' | lv_type_0_6= 'int48' | lv_type_0_7= 'int56' | lv_type_0_8= 'int64' | lv_type_0_9= 'int72' | lv_type_0_10= 'int80' | lv_type_0_11= 'int88' | lv_type_0_12= 'int96' | lv_type_0_13= 'int104' | lv_type_0_14= 'int112' | lv_type_0_15= 'int120' | lv_type_0_16= 'int128' | lv_type_0_17= 'int136' | lv_type_0_18= 'int144' | lv_type_0_19= 'int152' | lv_type_0_20= 'int160' | lv_type_0_21= 'int168' | lv_type_0_22= 'int178' | lv_type_0_23= 'int184' | lv_type_0_24= 'int192' | lv_type_0_25= 'int200' | lv_type_0_26= 'int208' | lv_type_0_27= 'int216' | lv_type_0_28= 'int224' | lv_type_0_29= 'int232' | lv_type_0_30= 'int240' | lv_type_0_31= 'int248' | lv_type_0_32= 'int256' | lv_type_0_33= 'uint' | lv_type_0_34= 'uint8' | lv_type_0_35= 'uint16' | lv_type_0_36= 'uint24' | lv_type_0_37= 'uint32' | lv_type_0_38= 'uint40' | lv_type_0_39= 'uint48' | lv_type_0_40= 'uint56' | lv_type_0_41= 'uint64' | lv_type_0_42= 'uint72' | lv_type_0_43= 'uint80' | lv_type_0_44= 'uint88' | lv_type_0_45= 'uint96' | lv_type_0_46= 'uint104' | lv_type_0_47= 'uint112' | lv_type_0_48= 'uint120' | lv_type_0_49= 'uint128' | lv_type_0_50= 'uint136' | lv_type_0_51= 'uint144' | lv_type_0_52= 'uint152' | lv_type_0_53= 'uint160' | lv_type_0_54= 'uint168' | lv_type_0_55= 'uint178' | lv_type_0_56= 'uint184' | lv_type_0_57= 'uint192' | lv_type_0_58= 'uint200' | lv_type_0_59= 'uint208' | lv_type_0_60= 'uint216' | lv_type_0_61= 'uint224' | lv_type_0_62= 'uint232' | lv_type_0_63= 'uint240' | lv_type_0_64= 'uint248' | lv_type_0_65= 'uint256' | lv_type_0_66= 'byte' | lv_type_0_67= 'bytes' | lv_type_0_68= 'bytes1' | lv_type_0_69= 'bytes2' | lv_type_0_70= 'bytes3' | lv_type_0_71= 'bytes4' | lv_type_0_72= 'bytes5' | lv_type_0_73= 'bytes6' | lv_type_0_74= 'bytes7' | lv_type_0_75= 'bytes8' | lv_type_0_76= 'bytes9' | lv_type_0_77= 'bytes10' | lv_type_0_78= 'bytes11' | lv_type_0_79= 'bytes12' | lv_type_0_80= 'bytes13' | lv_type_0_81= 'bytes14' | lv_type_0_82= 'bytes15' | lv_type_0_83= 'bytes16' | lv_type_0_84= 'bytes17' | lv_type_0_85= 'bytes18' | lv_type_0_86= 'bytes19' | lv_type_0_87= 'bytes20' | lv_type_0_88= 'bytes21' | lv_type_0_89= 'bytes22' | lv_type_0_90= 'bytes23' | lv_type_0_91= 'bytes24' | lv_type_0_92= 'bytes25' | lv_type_0_93= 'bytes26' | lv_type_0_94= 'bytes27' | lv_type_0_95= 'bytes28' | lv_type_0_96= 'bytes29' | lv_type_0_97= 'bytes30' | lv_type_0_98= 'bytes31' | lv_type_0_99= 'bytes32' | lv_type_0_100= 'string' | lv_type_0_101= 'address' | lv_type_0_102= 'bool' | lv_type_0_103= 'real' | lv_type_0_104= 'ureal' ) )
            // InternalOptGrammar.g:7245:4: (lv_type_0_1= 'int' | lv_type_0_2= 'int16' | lv_type_0_3= 'int24' | lv_type_0_4= 'int32' | lv_type_0_5= 'int40' | lv_type_0_6= 'int48' | lv_type_0_7= 'int56' | lv_type_0_8= 'int64' | lv_type_0_9= 'int72' | lv_type_0_10= 'int80' | lv_type_0_11= 'int88' | lv_type_0_12= 'int96' | lv_type_0_13= 'int104' | lv_type_0_14= 'int112' | lv_type_0_15= 'int120' | lv_type_0_16= 'int128' | lv_type_0_17= 'int136' | lv_type_0_18= 'int144' | lv_type_0_19= 'int152' | lv_type_0_20= 'int160' | lv_type_0_21= 'int168' | lv_type_0_22= 'int178' | lv_type_0_23= 'int184' | lv_type_0_24= 'int192' | lv_type_0_25= 'int200' | lv_type_0_26= 'int208' | lv_type_0_27= 'int216' | lv_type_0_28= 'int224' | lv_type_0_29= 'int232' | lv_type_0_30= 'int240' | lv_type_0_31= 'int248' | lv_type_0_32= 'int256' | lv_type_0_33= 'uint' | lv_type_0_34= 'uint8' | lv_type_0_35= 'uint16' | lv_type_0_36= 'uint24' | lv_type_0_37= 'uint32' | lv_type_0_38= 'uint40' | lv_type_0_39= 'uint48' | lv_type_0_40= 'uint56' | lv_type_0_41= 'uint64' | lv_type_0_42= 'uint72' | lv_type_0_43= 'uint80' | lv_type_0_44= 'uint88' | lv_type_0_45= 'uint96' | lv_type_0_46= 'uint104' | lv_type_0_47= 'uint112' | lv_type_0_48= 'uint120' | lv_type_0_49= 'uint128' | lv_type_0_50= 'uint136' | lv_type_0_51= 'uint144' | lv_type_0_52= 'uint152' | lv_type_0_53= 'uint160' | lv_type_0_54= 'uint168' | lv_type_0_55= 'uint178' | lv_type_0_56= 'uint184' | lv_type_0_57= 'uint192' | lv_type_0_58= 'uint200' | lv_type_0_59= 'uint208' | lv_type_0_60= 'uint216' | lv_type_0_61= 'uint224' | lv_type_0_62= 'uint232' | lv_type_0_63= 'uint240' | lv_type_0_64= 'uint248' | lv_type_0_65= 'uint256' | lv_type_0_66= 'byte' | lv_type_0_67= 'bytes' | lv_type_0_68= 'bytes1' | lv_type_0_69= 'bytes2' | lv_type_0_70= 'bytes3' | lv_type_0_71= 'bytes4' | lv_type_0_72= 'bytes5' | lv_type_0_73= 'bytes6' | lv_type_0_74= 'bytes7' | lv_type_0_75= 'bytes8' | lv_type_0_76= 'bytes9' | lv_type_0_77= 'bytes10' | lv_type_0_78= 'bytes11' | lv_type_0_79= 'bytes12' | lv_type_0_80= 'bytes13' | lv_type_0_81= 'bytes14' | lv_type_0_82= 'bytes15' | lv_type_0_83= 'bytes16' | lv_type_0_84= 'bytes17' | lv_type_0_85= 'bytes18' | lv_type_0_86= 'bytes19' | lv_type_0_87= 'bytes20' | lv_type_0_88= 'bytes21' | lv_type_0_89= 'bytes22' | lv_type_0_90= 'bytes23' | lv_type_0_91= 'bytes24' | lv_type_0_92= 'bytes25' | lv_type_0_93= 'bytes26' | lv_type_0_94= 'bytes27' | lv_type_0_95= 'bytes28' | lv_type_0_96= 'bytes29' | lv_type_0_97= 'bytes30' | lv_type_0_98= 'bytes31' | lv_type_0_99= 'bytes32' | lv_type_0_100= 'string' | lv_type_0_101= 'address' | lv_type_0_102= 'bool' | lv_type_0_103= 'real' | lv_type_0_104= 'ureal' )
            {
            // InternalOptGrammar.g:7245:4: (lv_type_0_1= 'int' | lv_type_0_2= 'int16' | lv_type_0_3= 'int24' | lv_type_0_4= 'int32' | lv_type_0_5= 'int40' | lv_type_0_6= 'int48' | lv_type_0_7= 'int56' | lv_type_0_8= 'int64' | lv_type_0_9= 'int72' | lv_type_0_10= 'int80' | lv_type_0_11= 'int88' | lv_type_0_12= 'int96' | lv_type_0_13= 'int104' | lv_type_0_14= 'int112' | lv_type_0_15= 'int120' | lv_type_0_16= 'int128' | lv_type_0_17= 'int136' | lv_type_0_18= 'int144' | lv_type_0_19= 'int152' | lv_type_0_20= 'int160' | lv_type_0_21= 'int168' | lv_type_0_22= 'int178' | lv_type_0_23= 'int184' | lv_type_0_24= 'int192' | lv_type_0_25= 'int200' | lv_type_0_26= 'int208' | lv_type_0_27= 'int216' | lv_type_0_28= 'int224' | lv_type_0_29= 'int232' | lv_type_0_30= 'int240' | lv_type_0_31= 'int248' | lv_type_0_32= 'int256' | lv_type_0_33= 'uint' | lv_type_0_34= 'uint8' | lv_type_0_35= 'uint16' | lv_type_0_36= 'uint24' | lv_type_0_37= 'uint32' | lv_type_0_38= 'uint40' | lv_type_0_39= 'uint48' | lv_type_0_40= 'uint56' | lv_type_0_41= 'uint64' | lv_type_0_42= 'uint72' | lv_type_0_43= 'uint80' | lv_type_0_44= 'uint88' | lv_type_0_45= 'uint96' | lv_type_0_46= 'uint104' | lv_type_0_47= 'uint112' | lv_type_0_48= 'uint120' | lv_type_0_49= 'uint128' | lv_type_0_50= 'uint136' | lv_type_0_51= 'uint144' | lv_type_0_52= 'uint152' | lv_type_0_53= 'uint160' | lv_type_0_54= 'uint168' | lv_type_0_55= 'uint178' | lv_type_0_56= 'uint184' | lv_type_0_57= 'uint192' | lv_type_0_58= 'uint200' | lv_type_0_59= 'uint208' | lv_type_0_60= 'uint216' | lv_type_0_61= 'uint224' | lv_type_0_62= 'uint232' | lv_type_0_63= 'uint240' | lv_type_0_64= 'uint248' | lv_type_0_65= 'uint256' | lv_type_0_66= 'byte' | lv_type_0_67= 'bytes' | lv_type_0_68= 'bytes1' | lv_type_0_69= 'bytes2' | lv_type_0_70= 'bytes3' | lv_type_0_71= 'bytes4' | lv_type_0_72= 'bytes5' | lv_type_0_73= 'bytes6' | lv_type_0_74= 'bytes7' | lv_type_0_75= 'bytes8' | lv_type_0_76= 'bytes9' | lv_type_0_77= 'bytes10' | lv_type_0_78= 'bytes11' | lv_type_0_79= 'bytes12' | lv_type_0_80= 'bytes13' | lv_type_0_81= 'bytes14' | lv_type_0_82= 'bytes15' | lv_type_0_83= 'bytes16' | lv_type_0_84= 'bytes17' | lv_type_0_85= 'bytes18' | lv_type_0_86= 'bytes19' | lv_type_0_87= 'bytes20' | lv_type_0_88= 'bytes21' | lv_type_0_89= 'bytes22' | lv_type_0_90= 'bytes23' | lv_type_0_91= 'bytes24' | lv_type_0_92= 'bytes25' | lv_type_0_93= 'bytes26' | lv_type_0_94= 'bytes27' | lv_type_0_95= 'bytes28' | lv_type_0_96= 'bytes29' | lv_type_0_97= 'bytes30' | lv_type_0_98= 'bytes31' | lv_type_0_99= 'bytes32' | lv_type_0_100= 'string' | lv_type_0_101= 'address' | lv_type_0_102= 'bool' | lv_type_0_103= 'real' | lv_type_0_104= 'ureal' )
            int alt127=104;
            switch ( input.LA(1) ) {
            case 75:
                {
                alt127=1;
                }
                break;
            case 76:
                {
                alt127=2;
                }
                break;
            case 77:
                {
                alt127=3;
                }
                break;
            case 78:
                {
                alt127=4;
                }
                break;
            case 79:
                {
                alt127=5;
                }
                break;
            case 80:
                {
                alt127=6;
                }
                break;
            case 81:
                {
                alt127=7;
                }
                break;
            case 82:
                {
                alt127=8;
                }
                break;
            case 83:
                {
                alt127=9;
                }
                break;
            case 84:
                {
                alt127=10;
                }
                break;
            case 85:
                {
                alt127=11;
                }
                break;
            case 86:
                {
                alt127=12;
                }
                break;
            case 87:
                {
                alt127=13;
                }
                break;
            case 88:
                {
                alt127=14;
                }
                break;
            case 89:
                {
                alt127=15;
                }
                break;
            case 90:
                {
                alt127=16;
                }
                break;
            case 91:
                {
                alt127=17;
                }
                break;
            case 92:
                {
                alt127=18;
                }
                break;
            case 93:
                {
                alt127=19;
                }
                break;
            case 94:
                {
                alt127=20;
                }
                break;
            case 95:
                {
                alt127=21;
                }
                break;
            case 96:
                {
                alt127=22;
                }
                break;
            case 97:
                {
                alt127=23;
                }
                break;
            case 98:
                {
                alt127=24;
                }
                break;
            case 99:
                {
                alt127=25;
                }
                break;
            case 100:
                {
                alt127=26;
                }
                break;
            case 101:
                {
                alt127=27;
                }
                break;
            case 102:
                {
                alt127=28;
                }
                break;
            case 103:
                {
                alt127=29;
                }
                break;
            case 104:
                {
                alt127=30;
                }
                break;
            case 105:
                {
                alt127=31;
                }
                break;
            case 106:
                {
                alt127=32;
                }
                break;
            case 107:
                {
                alt127=33;
                }
                break;
            case 108:
                {
                alt127=34;
                }
                break;
            case 109:
                {
                alt127=35;
                }
                break;
            case 110:
                {
                alt127=36;
                }
                break;
            case 111:
                {
                alt127=37;
                }
                break;
            case 112:
                {
                alt127=38;
                }
                break;
            case 113:
                {
                alt127=39;
                }
                break;
            case 114:
                {
                alt127=40;
                }
                break;
            case 115:
                {
                alt127=41;
                }
                break;
            case 116:
                {
                alt127=42;
                }
                break;
            case 117:
                {
                alt127=43;
                }
                break;
            case 118:
                {
                alt127=44;
                }
                break;
            case 119:
                {
                alt127=45;
                }
                break;
            case 120:
                {
                alt127=46;
                }
                break;
            case 121:
                {
                alt127=47;
                }
                break;
            case 122:
                {
                alt127=48;
                }
                break;
            case 123:
                {
                alt127=49;
                }
                break;
            case 124:
                {
                alt127=50;
                }
                break;
            case 125:
                {
                alt127=51;
                }
                break;
            case 126:
                {
                alt127=52;
                }
                break;
            case 127:
                {
                alt127=53;
                }
                break;
            case 128:
                {
                alt127=54;
                }
                break;
            case 129:
                {
                alt127=55;
                }
                break;
            case 130:
                {
                alt127=56;
                }
                break;
            case 131:
                {
                alt127=57;
                }
                break;
            case 132:
                {
                alt127=58;
                }
                break;
            case 133:
                {
                alt127=59;
                }
                break;
            case 134:
                {
                alt127=60;
                }
                break;
            case 135:
                {
                alt127=61;
                }
                break;
            case 136:
                {
                alt127=62;
                }
                break;
            case 137:
                {
                alt127=63;
                }
                break;
            case 138:
                {
                alt127=64;
                }
                break;
            case 139:
                {
                alt127=65;
                }
                break;
            case 140:
                {
                alt127=66;
                }
                break;
            case 141:
                {
                alt127=67;
                }
                break;
            case 142:
                {
                alt127=68;
                }
                break;
            case 143:
                {
                alt127=69;
                }
                break;
            case 144:
                {
                alt127=70;
                }
                break;
            case 145:
                {
                alt127=71;
                }
                break;
            case 146:
                {
                alt127=72;
                }
                break;
            case 147:
                {
                alt127=73;
                }
                break;
            case 148:
                {
                alt127=74;
                }
                break;
            case 149:
                {
                alt127=75;
                }
                break;
            case 150:
                {
                alt127=76;
                }
                break;
            case 151:
                {
                alt127=77;
                }
                break;
            case 152:
                {
                alt127=78;
                }
                break;
            case 153:
                {
                alt127=79;
                }
                break;
            case 154:
                {
                alt127=80;
                }
                break;
            case 155:
                {
                alt127=81;
                }
                break;
            case 156:
                {
                alt127=82;
                }
                break;
            case 157:
                {
                alt127=83;
                }
                break;
            case 158:
                {
                alt127=84;
                }
                break;
            case 159:
                {
                alt127=85;
                }
                break;
            case 160:
                {
                alt127=86;
                }
                break;
            case 161:
                {
                alt127=87;
                }
                break;
            case 162:
                {
                alt127=88;
                }
                break;
            case 163:
                {
                alt127=89;
                }
                break;
            case 164:
                {
                alt127=90;
                }
                break;
            case 165:
                {
                alt127=91;
                }
                break;
            case 166:
                {
                alt127=92;
                }
                break;
            case 167:
                {
                alt127=93;
                }
                break;
            case 168:
                {
                alt127=94;
                }
                break;
            case 169:
                {
                alt127=95;
                }
                break;
            case 170:
                {
                alt127=96;
                }
                break;
            case 171:
                {
                alt127=97;
                }
                break;
            case 172:
                {
                alt127=98;
                }
                break;
            case 173:
                {
                alt127=99;
                }
                break;
            case 28:
                {
                alt127=100;
                }
                break;
            case 174:
                {
                alt127=101;
                }
                break;
            case 29:
                {
                alt127=102;
                }
                break;
            case 175:
                {
                alt127=103;
                }
                break;
            case 176:
                {
                alt127=104;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 127, 0, input);

                throw nvae;
            }

            switch (alt127) {
                case 1 :
                    // InternalOptGrammar.g:7246:5: lv_type_0_1= 'int'
                    {
                    lv_type_0_1=(Token)match(input,75,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_1, grammarAccess.getElementaryTypeNameEnumAccess().getTypeIntKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_1, null);
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:7257:5: lv_type_0_2= 'int16'
                    {
                    lv_type_0_2=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_2, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt16Keyword_0_1());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_2, null);
                      				
                    }

                    }
                    break;
                case 3 :
                    // InternalOptGrammar.g:7268:5: lv_type_0_3= 'int24'
                    {
                    lv_type_0_3=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_3, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt24Keyword_0_2());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_3, null);
                      				
                    }

                    }
                    break;
                case 4 :
                    // InternalOptGrammar.g:7279:5: lv_type_0_4= 'int32'
                    {
                    lv_type_0_4=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_4, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt32Keyword_0_3());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_4, null);
                      				
                    }

                    }
                    break;
                case 5 :
                    // InternalOptGrammar.g:7290:5: lv_type_0_5= 'int40'
                    {
                    lv_type_0_5=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_5, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt40Keyword_0_4());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_5, null);
                      				
                    }

                    }
                    break;
                case 6 :
                    // InternalOptGrammar.g:7301:5: lv_type_0_6= 'int48'
                    {
                    lv_type_0_6=(Token)match(input,80,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_6, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt48Keyword_0_5());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_6, null);
                      				
                    }

                    }
                    break;
                case 7 :
                    // InternalOptGrammar.g:7312:5: lv_type_0_7= 'int56'
                    {
                    lv_type_0_7=(Token)match(input,81,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_7, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt56Keyword_0_6());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_7, null);
                      				
                    }

                    }
                    break;
                case 8 :
                    // InternalOptGrammar.g:7323:5: lv_type_0_8= 'int64'
                    {
                    lv_type_0_8=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_8, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt64Keyword_0_7());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_8, null);
                      				
                    }

                    }
                    break;
                case 9 :
                    // InternalOptGrammar.g:7334:5: lv_type_0_9= 'int72'
                    {
                    lv_type_0_9=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_9, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt72Keyword_0_8());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_9, null);
                      				
                    }

                    }
                    break;
                case 10 :
                    // InternalOptGrammar.g:7345:5: lv_type_0_10= 'int80'
                    {
                    lv_type_0_10=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_10, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt80Keyword_0_9());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_10, null);
                      				
                    }

                    }
                    break;
                case 11 :
                    // InternalOptGrammar.g:7356:5: lv_type_0_11= 'int88'
                    {
                    lv_type_0_11=(Token)match(input,85,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_11, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt88Keyword_0_10());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_11, null);
                      				
                    }

                    }
                    break;
                case 12 :
                    // InternalOptGrammar.g:7367:5: lv_type_0_12= 'int96'
                    {
                    lv_type_0_12=(Token)match(input,86,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_12, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt96Keyword_0_11());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_12, null);
                      				
                    }

                    }
                    break;
                case 13 :
                    // InternalOptGrammar.g:7378:5: lv_type_0_13= 'int104'
                    {
                    lv_type_0_13=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_13, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt104Keyword_0_12());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_13, null);
                      				
                    }

                    }
                    break;
                case 14 :
                    // InternalOptGrammar.g:7389:5: lv_type_0_14= 'int112'
                    {
                    lv_type_0_14=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_14, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt112Keyword_0_13());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_14, null);
                      				
                    }

                    }
                    break;
                case 15 :
                    // InternalOptGrammar.g:7400:5: lv_type_0_15= 'int120'
                    {
                    lv_type_0_15=(Token)match(input,89,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_15, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt120Keyword_0_14());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_15, null);
                      				
                    }

                    }
                    break;
                case 16 :
                    // InternalOptGrammar.g:7411:5: lv_type_0_16= 'int128'
                    {
                    lv_type_0_16=(Token)match(input,90,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_16, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt128Keyword_0_15());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_16, null);
                      				
                    }

                    }
                    break;
                case 17 :
                    // InternalOptGrammar.g:7422:5: lv_type_0_17= 'int136'
                    {
                    lv_type_0_17=(Token)match(input,91,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_17, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt136Keyword_0_16());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_17, null);
                      				
                    }

                    }
                    break;
                case 18 :
                    // InternalOptGrammar.g:7433:5: lv_type_0_18= 'int144'
                    {
                    lv_type_0_18=(Token)match(input,92,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_18, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt144Keyword_0_17());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_18, null);
                      				
                    }

                    }
                    break;
                case 19 :
                    // InternalOptGrammar.g:7444:5: lv_type_0_19= 'int152'
                    {
                    lv_type_0_19=(Token)match(input,93,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_19, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt152Keyword_0_18());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_19, null);
                      				
                    }

                    }
                    break;
                case 20 :
                    // InternalOptGrammar.g:7455:5: lv_type_0_20= 'int160'
                    {
                    lv_type_0_20=(Token)match(input,94,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_20, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt160Keyword_0_19());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_20, null);
                      				
                    }

                    }
                    break;
                case 21 :
                    // InternalOptGrammar.g:7466:5: lv_type_0_21= 'int168'
                    {
                    lv_type_0_21=(Token)match(input,95,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_21, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt168Keyword_0_20());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_21, null);
                      				
                    }

                    }
                    break;
                case 22 :
                    // InternalOptGrammar.g:7477:5: lv_type_0_22= 'int178'
                    {
                    lv_type_0_22=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_22, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt178Keyword_0_21());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_22, null);
                      				
                    }

                    }
                    break;
                case 23 :
                    // InternalOptGrammar.g:7488:5: lv_type_0_23= 'int184'
                    {
                    lv_type_0_23=(Token)match(input,97,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_23, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt184Keyword_0_22());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_23, null);
                      				
                    }

                    }
                    break;
                case 24 :
                    // InternalOptGrammar.g:7499:5: lv_type_0_24= 'int192'
                    {
                    lv_type_0_24=(Token)match(input,98,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_24, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt192Keyword_0_23());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_24, null);
                      				
                    }

                    }
                    break;
                case 25 :
                    // InternalOptGrammar.g:7510:5: lv_type_0_25= 'int200'
                    {
                    lv_type_0_25=(Token)match(input,99,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_25, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt200Keyword_0_24());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_25, null);
                      				
                    }

                    }
                    break;
                case 26 :
                    // InternalOptGrammar.g:7521:5: lv_type_0_26= 'int208'
                    {
                    lv_type_0_26=(Token)match(input,100,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_26, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt208Keyword_0_25());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_26, null);
                      				
                    }

                    }
                    break;
                case 27 :
                    // InternalOptGrammar.g:7532:5: lv_type_0_27= 'int216'
                    {
                    lv_type_0_27=(Token)match(input,101,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_27, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt216Keyword_0_26());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_27, null);
                      				
                    }

                    }
                    break;
                case 28 :
                    // InternalOptGrammar.g:7543:5: lv_type_0_28= 'int224'
                    {
                    lv_type_0_28=(Token)match(input,102,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_28, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt224Keyword_0_27());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_28, null);
                      				
                    }

                    }
                    break;
                case 29 :
                    // InternalOptGrammar.g:7554:5: lv_type_0_29= 'int232'
                    {
                    lv_type_0_29=(Token)match(input,103,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_29, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt232Keyword_0_28());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_29, null);
                      				
                    }

                    }
                    break;
                case 30 :
                    // InternalOptGrammar.g:7565:5: lv_type_0_30= 'int240'
                    {
                    lv_type_0_30=(Token)match(input,104,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_30, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt240Keyword_0_29());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_30, null);
                      				
                    }

                    }
                    break;
                case 31 :
                    // InternalOptGrammar.g:7576:5: lv_type_0_31= 'int248'
                    {
                    lv_type_0_31=(Token)match(input,105,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_31, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt248Keyword_0_30());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_31, null);
                      				
                    }

                    }
                    break;
                case 32 :
                    // InternalOptGrammar.g:7587:5: lv_type_0_32= 'int256'
                    {
                    lv_type_0_32=(Token)match(input,106,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_32, grammarAccess.getElementaryTypeNameEnumAccess().getTypeInt256Keyword_0_31());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_32, null);
                      				
                    }

                    }
                    break;
                case 33 :
                    // InternalOptGrammar.g:7598:5: lv_type_0_33= 'uint'
                    {
                    lv_type_0_33=(Token)match(input,107,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_33, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUintKeyword_0_32());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_33, null);
                      				
                    }

                    }
                    break;
                case 34 :
                    // InternalOptGrammar.g:7609:5: lv_type_0_34= 'uint8'
                    {
                    lv_type_0_34=(Token)match(input,108,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_34, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint8Keyword_0_33());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_34, null);
                      				
                    }

                    }
                    break;
                case 35 :
                    // InternalOptGrammar.g:7620:5: lv_type_0_35= 'uint16'
                    {
                    lv_type_0_35=(Token)match(input,109,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_35, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint16Keyword_0_34());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_35, null);
                      				
                    }

                    }
                    break;
                case 36 :
                    // InternalOptGrammar.g:7631:5: lv_type_0_36= 'uint24'
                    {
                    lv_type_0_36=(Token)match(input,110,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_36, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint24Keyword_0_35());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_36, null);
                      				
                    }

                    }
                    break;
                case 37 :
                    // InternalOptGrammar.g:7642:5: lv_type_0_37= 'uint32'
                    {
                    lv_type_0_37=(Token)match(input,111,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_37, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint32Keyword_0_36());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_37, null);
                      				
                    }

                    }
                    break;
                case 38 :
                    // InternalOptGrammar.g:7653:5: lv_type_0_38= 'uint40'
                    {
                    lv_type_0_38=(Token)match(input,112,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_38, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint40Keyword_0_37());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_38, null);
                      				
                    }

                    }
                    break;
                case 39 :
                    // InternalOptGrammar.g:7664:5: lv_type_0_39= 'uint48'
                    {
                    lv_type_0_39=(Token)match(input,113,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_39, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint48Keyword_0_38());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_39, null);
                      				
                    }

                    }
                    break;
                case 40 :
                    // InternalOptGrammar.g:7675:5: lv_type_0_40= 'uint56'
                    {
                    lv_type_0_40=(Token)match(input,114,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_40, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint56Keyword_0_39());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_40, null);
                      				
                    }

                    }
                    break;
                case 41 :
                    // InternalOptGrammar.g:7686:5: lv_type_0_41= 'uint64'
                    {
                    lv_type_0_41=(Token)match(input,115,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_41, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint64Keyword_0_40());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_41, null);
                      				
                    }

                    }
                    break;
                case 42 :
                    // InternalOptGrammar.g:7697:5: lv_type_0_42= 'uint72'
                    {
                    lv_type_0_42=(Token)match(input,116,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_42, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint72Keyword_0_41());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_42, null);
                      				
                    }

                    }
                    break;
                case 43 :
                    // InternalOptGrammar.g:7708:5: lv_type_0_43= 'uint80'
                    {
                    lv_type_0_43=(Token)match(input,117,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_43, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint80Keyword_0_42());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_43, null);
                      				
                    }

                    }
                    break;
                case 44 :
                    // InternalOptGrammar.g:7719:5: lv_type_0_44= 'uint88'
                    {
                    lv_type_0_44=(Token)match(input,118,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_44, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint88Keyword_0_43());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_44, null);
                      				
                    }

                    }
                    break;
                case 45 :
                    // InternalOptGrammar.g:7730:5: lv_type_0_45= 'uint96'
                    {
                    lv_type_0_45=(Token)match(input,119,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_45, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint96Keyword_0_44());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_45, null);
                      				
                    }

                    }
                    break;
                case 46 :
                    // InternalOptGrammar.g:7741:5: lv_type_0_46= 'uint104'
                    {
                    lv_type_0_46=(Token)match(input,120,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_46, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint104Keyword_0_45());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_46, null);
                      				
                    }

                    }
                    break;
                case 47 :
                    // InternalOptGrammar.g:7752:5: lv_type_0_47= 'uint112'
                    {
                    lv_type_0_47=(Token)match(input,121,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_47, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint112Keyword_0_46());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_47, null);
                      				
                    }

                    }
                    break;
                case 48 :
                    // InternalOptGrammar.g:7763:5: lv_type_0_48= 'uint120'
                    {
                    lv_type_0_48=(Token)match(input,122,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_48, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint120Keyword_0_47());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_48, null);
                      				
                    }

                    }
                    break;
                case 49 :
                    // InternalOptGrammar.g:7774:5: lv_type_0_49= 'uint128'
                    {
                    lv_type_0_49=(Token)match(input,123,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_49, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint128Keyword_0_48());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_49, null);
                      				
                    }

                    }
                    break;
                case 50 :
                    // InternalOptGrammar.g:7785:5: lv_type_0_50= 'uint136'
                    {
                    lv_type_0_50=(Token)match(input,124,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_50, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint136Keyword_0_49());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_50, null);
                      				
                    }

                    }
                    break;
                case 51 :
                    // InternalOptGrammar.g:7796:5: lv_type_0_51= 'uint144'
                    {
                    lv_type_0_51=(Token)match(input,125,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_51, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint144Keyword_0_50());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_51, null);
                      				
                    }

                    }
                    break;
                case 52 :
                    // InternalOptGrammar.g:7807:5: lv_type_0_52= 'uint152'
                    {
                    lv_type_0_52=(Token)match(input,126,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_52, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint152Keyword_0_51());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_52, null);
                      				
                    }

                    }
                    break;
                case 53 :
                    // InternalOptGrammar.g:7818:5: lv_type_0_53= 'uint160'
                    {
                    lv_type_0_53=(Token)match(input,127,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_53, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint160Keyword_0_52());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_53, null);
                      				
                    }

                    }
                    break;
                case 54 :
                    // InternalOptGrammar.g:7829:5: lv_type_0_54= 'uint168'
                    {
                    lv_type_0_54=(Token)match(input,128,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_54, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint168Keyword_0_53());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_54, null);
                      				
                    }

                    }
                    break;
                case 55 :
                    // InternalOptGrammar.g:7840:5: lv_type_0_55= 'uint178'
                    {
                    lv_type_0_55=(Token)match(input,129,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_55, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint178Keyword_0_54());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_55, null);
                      				
                    }

                    }
                    break;
                case 56 :
                    // InternalOptGrammar.g:7851:5: lv_type_0_56= 'uint184'
                    {
                    lv_type_0_56=(Token)match(input,130,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_56, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint184Keyword_0_55());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_56, null);
                      				
                    }

                    }
                    break;
                case 57 :
                    // InternalOptGrammar.g:7862:5: lv_type_0_57= 'uint192'
                    {
                    lv_type_0_57=(Token)match(input,131,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_57, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint192Keyword_0_56());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_57, null);
                      				
                    }

                    }
                    break;
                case 58 :
                    // InternalOptGrammar.g:7873:5: lv_type_0_58= 'uint200'
                    {
                    lv_type_0_58=(Token)match(input,132,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_58, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint200Keyword_0_57());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_58, null);
                      				
                    }

                    }
                    break;
                case 59 :
                    // InternalOptGrammar.g:7884:5: lv_type_0_59= 'uint208'
                    {
                    lv_type_0_59=(Token)match(input,133,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_59, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint208Keyword_0_58());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_59, null);
                      				
                    }

                    }
                    break;
                case 60 :
                    // InternalOptGrammar.g:7895:5: lv_type_0_60= 'uint216'
                    {
                    lv_type_0_60=(Token)match(input,134,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_60, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint216Keyword_0_59());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_60, null);
                      				
                    }

                    }
                    break;
                case 61 :
                    // InternalOptGrammar.g:7906:5: lv_type_0_61= 'uint224'
                    {
                    lv_type_0_61=(Token)match(input,135,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_61, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint224Keyword_0_60());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_61, null);
                      				
                    }

                    }
                    break;
                case 62 :
                    // InternalOptGrammar.g:7917:5: lv_type_0_62= 'uint232'
                    {
                    lv_type_0_62=(Token)match(input,136,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_62, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint232Keyword_0_61());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_62, null);
                      				
                    }

                    }
                    break;
                case 63 :
                    // InternalOptGrammar.g:7928:5: lv_type_0_63= 'uint240'
                    {
                    lv_type_0_63=(Token)match(input,137,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_63, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint240Keyword_0_62());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_63, null);
                      				
                    }

                    }
                    break;
                case 64 :
                    // InternalOptGrammar.g:7939:5: lv_type_0_64= 'uint248'
                    {
                    lv_type_0_64=(Token)match(input,138,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_64, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint248Keyword_0_63());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_64, null);
                      				
                    }

                    }
                    break;
                case 65 :
                    // InternalOptGrammar.g:7950:5: lv_type_0_65= 'uint256'
                    {
                    lv_type_0_65=(Token)match(input,139,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_65, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUint256Keyword_0_64());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_65, null);
                      				
                    }

                    }
                    break;
                case 66 :
                    // InternalOptGrammar.g:7961:5: lv_type_0_66= 'byte'
                    {
                    lv_type_0_66=(Token)match(input,140,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_66, grammarAccess.getElementaryTypeNameEnumAccess().getTypeByteKeyword_0_65());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_66, null);
                      				
                    }

                    }
                    break;
                case 67 :
                    // InternalOptGrammar.g:7972:5: lv_type_0_67= 'bytes'
                    {
                    lv_type_0_67=(Token)match(input,141,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_67, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytesKeyword_0_66());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_67, null);
                      				
                    }

                    }
                    break;
                case 68 :
                    // InternalOptGrammar.g:7983:5: lv_type_0_68= 'bytes1'
                    {
                    lv_type_0_68=(Token)match(input,142,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_68, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes1Keyword_0_67());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_68, null);
                      				
                    }

                    }
                    break;
                case 69 :
                    // InternalOptGrammar.g:7994:5: lv_type_0_69= 'bytes2'
                    {
                    lv_type_0_69=(Token)match(input,143,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_69, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes2Keyword_0_68());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_69, null);
                      				
                    }

                    }
                    break;
                case 70 :
                    // InternalOptGrammar.g:8005:5: lv_type_0_70= 'bytes3'
                    {
                    lv_type_0_70=(Token)match(input,144,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_70, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes3Keyword_0_69());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_70, null);
                      				
                    }

                    }
                    break;
                case 71 :
                    // InternalOptGrammar.g:8016:5: lv_type_0_71= 'bytes4'
                    {
                    lv_type_0_71=(Token)match(input,145,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_71, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes4Keyword_0_70());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_71, null);
                      				
                    }

                    }
                    break;
                case 72 :
                    // InternalOptGrammar.g:8027:5: lv_type_0_72= 'bytes5'
                    {
                    lv_type_0_72=(Token)match(input,146,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_72, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes5Keyword_0_71());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_72, null);
                      				
                    }

                    }
                    break;
                case 73 :
                    // InternalOptGrammar.g:8038:5: lv_type_0_73= 'bytes6'
                    {
                    lv_type_0_73=(Token)match(input,147,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_73, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes6Keyword_0_72());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_73, null);
                      				
                    }

                    }
                    break;
                case 74 :
                    // InternalOptGrammar.g:8049:5: lv_type_0_74= 'bytes7'
                    {
                    lv_type_0_74=(Token)match(input,148,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_74, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes7Keyword_0_73());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_74, null);
                      				
                    }

                    }
                    break;
                case 75 :
                    // InternalOptGrammar.g:8060:5: lv_type_0_75= 'bytes8'
                    {
                    lv_type_0_75=(Token)match(input,149,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_75, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes8Keyword_0_74());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_75, null);
                      				
                    }

                    }
                    break;
                case 76 :
                    // InternalOptGrammar.g:8071:5: lv_type_0_76= 'bytes9'
                    {
                    lv_type_0_76=(Token)match(input,150,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_76, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes9Keyword_0_75());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_76, null);
                      				
                    }

                    }
                    break;
                case 77 :
                    // InternalOptGrammar.g:8082:5: lv_type_0_77= 'bytes10'
                    {
                    lv_type_0_77=(Token)match(input,151,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_77, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes10Keyword_0_76());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_77, null);
                      				
                    }

                    }
                    break;
                case 78 :
                    // InternalOptGrammar.g:8093:5: lv_type_0_78= 'bytes11'
                    {
                    lv_type_0_78=(Token)match(input,152,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_78, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes11Keyword_0_77());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_78, null);
                      				
                    }

                    }
                    break;
                case 79 :
                    // InternalOptGrammar.g:8104:5: lv_type_0_79= 'bytes12'
                    {
                    lv_type_0_79=(Token)match(input,153,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_79, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes12Keyword_0_78());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_79, null);
                      				
                    }

                    }
                    break;
                case 80 :
                    // InternalOptGrammar.g:8115:5: lv_type_0_80= 'bytes13'
                    {
                    lv_type_0_80=(Token)match(input,154,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_80, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes13Keyword_0_79());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_80, null);
                      				
                    }

                    }
                    break;
                case 81 :
                    // InternalOptGrammar.g:8126:5: lv_type_0_81= 'bytes14'
                    {
                    lv_type_0_81=(Token)match(input,155,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_81, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes14Keyword_0_80());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_81, null);
                      				
                    }

                    }
                    break;
                case 82 :
                    // InternalOptGrammar.g:8137:5: lv_type_0_82= 'bytes15'
                    {
                    lv_type_0_82=(Token)match(input,156,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_82, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes15Keyword_0_81());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_82, null);
                      				
                    }

                    }
                    break;
                case 83 :
                    // InternalOptGrammar.g:8148:5: lv_type_0_83= 'bytes16'
                    {
                    lv_type_0_83=(Token)match(input,157,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_83, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes16Keyword_0_82());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_83, null);
                      				
                    }

                    }
                    break;
                case 84 :
                    // InternalOptGrammar.g:8159:5: lv_type_0_84= 'bytes17'
                    {
                    lv_type_0_84=(Token)match(input,158,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_84, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes17Keyword_0_83());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_84, null);
                      				
                    }

                    }
                    break;
                case 85 :
                    // InternalOptGrammar.g:8170:5: lv_type_0_85= 'bytes18'
                    {
                    lv_type_0_85=(Token)match(input,159,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_85, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes18Keyword_0_84());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_85, null);
                      				
                    }

                    }
                    break;
                case 86 :
                    // InternalOptGrammar.g:8181:5: lv_type_0_86= 'bytes19'
                    {
                    lv_type_0_86=(Token)match(input,160,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_86, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes19Keyword_0_85());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_86, null);
                      				
                    }

                    }
                    break;
                case 87 :
                    // InternalOptGrammar.g:8192:5: lv_type_0_87= 'bytes20'
                    {
                    lv_type_0_87=(Token)match(input,161,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_87, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes20Keyword_0_86());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_87, null);
                      				
                    }

                    }
                    break;
                case 88 :
                    // InternalOptGrammar.g:8203:5: lv_type_0_88= 'bytes21'
                    {
                    lv_type_0_88=(Token)match(input,162,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_88, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes21Keyword_0_87());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_88, null);
                      				
                    }

                    }
                    break;
                case 89 :
                    // InternalOptGrammar.g:8214:5: lv_type_0_89= 'bytes22'
                    {
                    lv_type_0_89=(Token)match(input,163,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_89, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes22Keyword_0_88());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_89, null);
                      				
                    }

                    }
                    break;
                case 90 :
                    // InternalOptGrammar.g:8225:5: lv_type_0_90= 'bytes23'
                    {
                    lv_type_0_90=(Token)match(input,164,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_90, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes23Keyword_0_89());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_90, null);
                      				
                    }

                    }
                    break;
                case 91 :
                    // InternalOptGrammar.g:8236:5: lv_type_0_91= 'bytes24'
                    {
                    lv_type_0_91=(Token)match(input,165,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_91, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes24Keyword_0_90());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_91, null);
                      				
                    }

                    }
                    break;
                case 92 :
                    // InternalOptGrammar.g:8247:5: lv_type_0_92= 'bytes25'
                    {
                    lv_type_0_92=(Token)match(input,166,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_92, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes25Keyword_0_91());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_92, null);
                      				
                    }

                    }
                    break;
                case 93 :
                    // InternalOptGrammar.g:8258:5: lv_type_0_93= 'bytes26'
                    {
                    lv_type_0_93=(Token)match(input,167,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_93, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes26Keyword_0_92());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_93, null);
                      				
                    }

                    }
                    break;
                case 94 :
                    // InternalOptGrammar.g:8269:5: lv_type_0_94= 'bytes27'
                    {
                    lv_type_0_94=(Token)match(input,168,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_94, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes27Keyword_0_93());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_94, null);
                      				
                    }

                    }
                    break;
                case 95 :
                    // InternalOptGrammar.g:8280:5: lv_type_0_95= 'bytes28'
                    {
                    lv_type_0_95=(Token)match(input,169,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_95, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes28Keyword_0_94());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_95, null);
                      				
                    }

                    }
                    break;
                case 96 :
                    // InternalOptGrammar.g:8291:5: lv_type_0_96= 'bytes29'
                    {
                    lv_type_0_96=(Token)match(input,170,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_96, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes29Keyword_0_95());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_96, null);
                      				
                    }

                    }
                    break;
                case 97 :
                    // InternalOptGrammar.g:8302:5: lv_type_0_97= 'bytes30'
                    {
                    lv_type_0_97=(Token)match(input,171,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_97, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes30Keyword_0_96());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_97, null);
                      				
                    }

                    }
                    break;
                case 98 :
                    // InternalOptGrammar.g:8313:5: lv_type_0_98= 'bytes31'
                    {
                    lv_type_0_98=(Token)match(input,172,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_98, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes31Keyword_0_97());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_98, null);
                      				
                    }

                    }
                    break;
                case 99 :
                    // InternalOptGrammar.g:8324:5: lv_type_0_99= 'bytes32'
                    {
                    lv_type_0_99=(Token)match(input,173,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_99, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBytes32Keyword_0_98());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_99, null);
                      				
                    }

                    }
                    break;
                case 100 :
                    // InternalOptGrammar.g:8335:5: lv_type_0_100= 'string'
                    {
                    lv_type_0_100=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_100, grammarAccess.getElementaryTypeNameEnumAccess().getTypeStringKeyword_0_99());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_100, null);
                      				
                    }

                    }
                    break;
                case 101 :
                    // InternalOptGrammar.g:8346:5: lv_type_0_101= 'address'
                    {
                    lv_type_0_101=(Token)match(input,174,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_101, grammarAccess.getElementaryTypeNameEnumAccess().getTypeAddressKeyword_0_100());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_101, null);
                      				
                    }

                    }
                    break;
                case 102 :
                    // InternalOptGrammar.g:8357:5: lv_type_0_102= 'bool'
                    {
                    lv_type_0_102=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_102, grammarAccess.getElementaryTypeNameEnumAccess().getTypeBoolKeyword_0_101());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_102, null);
                      				
                    }

                    }
                    break;
                case 103 :
                    // InternalOptGrammar.g:8368:5: lv_type_0_103= 'real'
                    {
                    lv_type_0_103=(Token)match(input,175,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_103, grammarAccess.getElementaryTypeNameEnumAccess().getTypeRealKeyword_0_102());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_103, null);
                      				
                    }

                    }
                    break;
                case 104 :
                    // InternalOptGrammar.g:8379:5: lv_type_0_104= 'ureal'
                    {
                    lv_type_0_104=(Token)match(input,176,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_104, grammarAccess.getElementaryTypeNameEnumAccess().getTypeUrealKeyword_0_103());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElementaryTypeNameEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_104, null);
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementaryTypeNameEnum"


    // $ANTLR start "entryRuleMapLocationLiteral"
    // InternalOptGrammar.g:8395:1: entryRuleMapLocationLiteral returns [String current=null] : iv_ruleMapLocationLiteral= ruleMapLocationLiteral EOF ;
    public final String entryRuleMapLocationLiteral() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMapLocationLiteral = null;


        try {
            // InternalOptGrammar.g:8395:58: (iv_ruleMapLocationLiteral= ruleMapLocationLiteral EOF )
            // InternalOptGrammar.g:8396:2: iv_ruleMapLocationLiteral= ruleMapLocationLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapLocationLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMapLocationLiteral=ruleMapLocationLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapLocationLiteral.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapLocationLiteral"


    // $ANTLR start "ruleMapLocationLiteral"
    // InternalOptGrammar.g:8402:1: ruleMapLocationLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'storage' ;
    public final AntlrDatatypeRuleToken ruleMapLocationLiteral() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:8408:2: (kw= 'storage' )
            // InternalOptGrammar.g:8409:2: kw= 'storage'
            {
            kw=(Token)match(input,177,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getMapLocationLiteralAccess().getStorageKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapLocationLiteral"


    // $ANTLR start "entryRuleLocationSpecifierEnum"
    // InternalOptGrammar.g:8417:1: entryRuleLocationSpecifierEnum returns [EObject current=null] : iv_ruleLocationSpecifierEnum= ruleLocationSpecifierEnum EOF ;
    public final EObject entryRuleLocationSpecifierEnum() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLocationSpecifierEnum = null;


        try {
            // InternalOptGrammar.g:8417:62: (iv_ruleLocationSpecifierEnum= ruleLocationSpecifierEnum EOF )
            // InternalOptGrammar.g:8418:2: iv_ruleLocationSpecifierEnum= ruleLocationSpecifierEnum EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocationSpecifierEnumRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLocationSpecifierEnum=ruleLocationSpecifierEnum();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocationSpecifierEnum; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocationSpecifierEnum"


    // $ANTLR start "ruleLocationSpecifierEnum"
    // InternalOptGrammar.g:8424:1: ruleLocationSpecifierEnum returns [EObject current=null] : ( ( (lv_type_0_1= 'memory' | lv_type_0_2= ruleMapLocationLiteral | lv_type_0_3= 'calldata' ) ) ) ;
    public final EObject ruleLocationSpecifierEnum() throws RecognitionException {
        EObject current = null;

        Token lv_type_0_1=null;
        Token lv_type_0_3=null;
        AntlrDatatypeRuleToken lv_type_0_2 = null;



        	enterRule();

        try {
            // InternalOptGrammar.g:8430:2: ( ( ( (lv_type_0_1= 'memory' | lv_type_0_2= ruleMapLocationLiteral | lv_type_0_3= 'calldata' ) ) ) )
            // InternalOptGrammar.g:8431:2: ( ( (lv_type_0_1= 'memory' | lv_type_0_2= ruleMapLocationLiteral | lv_type_0_3= 'calldata' ) ) )
            {
            // InternalOptGrammar.g:8431:2: ( ( (lv_type_0_1= 'memory' | lv_type_0_2= ruleMapLocationLiteral | lv_type_0_3= 'calldata' ) ) )
            // InternalOptGrammar.g:8432:3: ( (lv_type_0_1= 'memory' | lv_type_0_2= ruleMapLocationLiteral | lv_type_0_3= 'calldata' ) )
            {
            // InternalOptGrammar.g:8432:3: ( (lv_type_0_1= 'memory' | lv_type_0_2= ruleMapLocationLiteral | lv_type_0_3= 'calldata' ) )
            // InternalOptGrammar.g:8433:4: (lv_type_0_1= 'memory' | lv_type_0_2= ruleMapLocationLiteral | lv_type_0_3= 'calldata' )
            {
            // InternalOptGrammar.g:8433:4: (lv_type_0_1= 'memory' | lv_type_0_2= ruleMapLocationLiteral | lv_type_0_3= 'calldata' )
            int alt128=3;
            switch ( input.LA(1) ) {
            case 178:
                {
                alt128=1;
                }
                break;
            case 177:
                {
                alt128=2;
                }
                break;
            case 179:
                {
                alt128=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 128, 0, input);

                throw nvae;
            }

            switch (alt128) {
                case 1 :
                    // InternalOptGrammar.g:8434:5: lv_type_0_1= 'memory'
                    {
                    lv_type_0_1=(Token)match(input,178,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_1, grammarAccess.getLocationSpecifierEnumAccess().getTypeMemoryKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLocationSpecifierEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_1, null);
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:8445:5: lv_type_0_2= ruleMapLocationLiteral
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLocationSpecifierEnumAccess().getTypeMapLocationLiteralParserRuleCall_0_1());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_0_2=ruleMapLocationLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLocationSpecifierEnumRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_0_2,
                      						"org.unicam.myGrammar.OptGrammar.MapLocationLiteral");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;
                case 3 :
                    // InternalOptGrammar.g:8461:5: lv_type_0_3= 'calldata'
                    {
                    lv_type_0_3=(Token)match(input,179,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_3, grammarAccess.getLocationSpecifierEnumAccess().getTypeCalldataKeyword_0_2());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLocationSpecifierEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_3, null);
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocationSpecifierEnum"


    // $ANTLR start "entryRuleVisibilityEnum"
    // InternalOptGrammar.g:8477:1: entryRuleVisibilityEnum returns [EObject current=null] : iv_ruleVisibilityEnum= ruleVisibilityEnum EOF ;
    public final EObject entryRuleVisibilityEnum() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVisibilityEnum = null;


        try {
            // InternalOptGrammar.g:8477:55: (iv_ruleVisibilityEnum= ruleVisibilityEnum EOF )
            // InternalOptGrammar.g:8478:2: iv_ruleVisibilityEnum= ruleVisibilityEnum EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVisibilityEnumRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVisibilityEnum=ruleVisibilityEnum();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVisibilityEnum; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVisibilityEnum"


    // $ANTLR start "ruleVisibilityEnum"
    // InternalOptGrammar.g:8484:1: ruleVisibilityEnum returns [EObject current=null] : ( ( (lv_type_0_1= 'public' | lv_type_0_2= 'internal' | lv_type_0_3= 'private' | lv_type_0_4= 'external' ) ) ) ;
    public final EObject ruleVisibilityEnum() throws RecognitionException {
        EObject current = null;

        Token lv_type_0_1=null;
        Token lv_type_0_2=null;
        Token lv_type_0_3=null;
        Token lv_type_0_4=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:8490:2: ( ( ( (lv_type_0_1= 'public' | lv_type_0_2= 'internal' | lv_type_0_3= 'private' | lv_type_0_4= 'external' ) ) ) )
            // InternalOptGrammar.g:8491:2: ( ( (lv_type_0_1= 'public' | lv_type_0_2= 'internal' | lv_type_0_3= 'private' | lv_type_0_4= 'external' ) ) )
            {
            // InternalOptGrammar.g:8491:2: ( ( (lv_type_0_1= 'public' | lv_type_0_2= 'internal' | lv_type_0_3= 'private' | lv_type_0_4= 'external' ) ) )
            // InternalOptGrammar.g:8492:3: ( (lv_type_0_1= 'public' | lv_type_0_2= 'internal' | lv_type_0_3= 'private' | lv_type_0_4= 'external' ) )
            {
            // InternalOptGrammar.g:8492:3: ( (lv_type_0_1= 'public' | lv_type_0_2= 'internal' | lv_type_0_3= 'private' | lv_type_0_4= 'external' ) )
            // InternalOptGrammar.g:8493:4: (lv_type_0_1= 'public' | lv_type_0_2= 'internal' | lv_type_0_3= 'private' | lv_type_0_4= 'external' )
            {
            // InternalOptGrammar.g:8493:4: (lv_type_0_1= 'public' | lv_type_0_2= 'internal' | lv_type_0_3= 'private' | lv_type_0_4= 'external' )
            int alt129=4;
            switch ( input.LA(1) ) {
            case 180:
                {
                alt129=1;
                }
                break;
            case 181:
                {
                alt129=2;
                }
                break;
            case 182:
                {
                alt129=3;
                }
                break;
            case 183:
                {
                alt129=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 129, 0, input);

                throw nvae;
            }

            switch (alt129) {
                case 1 :
                    // InternalOptGrammar.g:8494:5: lv_type_0_1= 'public'
                    {
                    lv_type_0_1=(Token)match(input,180,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_1, grammarAccess.getVisibilityEnumAccess().getTypePublicKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVisibilityEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_1, null);
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:8505:5: lv_type_0_2= 'internal'
                    {
                    lv_type_0_2=(Token)match(input,181,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_2, grammarAccess.getVisibilityEnumAccess().getTypeInternalKeyword_0_1());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVisibilityEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_2, null);
                      				
                    }

                    }
                    break;
                case 3 :
                    // InternalOptGrammar.g:8516:5: lv_type_0_3= 'private'
                    {
                    lv_type_0_3=(Token)match(input,182,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_3, grammarAccess.getVisibilityEnumAccess().getTypePrivateKeyword_0_2());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVisibilityEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_3, null);
                      				
                    }

                    }
                    break;
                case 4 :
                    // InternalOptGrammar.g:8527:5: lv_type_0_4= 'external'
                    {
                    lv_type_0_4=(Token)match(input,183,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_0_4, grammarAccess.getVisibilityEnumAccess().getTypeExternalKeyword_0_3());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVisibilityEnumRule());
                      					}
                      					setWithLastConsumed(current, "type", lv_type_0_4, null);
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVisibilityEnum"


    // $ANTLR start "entryRuleSpecialVariablesTypeEnum"
    // InternalOptGrammar.g:8543:1: entryRuleSpecialVariablesTypeEnum returns [EObject current=null] : iv_ruleSpecialVariablesTypeEnum= ruleSpecialVariablesTypeEnum EOF ;
    public final EObject entryRuleSpecialVariablesTypeEnum() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSpecialVariablesTypeEnum = null;


        try {
            // InternalOptGrammar.g:8543:65: (iv_ruleSpecialVariablesTypeEnum= ruleSpecialVariablesTypeEnum EOF )
            // InternalOptGrammar.g:8544:2: iv_ruleSpecialVariablesTypeEnum= ruleSpecialVariablesTypeEnum EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSpecialVariablesTypeEnumRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSpecialVariablesTypeEnum=ruleSpecialVariablesTypeEnum();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSpecialVariablesTypeEnum; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSpecialVariablesTypeEnum"


    // $ANTLR start "ruleSpecialVariablesTypeEnum"
    // InternalOptGrammar.g:8550:1: ruleSpecialVariablesTypeEnum returns [EObject current=null] : ( ( (lv_name_0_1= RULE_BLOCK | lv_name_0_2= RULE_MSG | lv_name_0_3= RULE_TX ) ) ) ;
    public final EObject ruleSpecialVariablesTypeEnum() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_1=null;
        Token lv_name_0_2=null;
        Token lv_name_0_3=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:8556:2: ( ( ( (lv_name_0_1= RULE_BLOCK | lv_name_0_2= RULE_MSG | lv_name_0_3= RULE_TX ) ) ) )
            // InternalOptGrammar.g:8557:2: ( ( (lv_name_0_1= RULE_BLOCK | lv_name_0_2= RULE_MSG | lv_name_0_3= RULE_TX ) ) )
            {
            // InternalOptGrammar.g:8557:2: ( ( (lv_name_0_1= RULE_BLOCK | lv_name_0_2= RULE_MSG | lv_name_0_3= RULE_TX ) ) )
            // InternalOptGrammar.g:8558:3: ( (lv_name_0_1= RULE_BLOCK | lv_name_0_2= RULE_MSG | lv_name_0_3= RULE_TX ) )
            {
            // InternalOptGrammar.g:8558:3: ( (lv_name_0_1= RULE_BLOCK | lv_name_0_2= RULE_MSG | lv_name_0_3= RULE_TX ) )
            // InternalOptGrammar.g:8559:4: (lv_name_0_1= RULE_BLOCK | lv_name_0_2= RULE_MSG | lv_name_0_3= RULE_TX )
            {
            // InternalOptGrammar.g:8559:4: (lv_name_0_1= RULE_BLOCK | lv_name_0_2= RULE_MSG | lv_name_0_3= RULE_TX )
            int alt130=3;
            switch ( input.LA(1) ) {
            case RULE_BLOCK:
                {
                alt130=1;
                }
                break;
            case RULE_MSG:
                {
                alt130=2;
                }
                break;
            case RULE_TX:
                {
                alt130=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 130, 0, input);

                throw nvae;
            }

            switch (alt130) {
                case 1 :
                    // InternalOptGrammar.g:8560:5: lv_name_0_1= RULE_BLOCK
                    {
                    lv_name_0_1=(Token)match(input,RULE_BLOCK,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_1, grammarAccess.getSpecialVariablesTypeEnumAccess().getNameBLOCKTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSpecialVariablesTypeEnumRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_1,
                      						"org.unicam.myGrammar.OptGrammar.BLOCK");
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:8575:5: lv_name_0_2= RULE_MSG
                    {
                    lv_name_0_2=(Token)match(input,RULE_MSG,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_2, grammarAccess.getSpecialVariablesTypeEnumAccess().getNameMSGTerminalRuleCall_0_1());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSpecialVariablesTypeEnumRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_2,
                      						"org.unicam.myGrammar.OptGrammar.MSG");
                      				
                    }

                    }
                    break;
                case 3 :
                    // InternalOptGrammar.g:8590:5: lv_name_0_3= RULE_TX
                    {
                    lv_name_0_3=(Token)match(input,RULE_TX,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_3, grammarAccess.getSpecialVariablesTypeEnumAccess().getNameTXTerminalRuleCall_0_2());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSpecialVariablesTypeEnumRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_3,
                      						"org.unicam.myGrammar.OptGrammar.TX");
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSpecialVariablesTypeEnum"


    // $ANTLR start "ruleLogicalOperationLiteral"
    // InternalOptGrammar.g:8610:1: ruleLogicalOperationLiteral returns [Enumerator current=null] : ( (enumLiteral_0= '!=' ) | (enumLiteral_1= '==' ) | (enumLiteral_2= '&&' ) | (enumLiteral_3= '||' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '<=' ) | (enumLiteral_6= '>' ) | (enumLiteral_7= '<' ) ) ;
    public final Enumerator ruleLogicalOperationLiteral() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:8616:2: ( ( (enumLiteral_0= '!=' ) | (enumLiteral_1= '==' ) | (enumLiteral_2= '&&' ) | (enumLiteral_3= '||' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '<=' ) | (enumLiteral_6= '>' ) | (enumLiteral_7= '<' ) ) )
            // InternalOptGrammar.g:8617:2: ( (enumLiteral_0= '!=' ) | (enumLiteral_1= '==' ) | (enumLiteral_2= '&&' ) | (enumLiteral_3= '||' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '<=' ) | (enumLiteral_6= '>' ) | (enumLiteral_7= '<' ) )
            {
            // InternalOptGrammar.g:8617:2: ( (enumLiteral_0= '!=' ) | (enumLiteral_1= '==' ) | (enumLiteral_2= '&&' ) | (enumLiteral_3= '||' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '<=' ) | (enumLiteral_6= '>' ) | (enumLiteral_7= '<' ) )
            int alt131=8;
            switch ( input.LA(1) ) {
            case 184:
                {
                alt131=1;
                }
                break;
            case 185:
                {
                alt131=2;
                }
                break;
            case 186:
                {
                alt131=3;
                }
                break;
            case 187:
                {
                alt131=4;
                }
                break;
            case 188:
                {
                alt131=5;
                }
                break;
            case 189:
                {
                alt131=6;
                }
                break;
            case 190:
                {
                alt131=7;
                }
                break;
            case 191:
                {
                alt131=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 131, 0, input);

                throw nvae;
            }

            switch (alt131) {
                case 1 :
                    // InternalOptGrammar.g:8618:3: (enumLiteral_0= '!=' )
                    {
                    // InternalOptGrammar.g:8618:3: (enumLiteral_0= '!=' )
                    // InternalOptGrammar.g:8619:4: enumLiteral_0= '!='
                    {
                    enumLiteral_0=(Token)match(input,184,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getLogicalOperationLiteralAccess().getNOTEQUALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getLogicalOperationLiteralAccess().getNOTEQUALEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:8626:3: (enumLiteral_1= '==' )
                    {
                    // InternalOptGrammar.g:8626:3: (enumLiteral_1= '==' )
                    // InternalOptGrammar.g:8627:4: enumLiteral_1= '=='
                    {
                    enumLiteral_1=(Token)match(input,185,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getLogicalOperationLiteralAccess().getEQUALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getLogicalOperationLiteralAccess().getEQUALEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalOptGrammar.g:8634:3: (enumLiteral_2= '&&' )
                    {
                    // InternalOptGrammar.g:8634:3: (enumLiteral_2= '&&' )
                    // InternalOptGrammar.g:8635:4: enumLiteral_2= '&&'
                    {
                    enumLiteral_2=(Token)match(input,186,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getLogicalOperationLiteralAccess().getANDEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getLogicalOperationLiteralAccess().getANDEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalOptGrammar.g:8642:3: (enumLiteral_3= '||' )
                    {
                    // InternalOptGrammar.g:8642:3: (enumLiteral_3= '||' )
                    // InternalOptGrammar.g:8643:4: enumLiteral_3= '||'
                    {
                    enumLiteral_3=(Token)match(input,187,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getLogicalOperationLiteralAccess().getOREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getLogicalOperationLiteralAccess().getOREnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalOptGrammar.g:8650:3: (enumLiteral_4= '>=' )
                    {
                    // InternalOptGrammar.g:8650:3: (enumLiteral_4= '>=' )
                    // InternalOptGrammar.g:8651:4: enumLiteral_4= '>='
                    {
                    enumLiteral_4=(Token)match(input,188,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getLogicalOperationLiteralAccess().getGTEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getLogicalOperationLiteralAccess().getGTEEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalOptGrammar.g:8658:3: (enumLiteral_5= '<=' )
                    {
                    // InternalOptGrammar.g:8658:3: (enumLiteral_5= '<=' )
                    // InternalOptGrammar.g:8659:4: enumLiteral_5= '<='
                    {
                    enumLiteral_5=(Token)match(input,189,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getLogicalOperationLiteralAccess().getLTEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getLogicalOperationLiteralAccess().getLTEEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalOptGrammar.g:8666:3: (enumLiteral_6= '>' )
                    {
                    // InternalOptGrammar.g:8666:3: (enumLiteral_6= '>' )
                    // InternalOptGrammar.g:8667:4: enumLiteral_6= '>'
                    {
                    enumLiteral_6=(Token)match(input,190,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getLogicalOperationLiteralAccess().getGTEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getLogicalOperationLiteralAccess().getGTEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalOptGrammar.g:8674:3: (enumLiteral_7= '<' )
                    {
                    // InternalOptGrammar.g:8674:3: (enumLiteral_7= '<' )
                    // InternalOptGrammar.g:8675:4: enumLiteral_7= '<'
                    {
                    enumLiteral_7=(Token)match(input,191,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getLogicalOperationLiteralAccess().getLTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getLogicalOperationLiteralAccess().getLTEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOperationLiteral"


    // $ANTLR start "ruleBooleanLiteralEnum"
    // InternalOptGrammar.g:8685:1: ruleBooleanLiteralEnum returns [Enumerator current=null] : ( (enumLiteral_0= 'true' ) | (enumLiteral_1= 'false' ) ) ;
    public final Enumerator ruleBooleanLiteralEnum() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:8691:2: ( ( (enumLiteral_0= 'true' ) | (enumLiteral_1= 'false' ) ) )
            // InternalOptGrammar.g:8692:2: ( (enumLiteral_0= 'true' ) | (enumLiteral_1= 'false' ) )
            {
            // InternalOptGrammar.g:8692:2: ( (enumLiteral_0= 'true' ) | (enumLiteral_1= 'false' ) )
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==192) ) {
                alt132=1;
            }
            else if ( (LA132_0==193) ) {
                alt132=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 132, 0, input);

                throw nvae;
            }
            switch (alt132) {
                case 1 :
                    // InternalOptGrammar.g:8693:3: (enumLiteral_0= 'true' )
                    {
                    // InternalOptGrammar.g:8693:3: (enumLiteral_0= 'true' )
                    // InternalOptGrammar.g:8694:4: enumLiteral_0= 'true'
                    {
                    enumLiteral_0=(Token)match(input,192,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getBooleanLiteralEnumAccess().getTRUEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getBooleanLiteralEnumAccess().getTRUEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:8701:3: (enumLiteral_1= 'false' )
                    {
                    // InternalOptGrammar.g:8701:3: (enumLiteral_1= 'false' )
                    // InternalOptGrammar.g:8702:4: enumLiteral_1= 'false'
                    {
                    enumLiteral_1=(Token)match(input,193,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getBooleanLiteralEnumAccess().getFALSEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getBooleanLiteralEnumAccess().getFALSEEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBooleanLiteralEnum"


    // $ANTLR start "ruleEtherSubDenominationEnum"
    // InternalOptGrammar.g:8712:1: ruleEtherSubDenominationEnum returns [Enumerator current=null] : ( (enumLiteral_0= 'wei' ) | (enumLiteral_1= 'szabo' ) | (enumLiteral_2= 'finney' ) | (enumLiteral_3= 'ether' ) ) ;
    public final Enumerator ruleEtherSubDenominationEnum() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:8718:2: ( ( (enumLiteral_0= 'wei' ) | (enumLiteral_1= 'szabo' ) | (enumLiteral_2= 'finney' ) | (enumLiteral_3= 'ether' ) ) )
            // InternalOptGrammar.g:8719:2: ( (enumLiteral_0= 'wei' ) | (enumLiteral_1= 'szabo' ) | (enumLiteral_2= 'finney' ) | (enumLiteral_3= 'ether' ) )
            {
            // InternalOptGrammar.g:8719:2: ( (enumLiteral_0= 'wei' ) | (enumLiteral_1= 'szabo' ) | (enumLiteral_2= 'finney' ) | (enumLiteral_3= 'ether' ) )
            int alt133=4;
            switch ( input.LA(1) ) {
            case 194:
                {
                alt133=1;
                }
                break;
            case 195:
                {
                alt133=2;
                }
                break;
            case 196:
                {
                alt133=3;
                }
                break;
            case 197:
                {
                alt133=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 133, 0, input);

                throw nvae;
            }

            switch (alt133) {
                case 1 :
                    // InternalOptGrammar.g:8720:3: (enumLiteral_0= 'wei' )
                    {
                    // InternalOptGrammar.g:8720:3: (enumLiteral_0= 'wei' )
                    // InternalOptGrammar.g:8721:4: enumLiteral_0= 'wei'
                    {
                    enumLiteral_0=(Token)match(input,194,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEtherSubDenominationEnumAccess().getWEIEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getEtherSubDenominationEnumAccess().getWEIEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:8728:3: (enumLiteral_1= 'szabo' )
                    {
                    // InternalOptGrammar.g:8728:3: (enumLiteral_1= 'szabo' )
                    // InternalOptGrammar.g:8729:4: enumLiteral_1= 'szabo'
                    {
                    enumLiteral_1=(Token)match(input,195,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEtherSubDenominationEnumAccess().getSZABOEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getEtherSubDenominationEnumAccess().getSZABOEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalOptGrammar.g:8736:3: (enumLiteral_2= 'finney' )
                    {
                    // InternalOptGrammar.g:8736:3: (enumLiteral_2= 'finney' )
                    // InternalOptGrammar.g:8737:4: enumLiteral_2= 'finney'
                    {
                    enumLiteral_2=(Token)match(input,196,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEtherSubDenominationEnumAccess().getFINNEYEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getEtherSubDenominationEnumAccess().getFINNEYEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalOptGrammar.g:8744:3: (enumLiteral_3= 'ether' )
                    {
                    // InternalOptGrammar.g:8744:3: (enumLiteral_3= 'ether' )
                    // InternalOptGrammar.g:8745:4: enumLiteral_3= 'ether'
                    {
                    enumLiteral_3=(Token)match(input,197,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEtherSubDenominationEnumAccess().getETHEREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getEtherSubDenominationEnumAccess().getETHEREnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEtherSubDenominationEnum"


    // $ANTLR start "ruleTimeSubdenominationEnum"
    // InternalOptGrammar.g:8755:1: ruleTimeSubdenominationEnum returns [Enumerator current=null] : ( (enumLiteral_0= 'seconds' ) | (enumLiteral_1= 'minutes' ) | (enumLiteral_2= 'hours' ) | (enumLiteral_3= 'days' ) | (enumLiteral_4= 'weeks' ) | (enumLiteral_5= 'years' ) ) ;
    public final Enumerator ruleTimeSubdenominationEnum() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;


        	enterRule();

        try {
            // InternalOptGrammar.g:8761:2: ( ( (enumLiteral_0= 'seconds' ) | (enumLiteral_1= 'minutes' ) | (enumLiteral_2= 'hours' ) | (enumLiteral_3= 'days' ) | (enumLiteral_4= 'weeks' ) | (enumLiteral_5= 'years' ) ) )
            // InternalOptGrammar.g:8762:2: ( (enumLiteral_0= 'seconds' ) | (enumLiteral_1= 'minutes' ) | (enumLiteral_2= 'hours' ) | (enumLiteral_3= 'days' ) | (enumLiteral_4= 'weeks' ) | (enumLiteral_5= 'years' ) )
            {
            // InternalOptGrammar.g:8762:2: ( (enumLiteral_0= 'seconds' ) | (enumLiteral_1= 'minutes' ) | (enumLiteral_2= 'hours' ) | (enumLiteral_3= 'days' ) | (enumLiteral_4= 'weeks' ) | (enumLiteral_5= 'years' ) )
            int alt134=6;
            switch ( input.LA(1) ) {
            case 198:
                {
                alt134=1;
                }
                break;
            case 199:
                {
                alt134=2;
                }
                break;
            case 200:
                {
                alt134=3;
                }
                break;
            case 201:
                {
                alt134=4;
                }
                break;
            case 202:
                {
                alt134=5;
                }
                break;
            case 203:
                {
                alt134=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 134, 0, input);

                throw nvae;
            }

            switch (alt134) {
                case 1 :
                    // InternalOptGrammar.g:8763:3: (enumLiteral_0= 'seconds' )
                    {
                    // InternalOptGrammar.g:8763:3: (enumLiteral_0= 'seconds' )
                    // InternalOptGrammar.g:8764:4: enumLiteral_0= 'seconds'
                    {
                    enumLiteral_0=(Token)match(input,198,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getTimeSubdenominationEnumAccess().getSECONDSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getTimeSubdenominationEnumAccess().getSECONDSEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOptGrammar.g:8771:3: (enumLiteral_1= 'minutes' )
                    {
                    // InternalOptGrammar.g:8771:3: (enumLiteral_1= 'minutes' )
                    // InternalOptGrammar.g:8772:4: enumLiteral_1= 'minutes'
                    {
                    enumLiteral_1=(Token)match(input,199,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getTimeSubdenominationEnumAccess().getMINUTESEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getTimeSubdenominationEnumAccess().getMINUTESEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalOptGrammar.g:8779:3: (enumLiteral_2= 'hours' )
                    {
                    // InternalOptGrammar.g:8779:3: (enumLiteral_2= 'hours' )
                    // InternalOptGrammar.g:8780:4: enumLiteral_2= 'hours'
                    {
                    enumLiteral_2=(Token)match(input,200,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getTimeSubdenominationEnumAccess().getHOURSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getTimeSubdenominationEnumAccess().getHOURSEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalOptGrammar.g:8787:3: (enumLiteral_3= 'days' )
                    {
                    // InternalOptGrammar.g:8787:3: (enumLiteral_3= 'days' )
                    // InternalOptGrammar.g:8788:4: enumLiteral_3= 'days'
                    {
                    enumLiteral_3=(Token)match(input,201,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getTimeSubdenominationEnumAccess().getDAYSEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getTimeSubdenominationEnumAccess().getDAYSEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalOptGrammar.g:8795:3: (enumLiteral_4= 'weeks' )
                    {
                    // InternalOptGrammar.g:8795:3: (enumLiteral_4= 'weeks' )
                    // InternalOptGrammar.g:8796:4: enumLiteral_4= 'weeks'
                    {
                    enumLiteral_4=(Token)match(input,202,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getTimeSubdenominationEnumAccess().getWEEKSEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getTimeSubdenominationEnumAccess().getWEEKSEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalOptGrammar.g:8803:3: (enumLiteral_5= 'years' )
                    {
                    // InternalOptGrammar.g:8803:3: (enumLiteral_5= 'years' )
                    // InternalOptGrammar.g:8804:4: enumLiteral_5= 'years'
                    {
                    enumLiteral_5=(Token)match(input,203,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getTimeSubdenominationEnumAccess().getYEARSEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getTimeSubdenominationEnumAccess().getYEARSEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTimeSubdenominationEnum"

    // $ANTLR start synpred1_InternalOptGrammar
    public final void synpred1_InternalOptGrammar_fragment() throws RecognitionException {   
        // InternalOptGrammar.g:5015:5: ( 'else' )
        // InternalOptGrammar.g:5015:6: 'else'
        {
        match(input,51,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_InternalOptGrammar

    // $ANTLR start synpred2_InternalOptGrammar
    public final void synpred2_InternalOptGrammar_fragment() throws RecognitionException {   
        // InternalOptGrammar.g:5157:4: ( ';' )
        // InternalOptGrammar.g:5157:5: ';'
        {
        match(input,18,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred2_InternalOptGrammar

    // Delegated rules

    public final boolean synpred1_InternalOptGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalOptGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalOptGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalOptGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA9 dfa9 = new DFA9(this);
    protected DFA35 dfa35 = new DFA35(this);
    static final String dfa_1s = "\u0088\uffff";
    static final String dfa_2s = "\161\uffff\1\u0086\22\uffff\2\u0086\1\uffff\1\u0086";
    static final String dfa_3s = "\162\4\2\uffff\7\4\1\uffff\10\4\2\22\1\uffff\1\22";
    static final String dfa_4s = "\5\u00b7\4\u00b0\150\4\1\50\2\uffff\1\u00b7\4\u00b0\2\4\1\uffff\10\u00b0\2\50\1\uffff\1\50";
    static final String dfa_5s = "\162\uffff\1\2\1\4\7\uffff\1\1\12\uffff\1\3\1\uffff";
    static final String dfa_6s = "\u0088\uffff}>";
    static final String[] dfa_7s = {
            "\1\161\17\uffff\1\163\6\uffff\1\4\1\11\1\12\3\uffff\1\162\51\uffff\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135\1\136\1\137\1\140\1\141\1\142\1\143\1\144\1\145\1\146\1\147\1\150\1\151\1\152\1\153\1\154\1\155\1\156\1\157\1\160\1\2\1\1\1\3\1\5\1\6\1\7\1\10",
            "\1\173\26\uffff\1\164\1\171\1\172\55\uffff\146\173\3\uffff\1\165\1\166\1\167\1\170",
            "\1\173\26\uffff\1\164\1\171\1\172\3\uffff\1\162\51\uffff\146\173\3\uffff\1\174\1\175\1\176\1\177",
            "\1\173\26\uffff\1\164\1\171\1\172\55\uffff\146\173\3\uffff\1\165\1\166\1\167\1\170",
            "\1\173\27\uffff\1\11\1\12\55\uffff\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135\1\136\1\137\1\140\1\141\1\142\1\143\1\144\1\145\1\146\1\147\1\150\1\151\1\152\1\153\1\154\1\155\1\156\1\157\1\160\3\uffff\1\u0080\1\u0081\1\u0082\1\u0083",
            "\1\173\27\uffff\1\11\1\12\3\uffff\1\162\51\uffff\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135\1\136\1\137\1\140\1\141\1\142\1\143\1\144\1\145\1\146\1\147\1\150\1\151\1\152\1\153\1\154\1\155\1\156\1\157\1\160",
            "\1\173\27\uffff\1\11\1\12\3\uffff\1\162\51\uffff\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135\1\136\1\137\1\140\1\141\1\142\1\143\1\144\1\145\1\146\1\147\1\150\1\151\1\152\1\153\1\154\1\155\1\156\1\157\1\160",
            "\1\173\27\uffff\1\11\1\12\3\uffff\1\162\51\uffff\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135\1\136\1\137\1\140\1\141\1\142\1\143\1\144\1\145\1\146\1\147\1\150\1\151\1\152\1\153\1\154\1\155\1\156\1\157\1\160",
            "\1\173\27\uffff\1\11\1\12\3\uffff\1\162\51\uffff\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135\1\136\1\137\1\140\1\141\1\142\1\143\1\144\1\145\1\146\1\147\1\150\1\151\1\152\1\153\1\154\1\155\1\156\1\157\1\160",
            "\1\u0084",
            "\1\u0084",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\u0085",
            "\1\173\15\uffff\1\u0086\3\uffff\2\u0086\14\uffff\5\u0086",
            "",
            "",
            "\1\173\27\uffff\1\171\1\172\55\uffff\146\173\3\uffff\1\165\1\166\1\167\1\170",
            "\1\173\27\uffff\1\171\1\172\55\uffff\146\173",
            "\1\173\27\uffff\1\171\1\172\55\uffff\146\173",
            "\1\173\27\uffff\1\171\1\172\55\uffff\146\173",
            "\1\173\27\uffff\1\171\1\172\55\uffff\146\173",
            "\1\u0087",
            "\1\u0087",
            "",
            "\1\173\27\uffff\1\171\1\172\3\uffff\1\162\51\uffff\146\173",
            "\1\173\27\uffff\1\171\1\172\3\uffff\1\162\51\uffff\146\173",
            "\1\173\27\uffff\1\171\1\172\3\uffff\1\162\51\uffff\146\173",
            "\1\173\27\uffff\1\171\1\172\3\uffff\1\162\51\uffff\146\173",
            "\1\173\27\uffff\1\11\1\12\55\uffff\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135\1\136\1\137\1\140\1\141\1\142\1\143\1\144\1\145\1\146\1\147\1\150\1\151\1\152\1\153\1\154\1\155\1\156\1\157\1\160",
            "\1\173\27\uffff\1\11\1\12\55\uffff\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135\1\136\1\137\1\140\1\141\1\142\1\143\1\144\1\145\1\146\1\147\1\150\1\151\1\152\1\153\1\154\1\155\1\156\1\157\1\160",
            "\1\173\27\uffff\1\11\1\12\55\uffff\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135\1\136\1\137\1\140\1\141\1\142\1\143\1\144\1\145\1\146\1\147\1\150\1\151\1\152\1\153\1\154\1\155\1\156\1\157\1\160",
            "\1\173\27\uffff\1\11\1\12\55\uffff\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135\1\136\1\137\1\140\1\141\1\142\1\143\1\144\1\145\1\146\1\147\1\150\1\151\1\152\1\153\1\154\1\155\1\156\1\157\1\160",
            "\1\u0086\3\uffff\2\u0086\1\uffff\1\173\12\uffff\5\u0086",
            "\1\u0086\3\uffff\2\u0086\1\uffff\1\173\12\uffff\5\u0086",
            "",
            "\1\u0086\3\uffff\2\u0086\1\uffff\1\173\12\uffff\5\u0086"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA9 extends DFA {

        public DFA9(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 9;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "523:2: (this_ArrayDefinitionDeclaration_0= ruleArrayDefinitionDeclaration | this_MappingDeclaration_1= ruleMappingDeclaration | this_PrimaryTypeDefinitionDeclaration_2= rulePrimaryTypeDefinitionDeclaration | this_ConcreteStructureDefinitionDeclaration_3= ruleConcreteStructureDefinitionDeclaration )";
        }
    }
    static final String dfa_8s = "\13\uffff";
    static final String dfa_9s = "\1\33\5\34\1\uffff\2\4\2\uffff";
    static final String dfa_10s = "\2\u00b7\4\u00b0\1\uffff\2\4\2\uffff";
    static final String dfa_11s = "\6\uffff\1\1\2\uffff\1\2\1\1";
    static final String dfa_12s = "\13\uffff}>";
    static final String[] dfa_13s = {
            "\1\1\1\7\1\10\55\uffff\146\6\3\11\1\2\1\3\1\4\1\5",
            "\1\7\1\10\55\uffff\146\6\3\uffff\1\2\1\3\1\4\1\5",
            "\1\7\1\10\55\uffff\146\6",
            "\1\7\1\10\55\uffff\146\6",
            "\1\7\1\10\55\uffff\146\6",
            "\1\7\1\10\55\uffff\146\6",
            "",
            "\1\12",
            "\1\12",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA35 extends DFA {

        public DFA35(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 35;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "1607:2: (this_ArrayableDeclaration_0= ruleArrayableDeclaration | this_NonArrayableDeclaration_1= ruleNonArrayableDeclaration )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000010002L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000300238380010L,0xFFFFFFFFFFFFF800L,0x00FFFFFFFFFFFFFFL});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000238380010L,0xFFFFFFFFFFFFF800L,0x00FFFFFFFFFFFFFFL});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000480000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000800002L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000003000010L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000003000002L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0xD800000004000FE0L,0x000000000000043FL,0x0000000000000000L,0x0000000000000003L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000004400000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0xD800000000000FE0L,0x000000000000043FL,0x0000000000000000L,0x0000000000000003L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000038000010L,0xFFFFFFFFFFFFF800L,0x00F1FFFFFFFFFFFFL});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000030000010L,0xFFFFFFFFFFFFF800L,0x00F1FFFFFFFFFFFFL});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000030000010L,0xFFFFFFFFFFFFF800L,0x0001FFFFFFFFFFFFL});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000004000020L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000102000002L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000200000000L,0x0000000000000000L,0x00F2000000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000030000000L,0xFFFFFFFFFFFFF800L,0x0001FFFFFFFFFFFFL});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000230000010L,0xFFFFFFFFFFFFF800L,0x00F3FFFFFFFFFFFFL});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000001001000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x000001E000800002L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0xD800060000000FF0L,0x000000000000043FL,0x0000000000000000L,0x0000000000000003L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000060000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000038000000L,0x0000000000000000L,0x00F0000000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000030000000L,0x0000000000000000L,0x00F0000000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000030000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000030000000L,0xFFFFFFFFFFFFF800L,0x00F1FFFFFFFFFFFFL});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000008000010L,0x0000000000000000L,0x000E000000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000020010L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000008000010L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0xD800000003000FE0L,0x000000000000043FL,0x0000000000000000L,0x0000000000000003L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000001238300010L,0xFFFFFFFFFFFFF800L,0x00FFFFFFFFFFFFFFL});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000001000400000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000238300010L,0xFFFFFFFFFFFFF800L,0x00FFFFFFFFFFFFFFL});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000400008020000L,0x0000000000000000L,0x00F0000000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0xD93406023B380FF0L,0xFFFFFFFFFFFFFC3FL,0x00FFFFFFFFFFFFFFL,0x0000000000000003L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000002800000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x000001E102800000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x000001E000800000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0xD800001000000FE0L,0x000000000000043FL,0x0000000000000000L,0x0000000000000003L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000080010L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0xD800001000400FE0L,0x000000000000043FL,0x0000000000000000L,0x0000000000000003L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0xD800000000400FE0L,0x000000000000043FL,0x0000000000000000L,0x0000000000000003L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000800008000010L,0x0000000000000000L,0x00FE000000000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000840000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000800408000010L,0x0000000000000000L,0x00FE000000000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000502000002L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000800008000012L,0x0000000000000000L,0x00FE000000000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0xDFF7000230020FE0L,0xFFFFFFFFFFFFFC3FL,0x00F3FFFFFFFFFFFFL,0x0000000000000003L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0008000000000002L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0xDFF7000230060FE0L,0xFFFFFFFFFFFFFC3FL,0x00F3FFFFFFFFFFFFL,0x0000000000000003L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0xD800000000040FE0L,0x000000000000043FL,0x0000000000000000L,0x0000000000000003L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0xDFF7001230020FE0L,0xFFFFFFFFFFFFFC3FL,0x00F3FFFFFFFFFFFFL,0x0000000000000003L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0xDFF70002300A0FE0L,0xFFFFFFFFFFFFFC3FL,0x00F3FFFFFFFFFFFFL,0x0000000000000003L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000040002L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0xFF00000000000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0xC000000000000FE0L,0x000000000000043FL,0x0000000000000000L,0x0000000000000003L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0xC800000000000FE0L,0x000000000000043FL,0x0000000000000000L,0x0000000000000003L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0xD83406063B300FF0L,0xFFFFFFFFFFFFFC3FL,0x00FFFFFFFFFFFFFFL,0x0000000000000003L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000002L,0x00000000000003C0L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x00000004000001A0L,0x0000000000000400L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000022L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x000000000000003CL});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000FC0L});

}