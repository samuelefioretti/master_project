/**
 * generated by Xtext 2.19.0
 */
package org.unicam.tryGrammar.myGrammar.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.unicam.tryGrammar.myGrammar.Expression;
import org.unicam.tryGrammar.myGrammar.IfStatement;
import org.unicam.tryGrammar.myGrammar.MyGrammarPackage;
import org.unicam.tryGrammar.myGrammar.Statement;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>If Statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.unicam.tryGrammar.myGrammar.impl.IfStatementImpl#getCondition <em>Condition</em>}</li>
 *   <li>{@link org.unicam.tryGrammar.myGrammar.impl.IfStatementImpl#getTrueBody <em>True Body</em>}</li>
 *   <li>{@link org.unicam.tryGrammar.myGrammar.impl.IfStatementImpl#getFalseBody <em>False Body</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IfStatementImpl extends StatementImpl implements IfStatement
{
  /**
   * The cached value of the '{@link #getCondition() <em>Condition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCondition()
   * @generated
   * @ordered
   */
  protected Expression condition;

  /**
   * The cached value of the '{@link #getTrueBody() <em>True Body</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTrueBody()
   * @generated
   * @ordered
   */
  protected Statement trueBody;

  /**
   * The cached value of the '{@link #getFalseBody() <em>False Body</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFalseBody()
   * @generated
   * @ordered
   */
  protected Statement falseBody;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IfStatementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyGrammarPackage.eINSTANCE.getIfStatement();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getCondition()
  {
    return condition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCondition(Expression newCondition, NotificationChain msgs)
  {
    Expression oldCondition = condition;
    condition = newCondition;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyGrammarPackage.IF_STATEMENT__CONDITION, oldCondition, newCondition);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCondition(Expression newCondition)
  {
    if (newCondition != condition)
    {
      NotificationChain msgs = null;
      if (condition != null)
        msgs = ((InternalEObject)condition).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyGrammarPackage.IF_STATEMENT__CONDITION, null, msgs);
      if (newCondition != null)
        msgs = ((InternalEObject)newCondition).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyGrammarPackage.IF_STATEMENT__CONDITION, null, msgs);
      msgs = basicSetCondition(newCondition, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyGrammarPackage.IF_STATEMENT__CONDITION, newCondition, newCondition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Statement getTrueBody()
  {
    return trueBody;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTrueBody(Statement newTrueBody, NotificationChain msgs)
  {
    Statement oldTrueBody = trueBody;
    trueBody = newTrueBody;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyGrammarPackage.IF_STATEMENT__TRUE_BODY, oldTrueBody, newTrueBody);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTrueBody(Statement newTrueBody)
  {
    if (newTrueBody != trueBody)
    {
      NotificationChain msgs = null;
      if (trueBody != null)
        msgs = ((InternalEObject)trueBody).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyGrammarPackage.IF_STATEMENT__TRUE_BODY, null, msgs);
      if (newTrueBody != null)
        msgs = ((InternalEObject)newTrueBody).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyGrammarPackage.IF_STATEMENT__TRUE_BODY, null, msgs);
      msgs = basicSetTrueBody(newTrueBody, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyGrammarPackage.IF_STATEMENT__TRUE_BODY, newTrueBody, newTrueBody));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Statement getFalseBody()
  {
    return falseBody;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFalseBody(Statement newFalseBody, NotificationChain msgs)
  {
    Statement oldFalseBody = falseBody;
    falseBody = newFalseBody;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyGrammarPackage.IF_STATEMENT__FALSE_BODY, oldFalseBody, newFalseBody);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFalseBody(Statement newFalseBody)
  {
    if (newFalseBody != falseBody)
    {
      NotificationChain msgs = null;
      if (falseBody != null)
        msgs = ((InternalEObject)falseBody).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyGrammarPackage.IF_STATEMENT__FALSE_BODY, null, msgs);
      if (newFalseBody != null)
        msgs = ((InternalEObject)newFalseBody).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyGrammarPackage.IF_STATEMENT__FALSE_BODY, null, msgs);
      msgs = basicSetFalseBody(newFalseBody, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyGrammarPackage.IF_STATEMENT__FALSE_BODY, newFalseBody, newFalseBody));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyGrammarPackage.IF_STATEMENT__CONDITION:
        return basicSetCondition(null, msgs);
      case MyGrammarPackage.IF_STATEMENT__TRUE_BODY:
        return basicSetTrueBody(null, msgs);
      case MyGrammarPackage.IF_STATEMENT__FALSE_BODY:
        return basicSetFalseBody(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyGrammarPackage.IF_STATEMENT__CONDITION:
        return getCondition();
      case MyGrammarPackage.IF_STATEMENT__TRUE_BODY:
        return getTrueBody();
      case MyGrammarPackage.IF_STATEMENT__FALSE_BODY:
        return getFalseBody();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyGrammarPackage.IF_STATEMENT__CONDITION:
        setCondition((Expression)newValue);
        return;
      case MyGrammarPackage.IF_STATEMENT__TRUE_BODY:
        setTrueBody((Statement)newValue);
        return;
      case MyGrammarPackage.IF_STATEMENT__FALSE_BODY:
        setFalseBody((Statement)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyGrammarPackage.IF_STATEMENT__CONDITION:
        setCondition((Expression)null);
        return;
      case MyGrammarPackage.IF_STATEMENT__TRUE_BODY:
        setTrueBody((Statement)null);
        return;
      case MyGrammarPackage.IF_STATEMENT__FALSE_BODY:
        setFalseBody((Statement)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyGrammarPackage.IF_STATEMENT__CONDITION:
        return condition != null;
      case MyGrammarPackage.IF_STATEMENT__TRUE_BODY:
        return trueBody != null;
      case MyGrammarPackage.IF_STATEMENT__FALSE_BODY:
        return falseBody != null;
    }
    return super.eIsSet(featureID);
  }

} //IfStatementImpl
