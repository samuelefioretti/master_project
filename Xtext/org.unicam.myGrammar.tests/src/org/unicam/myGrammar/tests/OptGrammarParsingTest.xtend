/*
 * generated by Xtext 2.20.0
 */
package org.unicam.myGrammar.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import org.unicam.myGrammar.optGrammar.Model

@ExtendWith(InjectionExtension)
@InjectWith(OptGrammarInjectorProvider)
class OptGrammarParsingTest {
	@Inject
	ParseHelper<Model> parseHelper

	@Test
	def void testNotBoolean() {
		val result = parseHelper.parse('''
			NOT true;
			NOT false;
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}

	@Test
	def void testNotNonBoolean() {
		testNotInt()
		testNotString()
	}

	def void testNotInt() {
		val result = parseHelper.parse('''
			NOT 1;
			NOT 2;
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertFalse(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}

	def void testNotString() {
		val result = parseHelper.parse('''
			NOT "String";
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertFalse(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
